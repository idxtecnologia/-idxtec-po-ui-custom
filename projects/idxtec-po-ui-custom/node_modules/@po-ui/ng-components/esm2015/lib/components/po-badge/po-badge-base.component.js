import { Input, Directive } from '@angular/core';
import { convertToInt } from '../../utils/util';
const PO_BADGE_COLORS = [
    'color-01',
    'color-02',
    'color-03',
    'color-04',
    'color-05',
    'color-06',
    'color-07',
    'color-08',
    'color-09',
    'color-10',
    'color-11',
    'color-12'
];
const PO_BADGE_COLOR_DEFAULT = 'color-07';
/**
 * @description
 *
 * @docsPrivate
 *
 * Componente utilizado no `po-menu` para exibir por exemplo a quantidade de tarefas pendentes.
 */
export class PoBadgeBaseComponent {
    /**
     * @optional
     *
     * @description
     *
     * Define a cor de fundo do componente e aceita os valores:
     *
     * <span class="dot po-color-01"></span> `color-01`
     *
     * <span class="dot po-color-02"></span> `color-02`
     *
     * <span class="dot po-color-03"></span> `color-03`
     *
     * <span class="dot po-color-04"></span> `color-04`
     *
     * <span class="dot po-color-05"></span> `color-05`
     *
     * <span class="dot po-color-06"></span> `color-06`
     *
     * <span class="dot po-color-07"></span> `color-07`
     *
     * <span class="dot po-color-08"></span> `color-08`
     *
     * <span class="dot po-color-09"></span> `color-09`
     *
     * <span class="dot po-color-10"></span> `color-10`
     *
     * <span class="dot po-color-11"></span> `color-11`
     *
     * <span class="dot po-color-12"></span> `color-12`
     *
     * @default `color-07`
     */
    set color(value) {
        this._color = PO_BADGE_COLORS.includes(value) ? value : PO_BADGE_COLOR_DEFAULT;
    }
    get color() {
        return this._color;
    }
    /**
     * @description
     *
     * Número exibido no componente, caso o mesmo seja maior que 99 o valor exibido será 99+.
     */
    set value(value) {
        this._value = convertToInt(value);
        this.setBadgeValue(this._value);
    }
    get value() {
        return this._value;
    }
    setBadgeValue(value) {
        const validRangeValue = (value || value === 0) && value >= 0 && value < 100;
        this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;
    }
}
PoBadgeBaseComponent.decorators = [
    { type: Directive }
];
PoBadgeBaseComponent.propDecorators = {
    color: [{ type: Input, args: ['p-color',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYmFkZ2UtYmFzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tYmFkZ2UvcG8tYmFkZ2UtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWhELE1BQU0sZUFBZSxHQUFHO0lBQ3RCLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixVQUFVO0lBQ1YsVUFBVTtDQUNYLENBQUM7QUFDRixNQUFNLHNCQUFzQixHQUFHLFVBQVUsQ0FBQztBQUUxQzs7Ozs7O0dBTUc7QUFFSCxNQUFNLE9BQU8sb0JBQW9CO0lBTS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQWdDRztJQUNILElBQXNCLEtBQUssQ0FBQyxLQUFhO1FBQ3ZDLElBQUksQ0FBQyxNQUFNLEdBQUcsZUFBZSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQztJQUNqRixDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsSUFBc0IsS0FBSyxDQUFDLEtBQWE7UUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksS0FBSztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRU8sYUFBYSxDQUFDLEtBQWE7UUFDakMsTUFBTSxlQUFlLEdBQUcsQ0FBQyxLQUFLLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUM1RSxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUN4RixDQUFDOzs7WUFqRUYsU0FBUzs7O29CQXdDUCxLQUFLLFNBQUMsU0FBUztvQkFhZixLQUFLLFNBQUMsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvSW50IH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmNvbnN0IFBPX0JBREdFX0NPTE9SUyA9IFtcbiAgJ2NvbG9yLTAxJyxcbiAgJ2NvbG9yLTAyJyxcbiAgJ2NvbG9yLTAzJyxcbiAgJ2NvbG9yLTA0JyxcbiAgJ2NvbG9yLTA1JyxcbiAgJ2NvbG9yLTA2JyxcbiAgJ2NvbG9yLTA3JyxcbiAgJ2NvbG9yLTA4JyxcbiAgJ2NvbG9yLTA5JyxcbiAgJ2NvbG9yLTEwJyxcbiAgJ2NvbG9yLTExJyxcbiAgJ2NvbG9yLTEyJ1xuXTtcbmNvbnN0IFBPX0JBREdFX0NPTE9SX0RFRkFVTFQgPSAnY29sb3ItMDcnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIENvbXBvbmVudGUgdXRpbGl6YWRvIG5vIGBwby1tZW51YCBwYXJhIGV4aWJpciBwb3IgZXhlbXBsbyBhIHF1YW50aWRhZGUgZGUgdGFyZWZhcyBwZW5kZW50ZXMuXG4gKi9cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGNsYXNzIFBvQmFkZ2VCYXNlQ29tcG9uZW50IHtcbiAgYmFkZ2VWYWx1ZTogc3RyaW5nO1xuXG4gIHByaXZhdGUgX2NvbG9yOiBzdHJpbmc7XG4gIHByaXZhdGUgX3ZhbHVlOiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogRGVmaW5lIGEgY29yIGRlIGZ1bmRvIGRvIGNvbXBvbmVudGUgZSBhY2VpdGEgb3MgdmFsb3JlczpcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDFcIj48L3NwYW4+IGBjb2xvci0wMWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDJcIj48L3NwYW4+IGBjb2xvci0wMmBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDNcIj48L3NwYW4+IGBjb2xvci0wM2BcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDRcIj48L3NwYW4+IGBjb2xvci0wNGBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDVcIj48L3NwYW4+IGBjb2xvci0wNWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDZcIj48L3NwYW4+IGBjb2xvci0wNmBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDdcIj48L3NwYW4+IGBjb2xvci0wN2BcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDhcIj48L3NwYW4+IGBjb2xvci0wOGBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMDlcIj48L3NwYW4+IGBjb2xvci0wOWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTBcIj48L3NwYW4+IGBjb2xvci0xMGBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTFcIj48L3NwYW4+IGBjb2xvci0xMWBcbiAgICpcbiAgICogPHNwYW4gY2xhc3M9XCJkb3QgcG8tY29sb3ItMTJcIj48L3NwYW4+IGBjb2xvci0xMmBcbiAgICpcbiAgICogQGRlZmF1bHQgYGNvbG9yLTA3YFxuICAgKi9cbiAgQElucHV0KCdwLWNvbG9yJykgc2V0IGNvbG9yKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9jb2xvciA9IFBPX0JBREdFX0NPTE9SUy5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IFBPX0JBREdFX0NPTE9SX0RFRkFVTFQ7XG4gIH1cblxuICBnZXQgY29sb3IoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fY29sb3I7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE7Dum1lcm8gZXhpYmlkbyBubyBjb21wb25lbnRlLCBjYXNvIG8gbWVzbW8gc2VqYSBtYWlvciBxdWUgOTkgbyB2YWxvciBleGliaWRvIHNlcsOhIDk5Ky5cbiAgICovXG4gIEBJbnB1dCgncC12YWx1ZScpIHNldCB2YWx1ZSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fdmFsdWUgPSBjb252ZXJ0VG9JbnQodmFsdWUpO1xuICAgIHRoaXMuc2V0QmFkZ2VWYWx1ZSh0aGlzLl92YWx1ZSk7XG4gIH1cblxuICBnZXQgdmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gIH1cblxuICBwcml2YXRlIHNldEJhZGdlVmFsdWUodmFsdWU6IG51bWJlcikge1xuICAgIGNvbnN0IHZhbGlkUmFuZ2VWYWx1ZSA9ICh2YWx1ZSB8fCB2YWx1ZSA9PT0gMCkgJiYgdmFsdWUgPj0gMCAmJiB2YWx1ZSA8IDEwMDtcbiAgICB0aGlzLmJhZGdlVmFsdWUgPSB2YWxpZFJhbmdlVmFsdWUgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWUgPiA5OSA/ICc5OSsnIDogdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=