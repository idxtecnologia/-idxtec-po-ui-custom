import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { isExternalLink } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente respons√°vel por exibir link nas colunas.
 */
export class PoTableColumnLinkComponent {
    get type() {
        if (this.disabled) {
            return 'disabled';
        }
        if (this.action) {
            return 'action';
        }
        if (isExternalLink(this.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
}
PoTableColumnLinkComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-column-link',
                template: "<ng-container [ngSwitch]=\"type\">\n  <p *ngSwitchCase=\"'disabled'\" class=\"po-table-link-disabled\">{{ value }}</p>\n  <a *ngSwitchCase=\"'action'\" class=\"po-table-link\" (click)=\"action(value, row)\">{{ value }}</a>\n  <a *ngSwitchCase=\"'externalLink'\" class=\"po-table-link\" [href]=\"link\" target=\"_blank\">{{ value }}</a>\n  <a *ngSwitchCase=\"'internalLink'\" class=\"po-table-link\" [routerLink]=\"link\">{{ value }}</a>\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoTableColumnLinkComponent.propDecorators = {
    action: [{ type: Input, args: ['p-action',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    link: [{ type: Input, args: ['p-link',] }],
    row: [{ type: Input, args: ['p-row',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWxpbmsuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWNvbHVtbi1saW5rL3BvLXRhYmxlLWNvbHVtbi1saW5rLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFckQ7Ozs7OztHQU1HO0FBTUgsTUFBTSxPQUFPLDBCQUEwQjtJQVdyQyxJQUFJLElBQUk7UUFDTixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTyxVQUFVLENBQUM7U0FDbkI7UUFFRCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM3QixPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7OztZQTlCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsbWRBQW9EO2dCQUNwRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNoRDs7O3FCQUVFLEtBQUssU0FBQyxVQUFVO3VCQUVoQixLQUFLLFNBQUMsWUFBWTttQkFFbEIsS0FBSyxTQUFDLFFBQVE7a0JBRWQsS0FBSyxTQUFDLE9BQU87b0JBRWIsS0FBSyxTQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBpc0V4dGVybmFsTGluayB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcmVzcG9uc8OhdmVsIHBvciBleGliaXIgbGluayBuYXMgY29sdW5hcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFibGUtY29sdW1uLWxpbmsnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtY29sdW1uLWxpbmsuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1RhYmxlQ29sdW1uTGlua0NvbXBvbmVudCB7XG4gIEBJbnB1dCgncC1hY3Rpb24nKSBhY3Rpb246IEZ1bmN0aW9uO1xuXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1saW5rJykgbGluazogc3RyaW5nO1xuXG4gIEBJbnB1dCgncC1yb3cnKSByb3c7XG5cbiAgQElucHV0KCdwLXZhbHVlJykgdmFsdWU6IHN0cmluZztcblxuICBnZXQgdHlwZSgpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuICdkaXNhYmxlZCc7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYWN0aW9uKSB7XG4gICAgICByZXR1cm4gJ2FjdGlvbic7XG4gICAgfVxuXG4gICAgaWYgKGlzRXh0ZXJuYWxMaW5rKHRoaXMubGluaykpIHtcbiAgICAgIHJldHVybiAnZXh0ZXJuYWxMaW5rJztcbiAgICB9XG5cbiAgICByZXR1cm4gJ2ludGVybmFsTGluayc7XG4gIH1cbn1cbiJdfQ==