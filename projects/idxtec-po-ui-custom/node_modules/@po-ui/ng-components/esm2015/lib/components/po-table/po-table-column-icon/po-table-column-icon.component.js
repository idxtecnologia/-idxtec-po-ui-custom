import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por exibir ícones nas colunas.
 */
export class PoTableColumnIconComponent {
    constructor() {
        this._icons = [];
    }
    /** Lista de colunas com ícones. */
    set icons(icons) {
        this._icons = this.convertToColumnIcon(icons);
    }
    get icons() {
        return this._icons;
    }
    click(columnIcon, event) {
        const isAbleAction = !this.isDisabled(columnIcon);
        if (isAbleAction) {
            if (columnIcon.action) {
                columnIcon.action(this.row, columnIcon);
            }
            else if (this.column.action) {
                this.column.action(this.row, columnIcon);
            }
            event.stopPropagation();
        }
    }
    getColor(column) {
        const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;
        if (color) {
            return `po-text-${color}`;
        }
    }
    getIcon(column) {
        return column.icon || column.value;
    }
    isClickable(columnIcon) {
        return !!(!this.isDisabled(columnIcon) && (columnIcon.action || this.column.action));
    }
    isDisabled(column) {
        return column.disabled ? column.disabled(this.row) : false;
    }
    trackByFunction(index) {
        return index;
    }
    convertToColumnIcon(rowIcons) {
        if (Array.isArray(rowIcons)) {
            return rowIcons.map(rowIcon => (typeof rowIcon === 'string' ? { value: rowIcon } : rowIcon));
        }
        if (typeof rowIcons === 'string') {
            return [{ value: rowIcons }];
        }
        return [];
    }
}
PoTableColumnIconComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-column-icon',
                template: "<po-table-icon\n  *ngFor=\"let column of icons; trackBy: trackByFunction\"\n  [p-clickable]=\"isClickable(column)\"\n  [p-color]=\"getColor(column)\"\n  [p-disabled]=\"isDisabled(column)\"\n  [p-icon]=\"getIcon(column)\"\n  [p-icon-tooltip]=\"column.tooltip\"\n  (p-click)=\"click(column, $event)\"\n>\n</po-table-icon>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoTableColumnIconComponent.propDecorators = {
    column: [{ type: Input, args: ['p-column',] }],
    row: [{ type: Input, args: ['p-row',] }],
    icons: [{ type: Input, args: ['p-icons',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWNvbHVtbi1pY29uL3BvLXRhYmxlLWNvbHVtbi1pY29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUsxRTs7Ozs7O0dBTUc7QUFNSCxNQUFNLE9BQU8sMEJBQTBCO0lBTHZDO1FBWVUsV0FBTSxHQUE2QixFQUFFLENBQUM7SUEyRGhELENBQUM7SUF6REMsbUNBQW1DO0lBQ25DLElBQXNCLEtBQUssQ0FBQyxLQUF3RDtRQUNsRixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxLQUFLLENBQUMsVUFBNkIsRUFBRSxLQUFLO1FBQ3hDLE1BQU0sWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUVsRCxJQUFJLFlBQVksRUFBRTtZQUNoQixJQUFJLFVBQVUsQ0FBQyxNQUFNLEVBQUU7Z0JBQ3JCLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQzthQUN6QztpQkFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO2dCQUM3QixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO2FBQzFDO1lBQ0QsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztJQUVELFFBQVEsQ0FBQyxNQUF5QjtRQUNoQyxNQUFNLEtBQUssR0FBRyxPQUFPLE1BQU0sQ0FBQyxLQUFLLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFFakcsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLFdBQVcsS0FBSyxFQUFFLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBRUQsT0FBTyxDQUFDLE1BQXlCO1FBQy9CLE9BQU8sTUFBTSxDQUFDLElBQUksSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxXQUFXLENBQUMsVUFBNkI7UUFDdkMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsVUFBVSxDQUFDLE1BQXlCO1FBQ2xDLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUM3RCxDQUFDO0lBRUQsZUFBZSxDQUFDLEtBQUs7UUFDbkIsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRU8sbUJBQW1CLENBQUMsUUFBMkQ7UUFDckYsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQzNCLE9BQWEsUUFBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxPQUFPLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNyRztRQUVELElBQUksT0FBTyxRQUFRLEtBQUssUUFBUSxFQUFFO1lBQ2hDLE9BQU8sQ0FBQyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1NBQzlCO1FBRUQsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDOzs7WUF0RUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQkFBc0I7Z0JBQ2hDLDZVQUFvRDtnQkFDcEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7OztxQkFHRSxLQUFLLFNBQUMsVUFBVTtrQkFHaEIsS0FBSyxTQUFDLE9BQU87b0JBS2IsS0FBSyxTQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb1RhYmxlQ29sdW1uIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby10YWJsZS1jb2x1bW4uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvVGFibGVDb2x1bW5JY29uIH0gZnJvbSAnLi9wby10YWJsZS1jb2x1bW4taWNvbi5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcmVzcG9uc8OhdmVsIHBvciBleGliaXIgw61jb25lcyBuYXMgY29sdW5hcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFibGUtY29sdW1uLWljb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tdGFibGUtY29sdW1uLWljb24uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1RhYmxlQ29sdW1uSWNvbkNvbXBvbmVudCB7XG4gIC8qKiBEZWZpbmnDp8OjbyBkYSBjb2x1bmEgcXVlIHV0aWxpemEgb3MgaWNvbmVzLiAqL1xuICBASW5wdXQoJ3AtY29sdW1uJykgY29sdW1uOiBQb1RhYmxlQ29sdW1uO1xuXG4gIC8qKiBEYWRvcyBkYSBsaW5oYSBkYSB0YWJlbGEuICovXG4gIEBJbnB1dCgncC1yb3cnKSByb3c6IGFueTtcblxuICBwcml2YXRlIF9pY29uczogQXJyYXk8UG9UYWJsZUNvbHVtbkljb24+ID0gW107XG5cbiAgLyoqIExpc3RhIGRlIGNvbHVuYXMgY29tIMOtY29uZXMuICovXG4gIEBJbnB1dCgncC1pY29ucycpIHNldCBpY29ucyhpY29uczogQXJyYXk8UG9UYWJsZUNvbHVtbkljb24+IHwgQXJyYXk8c3RyaW5nPiB8IHN0cmluZykge1xuICAgIHRoaXMuX2ljb25zID0gdGhpcy5jb252ZXJ0VG9Db2x1bW5JY29uKGljb25zKTtcbiAgfVxuXG4gIGdldCBpY29ucygpIHtcbiAgICByZXR1cm4gdGhpcy5faWNvbnM7XG4gIH1cblxuICBjbGljayhjb2x1bW5JY29uOiBQb1RhYmxlQ29sdW1uSWNvbiwgZXZlbnQpOiB2b2lkIHtcbiAgICBjb25zdCBpc0FibGVBY3Rpb24gPSAhdGhpcy5pc0Rpc2FibGVkKGNvbHVtbkljb24pO1xuXG4gICAgaWYgKGlzQWJsZUFjdGlvbikge1xuICAgICAgaWYgKGNvbHVtbkljb24uYWN0aW9uKSB7XG4gICAgICAgIGNvbHVtbkljb24uYWN0aW9uKHRoaXMucm93LCBjb2x1bW5JY29uKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5jb2x1bW4uYWN0aW9uKSB7XG4gICAgICAgIHRoaXMuY29sdW1uLmFjdGlvbih0aGlzLnJvdywgY29sdW1uSWNvbik7XG4gICAgICB9XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gIH1cblxuICBnZXRDb2xvcihjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKTogc3RyaW5nIHtcbiAgICBjb25zdCBjb2xvciA9IHR5cGVvZiBjb2x1bW4uY29sb3IgPT09ICdmdW5jdGlvbicgPyBjb2x1bW4uY29sb3IodGhpcy5yb3csIGNvbHVtbikgOiBjb2x1bW4uY29sb3I7XG5cbiAgICBpZiAoY29sb3IpIHtcbiAgICAgIHJldHVybiBgcG8tdGV4dC0ke2NvbG9yfWA7XG4gICAgfVxuICB9XG5cbiAgZ2V0SWNvbihjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKSB7XG4gICAgcmV0dXJuIGNvbHVtbi5pY29uIHx8IGNvbHVtbi52YWx1ZTtcbiAgfVxuXG4gIGlzQ2xpY2thYmxlKGNvbHVtbkljb246IFBvVGFibGVDb2x1bW5JY29uKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICEhKCF0aGlzLmlzRGlzYWJsZWQoY29sdW1uSWNvbikgJiYgKGNvbHVtbkljb24uYWN0aW9uIHx8IHRoaXMuY29sdW1uLmFjdGlvbikpO1xuICB9XG5cbiAgaXNEaXNhYmxlZChjb2x1bW46IFBvVGFibGVDb2x1bW5JY29uKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGNvbHVtbi5kaXNhYmxlZCA/IGNvbHVtbi5kaXNhYmxlZCh0aGlzLnJvdykgOiBmYWxzZTtcbiAgfVxuXG4gIHRyYWNrQnlGdW5jdGlvbihpbmRleCkge1xuICAgIHJldHVybiBpbmRleDtcbiAgfVxuXG4gIHByaXZhdGUgY29udmVydFRvQ29sdW1uSWNvbihyb3dJY29uczogQXJyYXk8UG9UYWJsZUNvbHVtbkljb24+IHwgQXJyYXk8c3RyaW5nPiB8IHN0cmluZyk6IEFycmF5PFBvVGFibGVDb2x1bW5JY29uPiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocm93SWNvbnMpKSB7XG4gICAgICByZXR1cm4gKDxhbnk+cm93SWNvbnMpLm1hcChyb3dJY29uID0+ICh0eXBlb2Ygcm93SWNvbiA9PT0gJ3N0cmluZycgPyB7IHZhbHVlOiByb3dJY29uIH0gOiByb3dJY29uKSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByb3dJY29ucyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBbeyB2YWx1ZTogcm93SWNvbnMgfV07XG4gICAgfVxuXG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG4iXX0=