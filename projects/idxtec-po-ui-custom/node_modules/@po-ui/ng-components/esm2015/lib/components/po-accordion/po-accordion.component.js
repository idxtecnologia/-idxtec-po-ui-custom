import { Component, ContentChildren } from '@angular/core';
import { PoAccordionBaseComponent } from './po-accordion-base.component';
import { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';
import { PoAccordionService } from './services/po-accordion.service';
/**
 * @docsExtends PoAccordionBaseComponent
 *
 * @example
 *
 * <example name="po-accordion-basic" title="PO Accordion Basic" >
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.html"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-labs" title="PO Accordion Labs" >
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.html"> </file>
 *  <file name="sample-po-accordion-labs/sample-po-accordion-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-accordion-faq" title="PO Accordion - FAQs" >
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.html"> </file>
 *  <file name="sample-po-accordion-faq/sample-po-accordion-faq.component.ts"> </file>
 * </example>
 */
export class PoAccordionComponent extends PoAccordionBaseComponent {
    constructor(accordionService) {
        super();
        this.accordionService = accordionService;
        this.receiveFromChildAccordionSubscription();
    }
    ngOnDestroy() {
        this.accordionServiceSubscription.unsubscribe();
    }
    headerToggle(event, poAccordionItem) {
        poAccordionItem.expanded = event;
        this.toggle(poAccordionItem);
    }
    receiveFromChildAccordionSubscription() {
        this.accordionServiceSubscription = this.accordionService
            .receiveFromChildAccordionClicked()
            .subscribe(poAccordionItem => this.toggle(poAccordionItem));
    }
    toggle(poAccordionItem) {
        const isCurrentAccordionCollapsed = !poAccordionItem.expanded;
        if (isCurrentAccordionCollapsed) {
            this.expandedActiveAccordionItem = null;
            return;
        }
        if (this.expandedActiveAccordionItem) {
            this.expandedActiveAccordionItem.collapse();
        }
        this.expandedActiveAccordionItem = poAccordionItem;
    }
}
PoAccordionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-accordion',
                template: "<div class=\"po-accordion po-container po-container-no-padding\">\n  <section\n    *ngFor=\"let poAccordionItem of poAccordionItems\"\n    class=\"po-accordion-item\"\n    [class.po-accordion-item-active]=\"poAccordionItem.expanded\"\n  >\n    <po-accordion-item-header\n      [p-expanded]=\"poAccordionItem.expanded\"\n      [p-label]=\"poAccordionItem.label\"\n      (p-toggle)=\"headerToggle($event, poAccordionItem)\"\n    >\n    </po-accordion-item-header>\n\n    <po-accordion-item-body [p-expanded]=\"poAccordionItem.expanded\">\n      <ng-container *ngTemplateOutlet=\"poAccordionItem.templateRef\"></ng-container>\n    </po-accordion-item-body>\n  </section>\n</div>\n",
                providers: [PoAccordionService]
            },] }
];
PoAccordionComponent.ctorParameters = () => [
    { type: PoAccordionService }
];
PoAccordionComponent.propDecorators = {
    poAccordionItems: [{ type: ContentChildren, args: [PoAccordionItemComponent,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1hY2NvcmRpb24vcG8tYWNjb3JkaW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBd0IsTUFBTSxlQUFlLENBQUM7QUFJakYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDM0YsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFFckU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCRztBQU1ILE1BQU0sT0FBTyxvQkFBcUIsU0FBUSx3QkFBd0I7SUFNaEUsWUFBb0IsZ0JBQW9DO1FBQ3RELEtBQUssRUFBRSxDQUFDO1FBRFUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFvQjtRQUV0RCxJQUFJLENBQUMscUNBQXFDLEVBQUUsQ0FBQztJQUMvQyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQWMsRUFBRSxlQUF5QztRQUNwRSxlQUFlLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQyxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFTyxxQ0FBcUM7UUFDM0MsSUFBSSxDQUFDLDRCQUE0QixHQUFHLElBQUksQ0FBQyxnQkFBZ0I7YUFDdEQsZ0NBQWdDLEVBQUU7YUFDbEMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFTyxNQUFNLENBQUMsZUFBeUM7UUFDdEQsTUFBTSwyQkFBMkIsR0FBRyxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7UUFFOUQsSUFBSSwyQkFBMkIsRUFBRTtZQUMvQixJQUFJLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDO1lBQ3hDLE9BQU87U0FDUjtRQUVELElBQUksSUFBSSxDQUFDLDJCQUEyQixFQUFFO1lBQ3BDLElBQUksQ0FBQywyQkFBMkIsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUM3QztRQUVELElBQUksQ0FBQywyQkFBMkIsR0FBRyxlQUFlLENBQUM7SUFDckQsQ0FBQzs7O1lBN0NGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsaXJCQUEwQztnQkFDMUMsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7YUFDaEM7OztZQTVCUSxrQkFBa0I7OzsrQkE4QnhCLGVBQWUsU0FBQyx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgUXVlcnlMaXN0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IFBvQWNjb3JkaW9uQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tYWNjb3JkaW9uLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCB9IGZyb20gJy4vcG8tYWNjb3JkaW9uLWl0ZW0vcG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IFBvQWNjb3JkaW9uU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcG8tYWNjb3JkaW9uLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb0FjY29yZGlvbkJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1hY2NvcmRpb24tYmFzaWNcIiB0aXRsZT1cIlBPIEFjY29yZGlvbiBCYXNpY1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy9zYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy9zYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMvc2FtcGxlLXBvLWFjY29yZGlvbi1iYXNpYy5jb21wb25lbnQuZTJlLXNwZWMudHNcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWJhc2ljL3NhbXBsZS1wby1hY2NvcmRpb24tYmFzaWMuY29tcG9uZW50LnBvLnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tYWNjb3JkaW9uLWxhYnNcIiB0aXRsZT1cIlBPIEFjY29yZGlvbiBMYWJzXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWxhYnMvc2FtcGxlLXBvLWFjY29yZGlvbi1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWFjY29yZGlvbi1sYWJzL3NhbXBsZS1wby1hY2NvcmRpb24tbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1hY2NvcmRpb24tZmFxXCIgdGl0bGU9XCJQTyBBY2NvcmRpb24gLSBGQVFzXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tYWNjb3JkaW9uLWZhcS9zYW1wbGUtcG8tYWNjb3JkaW9uLWZhcS5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1hY2NvcmRpb24tZmFxL3NhbXBsZS1wby1hY2NvcmRpb24tZmFxLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWFjY29yZGlvbicsXG4gIHRlbXBsYXRlVXJsOiAncG8tYWNjb3JkaW9uLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbUG9BY2NvcmRpb25TZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBQb0FjY29yZGlvbkNvbXBvbmVudCBleHRlbmRzIFBvQWNjb3JkaW9uQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIEBDb250ZW50Q2hpbGRyZW4oUG9BY2NvcmRpb25JdGVtQ29tcG9uZW50KSBwb0FjY29yZGlvbkl0ZW1zOiBRdWVyeUxpc3Q8UG9BY2NvcmRpb25JdGVtQ29tcG9uZW50PjtcblxuICBwcml2YXRlIGFjY29yZGlvblNlcnZpY2VTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgcHJpdmF0ZSBleHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW06IFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFjY29yZGlvblNlcnZpY2U6IFBvQWNjb3JkaW9uU2VydmljZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5yZWNlaXZlRnJvbUNoaWxkQWNjb3JkaW9uU3Vic2NyaXB0aW9uKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmFjY29yZGlvblNlcnZpY2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIGhlYWRlclRvZ2dsZShldmVudDogYm9vbGVhbiwgcG9BY2NvcmRpb25JdGVtOiBQb0FjY29yZGlvbkl0ZW1Db21wb25lbnQpIHtcbiAgICBwb0FjY29yZGlvbkl0ZW0uZXhwYW5kZWQgPSBldmVudDtcblxuICAgIHRoaXMudG9nZ2xlKHBvQWNjb3JkaW9uSXRlbSk7XG4gIH1cblxuICBwcml2YXRlIHJlY2VpdmVGcm9tQ2hpbGRBY2NvcmRpb25TdWJzY3JpcHRpb24oKSB7XG4gICAgdGhpcy5hY2NvcmRpb25TZXJ2aWNlU3Vic2NyaXB0aW9uID0gdGhpcy5hY2NvcmRpb25TZXJ2aWNlXG4gICAgICAucmVjZWl2ZUZyb21DaGlsZEFjY29yZGlvbkNsaWNrZWQoKVxuICAgICAgLnN1YnNjcmliZShwb0FjY29yZGlvbkl0ZW0gPT4gdGhpcy50b2dnbGUocG9BY2NvcmRpb25JdGVtKSk7XG4gIH1cblxuICBwcml2YXRlIHRvZ2dsZShwb0FjY29yZGlvbkl0ZW06IFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCkge1xuICAgIGNvbnN0IGlzQ3VycmVudEFjY29yZGlvbkNvbGxhcHNlZCA9ICFwb0FjY29yZGlvbkl0ZW0uZXhwYW5kZWQ7XG5cbiAgICBpZiAoaXNDdXJyZW50QWNjb3JkaW9uQ29sbGFwc2VkKSB7XG4gICAgICB0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbSA9IG51bGw7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZXhwYW5kZWRBY3RpdmVBY2NvcmRpb25JdGVtKSB7XG4gICAgICB0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbS5jb2xsYXBzZSgpO1xuICAgIH1cblxuICAgIHRoaXMuZXhwYW5kZWRBY3RpdmVBY2NvcmRpb25JdGVtID0gcG9BY2NvcmRpb25JdGVtO1xuICB9XG59XG4iXX0=