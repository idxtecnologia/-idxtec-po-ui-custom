import { Component, Input } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que renderiza cada item do po-breadcrumb.
 */
export class PoBreadcrumbItemComponent {
    constructor() {
        // Especifica se item Ã© o link ativo.
        this.itemActive = false;
    }
}
PoBreadcrumbItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-breadcrumb-item',
                template: "<li\n  *ngIf=\"!itemActive\"\n  [class.po-breadcrumb-item]=\"link || action\"\n  [class.po-breadcrumb-item-unclickable]=\"!link && !action\"\n>\n  <a *ngIf=\"link\" [routerLink]=\"link\">\n    <label class=\"po-breadcrumb-label\">{{ label }}</label>\n    <div class=\"po-breadcrumb-arrow\"></div>\n  </a>\n\n  <a *ngIf=\"!link && action\" (click)=\"action(label)\">\n    <label class=\"po-breadcrumb-label\">{{ label }}</label>\n    <div class=\"po-breadcrumb-arrow\"></div>\n  </a>\n\n  <a *ngIf=\"!link && !action\">\n    <label class=\"po-breadcrumb-label\">{{ label }}</label>\n    <div class=\"po-breadcrumb-arrow\"></div>\n  </a>\n</li>\n\n<li *ngIf=\"itemActive\" class=\"po-breadcrumb-item-unclickable\">\n  <label class=\"po-breadcrumb-label\">{{ label }}</label>\n</li>\n"
            },] }
];
PoBreadcrumbItemComponent.propDecorators = {
    action: [{ type: Input, args: ['p-action',] }],
    label: [{ type: Input, args: ['p-label',] }],
    link: [{ type: Input, args: ['p-link',] }],
    itemActive: [{ type: Input, args: ['p-item-active',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1icmVhZGNydW1iL3BvLWJyZWFkY3J1bWItaXRlbS9wby1icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpEOzs7Ozs7R0FNRztBQUtILE1BQU0sT0FBTyx5QkFBeUI7SUFKdEM7UUFjRSxxQ0FBcUM7UUFDYixlQUFVLEdBQVksS0FBSyxDQUFDO0lBQ3RELENBQUM7OztZQWhCQSxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIseXhCQUFrRDthQUNuRDs7O3FCQUdFLEtBQUssU0FBQyxVQUFVO29CQUdoQixLQUFLLFNBQUMsU0FBUzttQkFHZixLQUFLLFNBQUMsUUFBUTt5QkFHZCxLQUFLLFNBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSByZW5kZXJpemEgY2FkYSBpdGVtIGRvIHBvLWJyZWFkY3J1bWIuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLWJyZWFkY3J1bWItaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1icmVhZGNydW1iLWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvQnJlYWRjcnVtYkl0ZW1Db21wb25lbnQge1xuICAvLyBBw6fDo28gcXVlIHNlcsOhIGV4ZWN1dGFkYSBhbyBjbGljYXIgc29icmUgbyBpdGVtLlxuICBASW5wdXQoJ3AtYWN0aW9uJykgYWN0aW9uOiBGdW5jdGlvbjtcblxuICAvLyBMYWJlbCBkbyBpdGVtLlxuICBASW5wdXQoJ3AtbGFiZWwnKSBsYWJlbDogc3RyaW5nO1xuXG4gIC8vIExpbmsgZG8gaXRlbS5cbiAgQElucHV0KCdwLWxpbmsnKSBsaW5rOiBzdHJpbmc7XG5cbiAgLy8gRXNwZWNpZmljYSBzZSBpdGVtIMOpIG8gbGluayBhdGl2by5cbiAgQElucHV0KCdwLWl0ZW0tYWN0aXZlJykgaXRlbUFjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xufVxuIl19