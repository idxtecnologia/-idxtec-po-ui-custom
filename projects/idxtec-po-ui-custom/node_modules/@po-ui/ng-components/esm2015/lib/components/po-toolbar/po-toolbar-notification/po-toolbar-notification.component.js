import { Component, Input } from '@angular/core';
import { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';
/**
 * @docsPrivate
 *
 * @usedBy PoToolbarComponent
 *
 * @description
 *
 * O componente `po-toolbar-notification` tem como objetivo notificar o usuário de novas ações da aplicação que necessitam de atenção,
 * como por exemplo um alerta de nova mensagem.
 *
 * O mesmo também permite que a cada nova notificação seja incrementado e exibido, ou não, este número em uma *tag* ao lado do
 * ícone de notificações.
 */
export class PoToolbarNotificationComponent {
    constructor() {
        this._notificationNumber = 0;
    }
    /** Define o número de notificações. */
    set notificationNumber(value) {
        this._notificationNumber = Number.isInteger(value) ? value : 0;
    }
    get notificationNumber() {
        return this._notificationNumber;
    }
}
PoToolbarNotificationComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-toolbar-notification',
                template: "<div class=\"po-toolbar-notification po-clickable\" (click)=\"popup.toggle()\">\n  <span #notification class=\"po-icon po-icon-notification po-toolbar-icon\"></span>\n  <div *ngIf=\"notificationNumber\" class=\"po-toolbar-notification-badge\">\n    {{ notificationNumber }}\n  </div>\n</div>\n\n<po-popup #popup [p-actions]=\"notificationActions\" [p-target]=\"notification\"> </po-popup>\n",
                providers: [PoControlPositionService]
            },] }
];
PoToolbarNotificationComponent.propDecorators = {
    notificationActions: [{ type: Input, args: ['p-notification-actions',] }],
    notificationNumber: [{ type: Input, args: ['p-notification-number',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbGJhci1ub3RpZmljYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRvb2xiYXIvcG8tdG9vbGJhci1ub3RpZmljYXRpb24vcG8tdG9vbGJhci1ub3RpZmljYXRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG1FQUFtRSxDQUFDO0FBSTdHOzs7Ozs7Ozs7Ozs7R0FZRztBQU1ILE1BQU0sT0FBTyw4QkFBOEI7SUFMM0M7UUFTVSx3QkFBbUIsR0FBWSxDQUFDLENBQUM7SUFVM0MsQ0FBQztJQVJDLHVDQUF1QztJQUN2QyxJQUFvQyxrQkFBa0IsQ0FBQyxLQUFhO1FBQ2xFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRUQsSUFBSSxrQkFBa0I7UUFDcEIsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUM7SUFDbEMsQ0FBQzs7O1lBbEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxrWkFBdUQ7Z0JBQ3ZELFNBQVMsRUFBRSxDQUFDLHdCQUF3QixDQUFDO2FBQ3RDOzs7a0NBR0UsS0FBSyxTQUFDLHdCQUF3QjtpQ0FLOUIsS0FBSyxTQUFDLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgUG9Db250cm9sUG9zaXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvcG8tY29udHJvbC1wb3NpdGlvbi9wby1jb250cm9sLXBvc2l0aW9uLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBQb1Rvb2xiYXJBY3Rpb24gfSBmcm9tICcuLi9wby10b29sYmFyLWFjdGlvbi5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEB1c2VkQnkgUG9Ub29sYmFyQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby10b29sYmFyLW5vdGlmaWNhdGlvbmAgdGVtIGNvbW8gb2JqZXRpdm8gbm90aWZpY2FyIG8gdXN1w6FyaW8gZGUgbm92YXMgYcOnw7VlcyBkYSBhcGxpY2HDp8OjbyBxdWUgbmVjZXNzaXRhbSBkZSBhdGVuw6fDo28sXG4gKiBjb21vIHBvciBleGVtcGxvIHVtIGFsZXJ0YSBkZSBub3ZhIG1lbnNhZ2VtLlxuICpcbiAqIE8gbWVzbW8gdGFtYsOpbSBwZXJtaXRlIHF1ZSBhIGNhZGEgbm92YSBub3RpZmljYcOnw6NvIHNlamEgaW5jcmVtZW50YWRvIGUgZXhpYmlkbywgb3UgbsOjbywgZXN0ZSBuw7ptZXJvIGVtIHVtYSAqdGFnKiBhbyBsYWRvIGRvXG4gKiDDrWNvbmUgZGUgbm90aWZpY2HDp8O1ZXMuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXRvb2xiYXItbm90aWZpY2F0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRvb2xiYXItbm90aWZpY2F0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbUG9Db250cm9sUG9zaXRpb25TZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBQb1Rvb2xiYXJOb3RpZmljYXRpb25Db21wb25lbnQge1xuICAvKiogRGVmaW5lIHVtYSBsaXN0YSBkZSBhw6fDtWVzLiAqL1xuICBASW5wdXQoJ3Atbm90aWZpY2F0aW9uLWFjdGlvbnMnKSBub3RpZmljYXRpb25BY3Rpb25zPzogQXJyYXk8UG9Ub29sYmFyQWN0aW9uPjtcblxuICBwcml2YXRlIF9ub3RpZmljYXRpb25OdW1iZXI/OiBudW1iZXIgPSAwO1xuXG4gIC8qKiBEZWZpbmUgbyBuw7ptZXJvIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xuICBASW5wdXQoJ3Atbm90aWZpY2F0aW9uLW51bWJlcicpIHNldCBub3RpZmljYXRpb25OdW1iZXIodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX25vdGlmaWNhdGlvbk51bWJlciA9IE51bWJlci5pc0ludGVnZXIodmFsdWUpID8gdmFsdWUgOiAwO1xuICB9XG5cbiAgZ2V0IG5vdGlmaWNhdGlvbk51bWJlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fbm90aWZpY2F0aW9uTnVtYmVyO1xuICB9XG59XG4iXX0=