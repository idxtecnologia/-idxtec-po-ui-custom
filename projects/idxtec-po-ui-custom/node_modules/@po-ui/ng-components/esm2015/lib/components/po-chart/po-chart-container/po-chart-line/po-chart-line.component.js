import { __rest } from "tslib";
import { Component, ElementRef, Renderer2 } from '@angular/core';
import { PoChartLineBaseComponent } from './po-chart-line-base.component';
import { PoChartMathsService } from '../../services/po-chart-maths.service';
export class PoChartLineComponent extends PoChartLineBaseComponent {
    constructor(mathsService, renderer, elementRef) {
        super(mathsService, renderer, elementRef);
        this.mathsService = mathsService;
        this.renderer = renderer;
        this.elementRef = elementRef;
    }
    onEnter(serieIndex) {
        return null;
    }
    onLeave(serieIndex) {
        return null;
    }
    onSeriePointHover(selectedItem) {
        const { relativeTo } = selectedItem, item = __rest(selectedItem, ["relativeTo"]);
        this.reorderSVGGroup(relativeTo);
        this.pointHover.emit(item);
    }
    // É necessário reordenar os svgs on hover pois eventualmente os elemntos svg ficam por trás de outros. Não há z-index para svgElement.
    reorderSVGGroup(pathGroup) {
        const pathGroupElement = this.elementRef.nativeElement.querySelectorAll(`.${pathGroup}`);
        this.animate = false;
        this.renderer.appendChild(this.chartLine.nativeElement, pathGroupElement[0]);
    }
}
PoChartLineComponent.decorators = [
    { type: Component, args: [{
                selector: '[po-chart-line]',
                template: "<svg:g #chartLine>\n\n  <svg:g *ngFor=\"let item of seriesPathsCoordinates; let i = index; trackBy: trackBy\"\n    [class]=\"'po-chart-line-path-group-' + i\"\n    (mouseenter)=\"onEnter(i)\"\n    (mouseleave)=\"onLeave(i)\"\n  >\n    <!-- SERIES PATHS -->\n    <svg:g po-chart-path\n      [p-chart-line]=\"chartType === 'line'\"\n      [attr.key]=\"'po-chart-line-path-' + i\"\n      [p-animate]=\"animate\"\n      [p-color]=\"item.color\" \n      [p-coordinates]=\"item?.coordinates\"\n      [p-is-active]=\"item.isActive\"\n      >\n      </svg:g>\n\n    <!-- SERIES POINTS -->\n    <svg:g po-chart-series-point\n      [p-animate]=\"animate\"\n      [p-chart-line]=\"chartType === 'line'\"\n      [p-color]=\"item.color\"\n      [p-coordinates]=\"seriesPointsCoordinates[i]\"\n      [p-is-active]=\"activeTooltip\"\n      [p-relative-to]=\"'po-chart-line-path-group-' + i\" \n      [attr.key]=\"'po-chart-line-path-points-group-' + i\"\n      (p-point-click)=\"onSeriePointClick($event)\"\n      (p-point-hover)=\"onSeriePointHover($event)\"\n      ></svg:g>\n  </svg:g>\n\n</svg:g>"
            },] }
];
PoChartLineComponent.ctorParameters = () => [
    { type: PoChartMathsService },
    { type: Renderer2 },
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtbGluZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tY2hhcnQvcG8tY2hhcnQtY29udGFpbmVyL3BvLWNoYXJ0LWxpbmUvcG8tY2hhcnQtbGluZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMxRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQU01RSxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsd0JBQXdCO0lBQ2hFLFlBQ1ksWUFBaUMsRUFDakMsUUFBbUIsRUFDbkIsVUFBc0I7UUFFaEMsS0FBSyxDQUFDLFlBQVksRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFKaEMsaUJBQVksR0FBWixZQUFZLENBQXFCO1FBQ2pDLGFBQVEsR0FBUixRQUFRLENBQVc7UUFDbkIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUdsQyxDQUFDO0lBRUQsT0FBTyxDQUFDLFVBQWtCO1FBQ3hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUNELE9BQU8sQ0FBQyxVQUFrQjtRQUN4QixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxpQkFBaUIsQ0FBQyxZQUFpQjtRQUNqQyxNQUFNLEVBQUUsVUFBVSxLQUFjLFlBQVksRUFBckIsSUFBSSxVQUFLLFlBQVksRUFBdEMsY0FBdUIsQ0FBZSxDQUFDO1FBRTdDLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELHVJQUF1STtJQUMvSCxlQUFlLENBQUMsU0FBaUI7UUFDdkMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLFNBQVMsRUFBRSxDQUFDLENBQUM7UUFFekYsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvRSxDQUFDOzs7WUFqQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLHlrQ0FBNEM7YUFDN0M7OztZQUxRLG1CQUFtQjtZQUhJLFNBQVM7WUFBckIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvQ2hhcnRMaW5lQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tY2hhcnQtbGluZS1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0NoYXJ0TWF0aHNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcG8tY2hhcnQtbWF0aHMuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1twby1jaGFydC1saW5lXScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1jaGFydC1saW5lLmNvbXBvbmVudC5zdmcnXG59KVxuZXhwb3J0IGNsYXNzIFBvQ2hhcnRMaW5lQ29tcG9uZW50IGV4dGVuZHMgUG9DaGFydExpbmVCYXNlQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIG1hdGhzU2VydmljZTogUG9DaGFydE1hdGhzU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZlxuICApIHtcbiAgICBzdXBlcihtYXRoc1NlcnZpY2UsIHJlbmRlcmVyLCBlbGVtZW50UmVmKTtcbiAgfVxuXG4gIG9uRW50ZXIoc2VyaWVJbmRleDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgb25MZWF2ZShzZXJpZUluZGV4OiBudW1iZXIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIG9uU2VyaWVQb2ludEhvdmVyKHNlbGVjdGVkSXRlbTogYW55KSB7XG4gICAgY29uc3QgeyByZWxhdGl2ZVRvLCAuLi5pdGVtIH0gPSBzZWxlY3RlZEl0ZW07XG5cbiAgICB0aGlzLnJlb3JkZXJTVkdHcm91cChyZWxhdGl2ZVRvKTtcbiAgICB0aGlzLnBvaW50SG92ZXIuZW1pdChpdGVtKTtcbiAgfVxuXG4gIC8vIMOJIG5lY2Vzc8OhcmlvIHJlb3JkZW5hciBvcyBzdmdzIG9uIGhvdmVyIHBvaXMgZXZlbnR1YWxtZW50ZSBvcyBlbGVtbnRvcyBzdmcgZmljYW0gcG9yIHRyw6FzIGRlIG91dHJvcy4gTsOjbyBow6Egei1pbmRleCBwYXJhIHN2Z0VsZW1lbnQuXG4gIHByaXZhdGUgcmVvcmRlclNWR0dyb3VwKHBhdGhHcm91cDogc3RyaW5nKSB7XG4gICAgY29uc3QgcGF0aEdyb3VwRWxlbWVudCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC4ke3BhdGhHcm91cH1gKTtcblxuICAgIHRoaXMuYW5pbWF0ZSA9IGZhbHNlO1xuICAgIHRoaXMucmVuZGVyZXIuYXBwZW5kQ2hpbGQodGhpcy5jaGFydExpbmUubmF0aXZlRWxlbWVudCwgcGF0aEdyb3VwRWxlbWVudFswXSk7XG4gIH1cbn1cbiJdfQ==