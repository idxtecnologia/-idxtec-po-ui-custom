import { Directive, TemplateRef } from '@angular/core';
/**
 * @usedBy PoSelectComponent
 *
 * @description
 *
 * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista suspensa do componente.
 *
 * > Quando utilizada em _mobile_ será exibido o componente nativo.
 *
 * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`
 * dentro da tag `po-select`.
 *
 * Para obter a referência do item atual, use `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.
 *
 * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:
 *
 * ```
 * ...
 * <po-select
 *   name="select"
 *   [(ngModel)]="select"
 *   [p-options]="options">
 *     <ng-template p-select-option-template let-option>
 *       <option-template [option]="option"></option-template>
 *     </ng-template>
 * </po-select>
 * ...
 * ```
 *
 * ```
 * ...
 * <po-select
 *   name="select"
 *   [(ngModel)]="select"
 *   [p-options]="options">
 *     <div *p-select-option-template="let option">
 *       <option-template [option]="option"></option-template>
 *     </div>
 * </po-select>
 * ...
 *
 * ```
 */
export class PoSelectOptionTemplateDirective {
    // Necessário manter templateRef para o funcionamento do row template.
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
PoSelectOptionTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[p-select-option-template]'
            },] }
];
PoSelectOptionTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tc2VsZWN0L3BvLXNlbGVjdC1vcHRpb24tdGVtcGxhdGUvcG8tc2VsZWN0LW9wdGlvbi10ZW1wbGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTBDRztBQUlILE1BQU0sT0FBTywrQkFBK0I7SUFDMUMsc0VBQXNFO0lBQ3RFLFlBQW1CLFdBQTZCO1FBQTdCLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtJQUFHLENBQUM7OztZQUxyRCxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjthQUN2Qzs7O1lBL0NtQixXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEB1c2VkQnkgUG9TZWxlY3RDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBFc3RhIGRpcmV0aXZhIHBlcm1pdGUgcGVyc29uYWxpemFyIG8gY29udGXDumRvIGRvcyBpdGVucyBleGliaWRvcyBuYSBsaXN0YSBzdXNwZW5zYSBkbyBjb21wb25lbnRlLlxuICpcbiAqID4gUXVhbmRvIHV0aWxpemFkYSBlbSBfbW9iaWxlXyBzZXLDoSBleGliaWRvIG8gY29tcG9uZW50ZSBuYXRpdm8uXG4gKlxuICogUGFyYSBwZXJzb25hbGl6YXIgbyBjb250ZcO6ZG8gZGUgY2FkYSBpdGVtIGRhIGxpc3RhIGRldmUtc2UgdXRpbGl6YXIgYSBkaXJldGl2YSBgcC1zZWxlY3Qtb3B0aW9uLXRlbXBsYXRlYCBjb20gYG5nLXRlbXBsYXRlYFxuICogZGVudHJvIGRhIHRhZyBgcG8tc2VsZWN0YC5cbiAqXG4gKiBQYXJhIG9idGVyIGEgcmVmZXLDqm5jaWEgZG8gaXRlbSBhdHVhbCwgdXNlIGBsZXQtb3B0aW9uYCwgY29tIGlzc28gdm9jw6ogdGVyw6EgYWNlc3NvIGFvcyB2YWxvcmVzIGUgcG9kZXLDoSBwZXJzb25hbGl6YXIgc3VhIGV4aWJpw6fDo28uXG4gKlxuICogRXN0YSBkaXJldGl2YSBjb21ww7VlLXNlIGRlIGRvaXMgbWVpb3MgcGFyYSB1c28sIGRlIGZvcm1hIGV4cGzDrWNpdGEgdGFsIGNvbW8gZW0gKnN5bnRheCBzdWdhciouIFZlamEgYSBzZWd1aXIgYW1ib3MsIHJlc3BlY3RpdmFtZW50ZTpcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogPHBvLXNlbGVjdFxuICogICBuYW1lPVwic2VsZWN0XCJcbiAqICAgWyhuZ01vZGVsKV09XCJzZWxlY3RcIlxuICogICBbcC1vcHRpb25zXT1cIm9wdGlvbnNcIj5cbiAqICAgICA8bmctdGVtcGxhdGUgcC1zZWxlY3Qtb3B0aW9uLXRlbXBsYXRlIGxldC1vcHRpb24+XG4gKiAgICAgICA8b3B0aW9uLXRlbXBsYXRlIFtvcHRpb25dPVwib3B0aW9uXCI+PC9vcHRpb24tdGVtcGxhdGU+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqIDwvcG8tc2VsZWN0PlxuICogLi4uXG4gKiBgYGBcbiAqXG4gKiBgYGBcbiAqIC4uLlxuICogPHBvLXNlbGVjdFxuICogICBuYW1lPVwic2VsZWN0XCJcbiAqICAgWyhuZ01vZGVsKV09XCJzZWxlY3RcIlxuICogICBbcC1vcHRpb25zXT1cIm9wdGlvbnNcIj5cbiAqICAgICA8ZGl2ICpwLXNlbGVjdC1vcHRpb24tdGVtcGxhdGU9XCJsZXQgb3B0aW9uXCI+XG4gKiAgICAgICA8b3B0aW9uLXRlbXBsYXRlIFtvcHRpb25dPVwib3B0aW9uXCI+PC9vcHRpb24tdGVtcGxhdGU+XG4gKiAgICAgPC9kaXY+XG4gKiA8L3BvLXNlbGVjdD5cbiAqIC4uLlxuICpcbiAqIGBgYFxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbcC1zZWxlY3Qtb3B0aW9uLXRlbXBsYXRlXSdcbn0pXG5leHBvcnQgY2xhc3MgUG9TZWxlY3RPcHRpb25UZW1wbGF0ZURpcmVjdGl2ZSB7XG4gIC8vIE5lY2Vzc8OhcmlvIG1hbnRlciB0ZW1wbGF0ZVJlZiBwYXJhIG8gZnVuY2lvbmFtZW50byBkbyByb3cgdGVtcGxhdGUuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pikge31cbn1cbiJdfQ==