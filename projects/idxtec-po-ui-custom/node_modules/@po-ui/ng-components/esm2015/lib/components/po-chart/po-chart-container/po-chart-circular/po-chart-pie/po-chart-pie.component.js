import { ChangeDetectorRef, Component, NgZone } from '@angular/core';
import { PoChartCircularComponent } from '../po-chart-circular.component';
export class PoChartPieComponent extends PoChartCircularComponent {
    /* istanbul ignore next */
    constructor(ngZone, changeDetector) {
        super(ngZone, changeDetector);
    }
    ngOnChanges(changes) {
        if (changes.series || changes.containerSize) {
            this.drawSeries(this.series, this.containerSize.svgHeight);
        }
    }
    calculateCoordinates(height, startRadianAngle, endRadianAngle) {
        const radius = height / 2;
        const sinAlpha = Math.sin(startRadianAngle);
        const cosAlpha = Math.cos(startRadianAngle);
        const sinBeta = Math.sin(endRadianAngle);
        const cosBeta = Math.cos(endRadianAngle);
        const startX = radius + cosAlpha * radius;
        const startY = radius + sinAlpha * radius;
        const endX = radius + cosBeta * radius;
        const endY = radius + sinBeta * radius;
        const largeArc = endRadianAngle - startRadianAngle > Math.PI;
        return [
            'M',
            startX,
            startY,
            'A',
            radius,
            radius,
            0,
            largeArc ? '1,1' : '0,1',
            endX,
            endY,
            'L',
            radius,
            radius,
            'Z'
        ].join(' ');
    }
    getTooltipLabel(data, label, tooltipLabel) {
        const dataLabel = label ? `${label}: ` : '';
        const dataValue = data.toString();
        return tooltipLabel || `${dataLabel}${dataValue}`;
    }
}
PoChartPieComponent.decorators = [
    { type: Component, args: [{
                selector: '[po-chart-pie]',
                template: "<svg:g>\n  <!-- SERIES PATHS -->\n  <svg:g *ngFor=\"let item of seriesList; let i = index\">\n    <svg:g #svgPaths po-chart-circular-path\n      [attr.key]=\"'po-chart-circular-path-' + i\"\n      [p-serie]=\"item\"\n      (p-on-click)=\"onSerieClick($event)\"\n      (p-on-hover)=\"onSerieHover($event)\">\n    </svg:g>\n  </svg:g>\n\n  <!-- SERIES LABELS -->\n  <svg:g *ngIf=\"canDisplayLabels\">\n    <svg:g *ngFor=\"let item of seriesLabels; let i = index\">\n      <svg:g #svgLabels po-chart-circular-label\n        [attr.key]=\"'po-chart-circular-label-' + i\"\n        [p-serie]=\"item\"\n        [p-show-label]=\"showLabels\">\n      </svg:g>\n    </svg:g>\n  </svg:g>\n</svg:g>\n\n"
            },] }
];
PoChartPieComponent.ctorParameters = () => [
    { type: NgZone },
    { type: ChangeDetectorRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtcGllLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1jaGFydC9wby1jaGFydC1jb250YWluZXIvcG8tY2hhcnQtY2lyY3VsYXIvcG8tY2hhcnQtcGllL3BvLWNoYXJ0LXBpZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBRS9GLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBTTFFLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSx3QkFBd0I7SUFDL0QsMEJBQTBCO0lBQzFCLFlBQVksTUFBYyxFQUFFLGNBQWlDO1FBQzNELEtBQUssQ0FBQyxNQUFNLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLGFBQWEsRUFBRTtZQUMzQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUM1RDtJQUNILENBQUM7SUFFUyxvQkFBb0IsQ0FBQyxNQUFjLEVBQUUsZ0JBQXdCLEVBQUUsY0FBc0I7UUFDN0YsTUFBTSxNQUFNLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUUxQixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDNUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRTVDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDekMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUV6QyxNQUFNLE1BQU0sR0FBRyxNQUFNLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBQztRQUMxQyxNQUFNLE1BQU0sR0FBRyxNQUFNLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBQztRQUUxQyxNQUFNLElBQUksR0FBRyxNQUFNLEdBQUcsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN2QyxNQUFNLElBQUksR0FBRyxNQUFNLEdBQUcsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUV2QyxNQUFNLFFBQVEsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUU3RCxPQUFPO1lBQ0wsR0FBRztZQUNILE1BQU07WUFDTixNQUFNO1lBQ04sR0FBRztZQUNILE1BQU07WUFDTixNQUFNO1lBQ04sQ0FBQztZQUNELFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3hCLElBQUk7WUFDSixJQUFJO1lBQ0osR0FBRztZQUNILE1BQU07WUFDTixNQUFNO1lBQ04sR0FBRztTQUNKLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVTLGVBQWUsQ0FBQyxJQUFZLEVBQUUsS0FBYyxFQUFFLFlBQXFCO1FBQzNFLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzVDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVsQyxPQUFPLFlBQVksSUFBSSxHQUFHLFNBQVMsR0FBRyxTQUFTLEVBQUUsQ0FBQztJQUNwRCxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLDhyQkFBaUQ7YUFDbEQ7OztZQVBzQyxNQUFNO1lBQXBDLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIE5nWm9uZSwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvQ2hhcnRDaXJjdWxhckNvbXBvbmVudCB9IGZyb20gJy4uL3BvLWNoYXJ0LWNpcmN1bGFyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1twby1jaGFydC1waWVdJyxcbiAgdGVtcGxhdGVVcmw6ICcuLi9wby1jaGFydC1jaXJjdWxhci5jb21wb25lbnQuc3ZnJ1xufSlcbmV4cG9ydCBjbGFzcyBQb0NoYXJ0UGllQ29tcG9uZW50IGV4dGVuZHMgUG9DaGFydENpcmN1bGFyQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgY29uc3RydWN0b3Iobmdab25lOiBOZ1pvbmUsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgIHN1cGVyKG5nWm9uZSwgY2hhbmdlRGV0ZWN0b3IpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLnNlcmllcyB8fCBjaGFuZ2VzLmNvbnRhaW5lclNpemUpIHtcbiAgICAgIHRoaXMuZHJhd1Nlcmllcyh0aGlzLnNlcmllcywgdGhpcy5jb250YWluZXJTaXplLnN2Z0hlaWdodCk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIGNhbGN1bGF0ZUNvb3JkaW5hdGVzKGhlaWdodDogbnVtYmVyLCBzdGFydFJhZGlhbkFuZ2xlOiBudW1iZXIsIGVuZFJhZGlhbkFuZ2xlOiBudW1iZXIpIHtcbiAgICBjb25zdCByYWRpdXMgPSBoZWlnaHQgLyAyO1xuXG4gICAgY29uc3Qgc2luQWxwaGEgPSBNYXRoLnNpbihzdGFydFJhZGlhbkFuZ2xlKTtcbiAgICBjb25zdCBjb3NBbHBoYSA9IE1hdGguY29zKHN0YXJ0UmFkaWFuQW5nbGUpO1xuXG4gICAgY29uc3Qgc2luQmV0YSA9IE1hdGguc2luKGVuZFJhZGlhbkFuZ2xlKTtcbiAgICBjb25zdCBjb3NCZXRhID0gTWF0aC5jb3MoZW5kUmFkaWFuQW5nbGUpO1xuXG4gICAgY29uc3Qgc3RhcnRYID0gcmFkaXVzICsgY29zQWxwaGEgKiByYWRpdXM7XG4gICAgY29uc3Qgc3RhcnRZID0gcmFkaXVzICsgc2luQWxwaGEgKiByYWRpdXM7XG5cbiAgICBjb25zdCBlbmRYID0gcmFkaXVzICsgY29zQmV0YSAqIHJhZGl1cztcbiAgICBjb25zdCBlbmRZID0gcmFkaXVzICsgc2luQmV0YSAqIHJhZGl1cztcblxuICAgIGNvbnN0IGxhcmdlQXJjID0gZW5kUmFkaWFuQW5nbGUgLSBzdGFydFJhZGlhbkFuZ2xlID4gTWF0aC5QSTtcblxuICAgIHJldHVybiBbXG4gICAgICAnTScsXG4gICAgICBzdGFydFgsXG4gICAgICBzdGFydFksXG4gICAgICAnQScsXG4gICAgICByYWRpdXMsXG4gICAgICByYWRpdXMsXG4gICAgICAwLFxuICAgICAgbGFyZ2VBcmMgPyAnMSwxJyA6ICcwLDEnLFxuICAgICAgZW5kWCxcbiAgICAgIGVuZFksXG4gICAgICAnTCcsXG4gICAgICByYWRpdXMsXG4gICAgICByYWRpdXMsXG4gICAgICAnWidcbiAgICBdLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRUb29sdGlwTGFiZWwoZGF0YTogbnVtYmVyLCBsYWJlbD86IHN0cmluZywgdG9vbHRpcExhYmVsPzogc3RyaW5nKSB7XG4gICAgY29uc3QgZGF0YUxhYmVsID0gbGFiZWwgPyBgJHtsYWJlbH06IGAgOiAnJztcbiAgICBjb25zdCBkYXRhVmFsdWUgPSBkYXRhLnRvU3RyaW5nKCk7XG5cbiAgICByZXR1cm4gdG9vbHRpcExhYmVsIHx8IGAke2RhdGFMYWJlbH0ke2RhdGFWYWx1ZX1gO1xuICB9XG59XG4iXX0=