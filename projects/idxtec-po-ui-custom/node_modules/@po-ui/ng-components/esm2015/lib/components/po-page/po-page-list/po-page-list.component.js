import { Component, Renderer2, ViewChild, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { Router } from '@angular/router';
import { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../../utils/util';
import { PoLanguageService } from './../../../services/po-language/po-language.service';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
import { PoPageListBaseComponent } from './po-page-list-base.component';
/**
 * @docsExtends PoPageListBaseComponent
 *
 * @example
 *
 * <example name="po-page-list-basic" title="PO Page List Basic">
 *  <file name="sample-po-page-list-basic/sample-po-page-list-basic.component.html"> </file>
 *  <file name="sample-po-page-list-basic/sample-po-page-list-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-list-labs" title="PO Page List Labs">
 *  <file name="sample-po-page-list-labs/sample-po-page-list-labs.component.html"> </file>
 *  <file name="sample-po-page-list-labs/sample-po-page-list-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-list-hiring-processes" title="PO Page List - Hiring Processes">
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html"> </file>
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts"> </file>
 *  <file name="sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts"> </file>
 * </example>
 */
export class PoPageListComponent extends PoPageListBaseComponent {
    /* istanbul ignore next */
    constructor(viewRef, languageService, renderer, router, changeDetector) {
        super(languageService);
        this.renderer = renderer;
        this.router = router;
        this.changeDetector = changeDetector;
        this.limitPrimaryActions = 3;
        this.callFunction = callFunction;
        this.isRecalculate = true;
        this.maxWidthMobile = 480;
        this.initializeListeners();
    }
    ngOnInit() {
        this.advancedSearch = this.initializeFixedLiterals();
    }
    ngAfterContentInit() {
        this.setIsMobile();
        this.setDropdownActions();
    }
    ngOnChanges(changes) {
        this.setDropdownActions();
    }
    ngOnDestroy() {
        this.removeListeners();
    }
    actionIsDisabled(action) {
        return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;
    }
    callAction(item) {
        if (item.url) {
            isExternalLink(item.url) ? openExternalLink(item.url) : this.router.navigate([item.url]);
        }
        else if (item.action) {
            item.action();
        }
    }
    hasPageHeader() {
        return !!(this.title ||
            (this.visibleActions && this.visibleActions.length) ||
            (this.breadcrumb && this.breadcrumb.items.length));
    }
    hasCustomFilterSize() {
        if (!this.filter) {
            return false;
        }
        return this.filter.width >= 1 && this.filter.width <= 6;
    }
    filterSizeClass(width) {
        var _a, _b, _c;
        const smWidth = Math.max(((_a = this.filter) === null || _a === void 0 ? void 0 : _a.advancedAction) ? 6 : 2, width);
        const mdWidth = Math.max(((_b = this.filter) === null || _b === void 0 ? void 0 : _b.advancedAction) ? 4 : 1, width);
        if ((_c = this.filter) === null || _c === void 0 ? void 0 : _c.advancedAction) {
            width = Math.max(width, 2);
        }
        return `po-sm-${smWidth} po-md-${mdWidth} po-lg-${width} po-xl-${width}`;
    }
    setDropdownActions() {
        if (this.visibleActions.length > this.limitPrimaryActions) {
            this.dropdownActions = this.visibleActions.slice(this.limitPrimaryActions - 1);
        }
    }
    callActionFilter(field) {
        this.filter[field](this.filterInput.nativeElement.value);
        this.changeDetector.detectChanges();
    }
    /**
     * Limpa o campo de pesquisa.
     */
    clearInputSearch() {
        this.filterInput.nativeElement.value = null;
    }
    onkeypress(key) {
        if (key === 13) {
            this.callActionFilter('action');
        }
    }
    // Recebe evento change do disclaimer e recalcula tela
    onChangeDisclaimerGroup(disclaimers) {
        if ((disclaimers && disclaimers.length && this.isRecalculate) ||
            (disclaimers.length === 0 && !this.isRecalculate)) {
            this.poPageContent.recalculateHeaderSize();
            this.isRecalculate = !this.isRecalculate;
        }
        if (this.disclaimerGroup && this.disclaimerGroup.change) {
            this.disclaimerGroup.change(disclaimers);
        }
    }
    onRemoveDisclaimer(removeData) {
        if (this.disclaimerGroup.remove) {
            this.disclaimerGroup.remove(removeData);
        }
    }
    onRemoveAllDisclaimers(removedDisclaimers) {
        if (this.disclaimerGroup.removeAll) {
            this.disclaimerGroup.removeAll(removedDisclaimers);
        }
    }
    initializeFixedLiterals() {
        const literal = {
            pt: {
                advancedSearch: 'Busca avançada'
            },
            en: {
                advancedSearch: 'Advanced search'
            },
            es: {
                advancedSearch: 'Búsqueda avanzada'
            },
            ru: {
                advancedSearch: 'полный поиск'
            }
        };
        return literal[this.language].advancedSearch;
    }
    initializeListeners() {
        this.resizeListener = this.renderer.listen('window', 'resize', (event) => {
            this.onResize(event);
        });
    }
    removeListeners() {
        this.resizeListener();
    }
    onResize(event) {
        const width = event.target.innerWidth;
        if (width < this.maxWidthMobile) {
            this.isMobile = true;
            this.limitPrimaryActions = 2;
            this.setDropdownActions();
        }
        else {
            this.isMobile = false;
            this.limitPrimaryActions = 3;
            this.setDropdownActions();
        }
    }
    setIsMobile() {
        if (window.innerWidth < this.maxWidthMobile) {
            this.isMobile = true;
            this.limitPrimaryActions = 2;
        }
    }
}
PoPageListComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-list',
                template: "<po-page>\n  <!-- HEADER -->\n  <po-page-header\n    *ngIf=\"hasPageHeader()\"\n    [class.po-page-list-header-padding]=\"filter && !visibleActions.length\"\n    [p-breadcrumb]=\"breadcrumb\"\n    [p-title]=\"title\"\n  >\n    <!-- OPERATIONS -->\n    <div class=\"po-page-list-operations\">\n      <div class=\"po-page-list-actions\" [class.po-page-list-actions-padding]=\"filter\">\n        <po-button\n          *ngIf=\"visibleActions[0]\"\n          p-type=\"primary\"\n          [p-disabled]=\"actionIsDisabled(actions[0])\"\n          [p-icon]=\"visibleActions[0].icon\"\n          [p-label]=\"visibleActions[0].label\"\n          (p-click)=\"callAction(visibleActions[0])\"\n        >\n        </po-button>\n\n        <po-button\n          *ngIf=\"visibleActions[1] && (visibleActions.length === 2 || !isMobile)\"\n          [p-disabled]=\"actionIsDisabled(actions[1])\"\n          [p-label]=\"visibleActions[1].label\"\n          (p-click)=\"callAction(visibleActions[1])\"\n        >\n        </po-button>\n\n        <po-button\n          *ngIf=\"visibleActions.length === 3 && visibleActions[2] && !isMobile\"\n          [p-disabled]=\"actionIsDisabled(visibleActions[2])\"\n          [p-label]=\"visibleActions[2].label\"\n          (p-click)=\"callAction(visibleActions[2])\"\n        >\n        </po-button>\n\n        <po-dropdown\n          *ngIf=\"visibleActions.length > limitPrimaryActions\"\n          [p-actions]=\"dropdownActions\"\n          [p-label]=\"literals.otherActions\"\n        >\n        </po-dropdown>\n      </div>\n\n      <!-- FILTER -->\n      <div\n        class=\"po-page-list-filter-wrapper\"\n        *ngIf=\"filter\"\n        [ngClass]=\"hasCustomFilterSize() ? filterSizeClass(filter.width) : ''\"\n      >\n        <div\n          class=\"po-field-container-content po-page-filter-content\"\n          [ngClass]=\"\n            hasCustomFilterSize()\n              ? filter.advancedAction\n                ? 'po-page-filter-input-variable-size'\n                : 'po-page-filter-input-variable-size-wo-adv-search'\n              : ''\n          \"\n        >\n          <div class=\"po-field-icon-container-right\">\n            <span class=\"po-icon po-icon-search po-field-icon\" (click)=\"callActionFilter('action')\"> </span>\n          </div>\n\n          <input\n            #filterInput\n            class=\"po-input po-input-icon-right\"\n            name=\"model\"\n            type=\"text\"\n            [placeholder]=\"filter.placeholder || ''\"\n            (keypress)=\"onkeypress($event.keyCode)\"\n          />\n        </div>\n\n        <div class=\"po-page-list-filter-search\" *ngIf=\"filter.advancedAction\">\n          <span\n            class=\"po-page-list-filter-search-link\"\n            tabindex=\"0\"\n            (click)=\"callActionFilter('advancedAction')\"\n            (keydown.enter)=\"callActionFilter('advancedAction')\"\n          >\n            {{ advancedSearch }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- DISCLAIMER -->\n    <po-disclaimer-group\n      *ngIf=\"!!disclaimerGroup\"\n      [class.po-page-list-disclaimer-group]=\"!!disclaimerGroup?.disclaimers?.length\"\n      [p-disclaimers]=\"disclaimerGroup?.disclaimers\"\n      [p-hide-remove-all]=\"disclaimerGroup?.hideRemoveAll\"\n      [p-title]=\"disclaimerGroup?.title\"\n      (p-change)=\"onChangeDisclaimerGroup($event)\"\n      (p-remove)=\"onRemoveDisclaimer($event)\"\n      (p-remove-all)=\"onRemoveAllDisclaimers($event)\"\n    >\n    </po-disclaimer-group>\n  </po-page-header>\n\n  <!-- CONTENT -->\n  <po-page-content>\n    <ng-content></ng-content>\n  </po-page-content>\n</po-page>\n"
            },] }
];
PoPageListComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: PoLanguageService },
    { type: Renderer2 },
    { type: Router },
    { type: ChangeDetectorRef }
];
PoPageListComponent.propDecorators = {
    filterInput: [{ type: ViewChild, args: ['filterInput',] }],
    poPageContent: [{ type: ViewChild, args: [PoPageContentComponent, { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,