import { Component, Input, ViewChild } from '@angular/core';
export class PoGaugeDescriptionComponent {
    get isValidValue() {
        return this.value || this.value === 0;
    }
    verifyIfHasEllipsis() {
        const { offsetWidth, scrollWidth } = this.descriptionText.nativeElement;
        // O tooltip sÃ³ exibe se adicionado dentro de setTimeout.
        setTimeout(() => {
            this.tooltip = offsetWidth < scrollWidth ? this.description : undefined;
        });
    }
}
PoGaugeDescriptionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-gauge-description',
                template: "<div class=\"po-gauge-description\">\n  <ng-container *ngTemplateOutlet=\"hasRanges ? rangesDescription : percentageDescription\"> </ng-container>\n</div>\n\n<ng-template #rangesDescription>\n  <p\n    #descriptionText\n    *ngIf=\"description\"\n    class=\"po-gauge-description-text po-gauge-description-upper-text\"\n    [p-tooltip]=\"tooltip\"\n    (mouseenter)=\"verifyIfHasEllipsis()\"\n  >\n    {{ description }}\n  </p>\n</ng-template>\n\n<ng-template #percentageDescription>\n  <div class=\"po-gauge-description-bottom\" tabindex=\"0\" [style.width.px]=\"descriptionWidth\">\n    <p *ngIf=\"isValidValue\" class=\"po-gauge-description-bottom-value\">{{ value }}%</p>\n    <p\n      #descriptionText\n      *ngIf=\"description\"\n      class=\"po-gauge-description-text po-gauge-description-bottom-text\"\n      [p-tooltip]=\"tooltip\"\n      (mouseenter)=\"verifyIfHasEllipsis()\"\n    >\n      {{ description }}\n    </p>\n  </div>\n</ng-template>\n"
            },] }
];
PoGaugeDescriptionComponent.propDecorators = {
    description: [{ type: Input, args: ['p-description',] }],
    hasRanges: [{ type: Input, args: ['p-has-ranges',] }],
    descriptionWidth: [{ type: Input, args: ['p-description-width',] }],
    value: [{ type: Input, args: ['p-value',] }],
    descriptionText: [{ type: ViewChild, args: ['descriptionText',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ2F1Z2UtZGVzY3JpcHRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWdhdWdlL3BvLWdhdWdlLWRlc2NyaXB0aW9uL3BvLWdhdWdlLWRlc2NyaXB0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNeEUsTUFBTSxPQUFPLDJCQUEyQjtJQWF0QyxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELG1CQUFtQjtRQUNqQixNQUFNLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDO1FBRXhFLHlEQUF5RDtRQUN6RCxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDMUUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUE1QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQkFBc0I7Z0JBQ2hDLDI4QkFBb0Q7YUFDckQ7OzswQkFFRSxLQUFLLFNBQUMsZUFBZTt3QkFFckIsS0FBSyxTQUFDLGNBQWM7K0JBRXBCLEtBQUssU0FBQyxxQkFBcUI7b0JBRTNCLEtBQUssU0FBQyxTQUFTOzhCQUVmLFNBQVMsU0FBQyxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tZ2F1Z2UtZGVzY3JpcHRpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tZ2F1Z2UtZGVzY3JpcHRpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvR2F1Z2VEZXNjcmlwdGlvbkNvbXBvbmVudCB7XG4gIEBJbnB1dCgncC1kZXNjcmlwdGlvbicpIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG5cbiAgQElucHV0KCdwLWhhcy1yYW5nZXMnKSBoYXNSYW5nZXM6IGJvb2xlYW47XG5cbiAgQElucHV0KCdwLWRlc2NyaXB0aW9uLXdpZHRoJykgZGVzY3JpcHRpb25XaWR0aDogbnVtYmVyO1xuXG4gIEBJbnB1dCgncC12YWx1ZScpIHZhbHVlOiBudW1iZXI7XG5cbiAgQFZpZXdDaGlsZCgnZGVzY3JpcHRpb25UZXh0JykgZGVzY3JpcHRpb25UZXh0OiBFbGVtZW50UmVmO1xuXG4gIHRvb2x0aXA6IHN0cmluZztcblxuICBnZXQgaXNWYWxpZFZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlIHx8IHRoaXMudmFsdWUgPT09IDA7XG4gIH1cblxuICB2ZXJpZnlJZkhhc0VsbGlwc2lzKCkge1xuICAgIGNvbnN0IHsgb2Zmc2V0V2lkdGgsIHNjcm9sbFdpZHRoIH0gPSB0aGlzLmRlc2NyaXB0aW9uVGV4dC5uYXRpdmVFbGVtZW50O1xuXG4gICAgLy8gTyB0b29sdGlwIHPDsyBleGliZSBzZSBhZGljaW9uYWRvIGRlbnRybyBkZSBzZXRUaW1lb3V0LlxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy50b29sdGlwID0gb2Zmc2V0V2lkdGggPCBzY3JvbGxXaWR0aCA/IHRoaXMuZGVzY3JpcHRpb24gOiB1bmRlZmluZWQ7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==