import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';
import { PoGaugePadding } from './po-gauge-default-values.constant';
import { PoColorService } from '../../services/po-color/po-color.service';
import { PoGaugeBaseComponent } from './po-gauge-base.component';
/**
 * @docsExtends PoGaugeBaseComponent
 *
 * @example
 *
 * <example name="po-gauge-basic" title="PO Gauge Basic">
 *  <file name="sample-po-gauge-basic/sample-po-gauge-basic.component.html"> </file>
 *  <file name="sample-po-gauge-basic/sample-po-gauge-basic.component.ts"> </file>
 * </example>
 * <example name="po-gauge-labs" title="PO Gauge Labs">
 *  <file name="sample-po-gauge-labs/sample-po-gauge-labs.component.html"> </file>
 *  <file name="sample-po-gauge-labs/sample-po-gauge-labs.component.ts"> </file>
 * </example>
 * <example name="po-gauge-summary" title="PO Gauge Summary">
 *  <file name="sample-po-gauge-summary/sample-po-gauge-summary.component.html"> </file>
 *  <file name="sample-po-gauge-summary/sample-po-gauge-summary.component.ts"> </file>
 * </example>
 */
export class PoGaugeComponent extends PoGaugeBaseComponent {
    constructor(colorService, changeDetector) {
        super(colorService);
        this.colorService = colorService;
        this.changeDetector = changeDetector;
        this.isLoaded = false;
    }
    get hasElementRef() {
        var _a;
        return !!((_a = this.svgEl) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth);
    }
    get hasRanges() {
        return this.ranges.length > 0;
    }
    ngDoCheck() {
        if (!this.isLoaded && this.hasElementRef) {
            this.isLoaded = true;
            this.svgContainerSize();
        }
    }
    svgContainerSize() {
        var _a, _b, _c, _d, _e, _f, _g;
        if ((_a = this.svgEl) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth) {
            this.changeDetector.detectChanges();
            const titleHeight = (_c = (_b = this.titleEl.nativeElement) === null || _b === void 0 ? void 0 : _b.offsetHeight) !== null && _c !== void 0 ? _c : 0;
            const legendHeight = (_e = (_d = this.legendEl.nativeElement) === null || _d === void 0 ? void 0 : _d.offsetHeight) !== null && _e !== void 0 ? _e : 0;
            const descriptionHeight = (_g = (_f = this.descriptionEl.nativeElement) === null || _f === void 0 ? void 0 : _f.offsetHeight) !== null && _g !== void 0 ? _g : 0;
            const height = this.height - titleHeight - legendHeight - descriptionHeight - PoGaugePadding * 2;
            const width = this.svgEl.nativeElement.offsetWidth;
            this.svgContainer = { width, height };
        }
    }
}
PoGaugeComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-gauge',
                template: "<div class=\"po-gauge-wrapper\" [style.height.px]=\"height\">\n  <po-gauge-title #titleEl [p-title]=\"title\"></po-gauge-title>\n\n  <po-gauge-description\n    #descriptionEl\n    [p-description]=\"description\"\n    [p-description-width]=\"height\"\n    [p-has-ranges]=\"hasRanges\"\n    [p-value]=\"value\"\n  ></po-gauge-description>\n\n  <po-gauge-svg #svgEl [p-container]=\"svgContainer\" [p-ranges]=\"ranges\" [p-value]=\"value\"></po-gauge-svg>\n\n  <po-gauge-legend #legendEl [p-ranges]=\"ranges\"> </po-gauge-legend>\n</div>\n"
            },] }
];
PoGaugeComponent.ctorParameters = () => [
    { type: PoColorService },
    { type: ChangeDetectorRef }
];
PoGaugeComponent.propDecorators = {
    descriptionEl: [{ type: ViewChild, args: ['descriptionEl', { read: ElementRef },] }],
    legendEl: [{ type: ViewChild, args: ['legendEl', { read: ElementRef },] }],
    titleEl: [{ type: ViewChild, args: ['titleEl', { read: ElementRef },] }],
    svgEl: [{ type: ViewChild, args: ['svgEl', { read: ElementRef },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ2F1Z2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWdhdWdlL3BvLWdhdWdlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsU0FBUyxFQUFXLFVBQVUsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0YsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBRXBFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUUxRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUdqRTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkc7QUFLSCxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsb0JBQW9CO0lBVXhELFlBQXNCLFlBQTRCLEVBQVUsY0FBaUM7UUFDM0YsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBREEsaUJBQVksR0FBWixZQUFZLENBQWdCO1FBQVUsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBRnJGLGFBQVEsR0FBWSxLQUFLLENBQUM7SUFJbEMsQ0FBQztJQUVELElBQVksYUFBYTs7UUFDdkIsT0FBTyxDQUFDLENBQUMsQ0FBQSxNQUFBLElBQUksQ0FBQyxLQUFLLDBDQUFFLGFBQWEsQ0FBQyxXQUFXLENBQUEsQ0FBQztJQUNqRCxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3hDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztJQUVTLGdCQUFnQjs7UUFDeEIsSUFBSSxNQUFBLElBQUksQ0FBQyxLQUFLLDBDQUFFLGFBQWEsQ0FBQyxXQUFXLEVBQUU7WUFDekMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztZQUVwQyxNQUFNLFdBQVcsR0FBRyxNQUFBLE1BQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLDBDQUFFLFlBQVksbUNBQUksQ0FBQyxDQUFDO1lBQ2xFLE1BQU0sWUFBWSxHQUFHLE1BQUEsTUFBQSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsMENBQUUsWUFBWSxtQ0FBSSxDQUFDLENBQUM7WUFDcEUsTUFBTSxpQkFBaUIsR0FBRyxNQUFBLE1BQUEsSUFBSSxDQUFDLGFBQWEsQ0FBQyxhQUFhLDBDQUFFLFlBQVksbUNBQUksQ0FBQyxDQUFDO1lBRTlFLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsV0FBVyxHQUFHLFlBQVksR0FBRyxpQkFBaUIsR0FBRyxjQUFjLEdBQUcsQ0FBQyxDQUFDO1lBQ2pHLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQztZQUVuRCxJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDO1NBQ3ZDO0lBQ0gsQ0FBQzs7O1lBOUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsbWlCQUF3QzthQUN6Qzs7O1lBMUJRLGNBQWM7WUFKZCxpQkFBaUI7Ozs0QkFnQ3ZCLFNBQVMsU0FBQyxlQUFlLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFO3VCQUMvQyxTQUFTLFNBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtzQkFDMUMsU0FBUyxTQUFDLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUU7b0JBQ3pDLFNBQVMsU0FBQyxPQUFPLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRG9DaGVjaywgRWxlbWVudFJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFBvR2F1Z2VQYWRkaW5nIH0gZnJvbSAnLi9wby1nYXVnZS1kZWZhdWx0LXZhbHVlcy5jb25zdGFudCc7XG5cbmltcG9ydCB7IFBvQ29sb3JTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcG8tY29sb3IvcG8tY29sb3Iuc2VydmljZSc7XG5cbmltcG9ydCB7IFBvR2F1Z2VCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1nYXVnZS1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0dhdWdlU3ZnQ29udGFpbmVyIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLWdhdWdlLXN2Zy1jb250YWluZXIuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9HYXVnZUJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1nYXVnZS1iYXNpY1wiIHRpdGxlPVwiUE8gR2F1Z2UgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWdhdWdlLWJhc2ljL3NhbXBsZS1wby1nYXVnZS1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1nYXVnZS1iYXNpYy9zYW1wbGUtcG8tZ2F1Z2UtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqIDxleGFtcGxlIG5hbWU9XCJwby1nYXVnZS1sYWJzXCIgdGl0bGU9XCJQTyBHYXVnZSBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1nYXVnZS1sYWJzL3NhbXBsZS1wby1nYXVnZS1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWdhdWdlLWxhYnMvc2FtcGxlLXBvLWdhdWdlLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqIDxleGFtcGxlIG5hbWU9XCJwby1nYXVnZS1zdW1tYXJ5XCIgdGl0bGU9XCJQTyBHYXVnZSBTdW1tYXJ5XCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1nYXVnZS1zdW1tYXJ5L3NhbXBsZS1wby1nYXVnZS1zdW1tYXJ5LmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWdhdWdlLXN1bW1hcnkvc2FtcGxlLXBvLWdhdWdlLXN1bW1hcnkuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tZ2F1Z2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tZ2F1Z2UuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvR2F1Z2VDb21wb25lbnQgZXh0ZW5kcyBQb0dhdWdlQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIERvQ2hlY2sge1xuICBAVmlld0NoaWxkKCdkZXNjcmlwdGlvbkVsJywgeyByZWFkOiBFbGVtZW50UmVmIH0pIGRlc2NyaXB0aW9uRWw6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ2xlZ2VuZEVsJywgeyByZWFkOiBFbGVtZW50UmVmIH0pIGxlZ2VuZEVsOiBFbGVtZW50UmVmO1xuICBAVmlld0NoaWxkKCd0aXRsZUVsJywgeyByZWFkOiBFbGVtZW50UmVmIH0pIHRpdGxlRWw6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3N2Z0VsJywgeyByZWFkOiBFbGVtZW50UmVmIH0pIHN2Z0VsOiBFbGVtZW50UmVmO1xuXG4gIHN2Z0NvbnRhaW5lcjogUG9HYXVnZVN2Z0NvbnRhaW5lcjtcblxuICBwcml2YXRlIGlzTG9hZGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGNvbG9yU2VydmljZTogUG9Db2xvclNlcnZpY2UsIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgc3VwZXIoY29sb3JTZXJ2aWNlKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IGhhc0VsZW1lbnRSZWYoKSB7XG4gICAgcmV0dXJuICEhdGhpcy5zdmdFbD8ubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aDtcbiAgfVxuXG4gIGdldCBoYXNSYW5nZXMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucmFuZ2VzLmxlbmd0aCA+IDA7XG4gIH1cblxuICBuZ0RvQ2hlY2soKSB7XG4gICAgaWYgKCF0aGlzLmlzTG9hZGVkICYmIHRoaXMuaGFzRWxlbWVudFJlZikge1xuICAgICAgdGhpcy5pc0xvYWRlZCA9IHRydWU7XG4gICAgICB0aGlzLnN2Z0NvbnRhaW5lclNpemUoKTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgc3ZnQ29udGFpbmVyU2l6ZSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zdmdFbD8ubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aCkge1xuICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XG5cbiAgICAgIGNvbnN0IHRpdGxlSGVpZ2h0ID0gdGhpcy50aXRsZUVsLm5hdGl2ZUVsZW1lbnQ/Lm9mZnNldEhlaWdodCA/PyAwO1xuICAgICAgY29uc3QgbGVnZW5kSGVpZ2h0ID0gdGhpcy5sZWdlbmRFbC5uYXRpdmVFbGVtZW50Py5vZmZzZXRIZWlnaHQgPz8gMDtcbiAgICAgIGNvbnN0IGRlc2NyaXB0aW9uSGVpZ2h0ID0gdGhpcy5kZXNjcmlwdGlvbkVsLm5hdGl2ZUVsZW1lbnQ/Lm9mZnNldEhlaWdodCA/PyAwO1xuXG4gICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmhlaWdodCAtIHRpdGxlSGVpZ2h0IC0gbGVnZW5kSGVpZ2h0IC0gZGVzY3JpcHRpb25IZWlnaHQgLSBQb0dhdWdlUGFkZGluZyAqIDI7XG4gICAgICBjb25zdCB3aWR0aCA9IHRoaXMuc3ZnRWwubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aDtcblxuICAgICAgdGhpcy5zdmdDb250YWluZXIgPSB7IHdpZHRoLCBoZWlnaHQgfTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==