import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { PoMenuModule } from '../po-menu/po-menu.module';
import { PoNavbarActionsModule } from './po-navbar-actions/po-navbar-actions.module';
import { PoNavbarComponent } from './po-navbar.component';
import { PoNavbarItemsModule } from './po-navbar-items/po-navbar-items.module';
import { PoNavbarLogoComponent } from './po-navbar-logo/po-navbar-logo.component';
import { PoNavbarItemNavigationModule } from './po-navbar-item-navigation/po-navbar-item-navigation.module';
import { PoIconModule } from './../po-icon/po-icon.module';
/**
 * @description
 *
 * Módulo do componente `po-navbar`.
 *
 * > Para o correto funcionamento do componente `po-navbar`, deve ser importado o módulo `BrowserAnimationsModule` no
 * > módulo principal da sua aplicação.
 *
 * Módulo da aplicação:
 * ```
 * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
 * import { PoModule } from '@po-ui/ng-components';
 * ...
 *
 * @NgModule({
 *   imports: [
 *     BrowserModule,
 *     BrowserAnimationsModule,
 *     ...
 *     PoModule
 *   ],
 *   declarations: [
 *     AppComponent,
 *     ...
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 */
export class PoNavbarModule {
}
PoNavbarModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    PoNavbarActionsModule,
                    PoNavbarItemsModule,
                    PoNavbarItemNavigationModule,
                    PoMenuModule,
                    PoIconModule
                ],
                declarations: [PoNavbarComponent, PoNavbarLogoComponent],
                exports: [PoNavbarComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1uYXZiYXIvcG8tbmF2YmFyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDckYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDL0UsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDbEYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sOERBQThELENBQUM7QUFDNUcsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E4Qkc7QUFhSCxNQUFNLE9BQU8sY0FBYzs7O1lBWjFCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixxQkFBcUI7b0JBQ3JCLG1CQUFtQjtvQkFDbkIsNEJBQTRCO29CQUM1QixZQUFZO29CQUNaLFlBQVk7aUJBQ2I7Z0JBQ0QsWUFBWSxFQUFFLENBQUMsaUJBQWlCLEVBQUUscUJBQXFCLENBQUM7Z0JBQ3hELE9BQU8sRUFBRSxDQUFDLGlCQUFpQixDQUFDO2FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IFBvTWVudU1vZHVsZSB9IGZyb20gJy4uL3BvLW1lbnUvcG8tbWVudS5tb2R1bGUnO1xuaW1wb3J0IHsgUG9OYXZiYXJBY3Rpb25zTW9kdWxlIH0gZnJvbSAnLi9wby1uYXZiYXItYWN0aW9ucy9wby1uYXZiYXItYWN0aW9ucy5tb2R1bGUnO1xuaW1wb3J0IHsgUG9OYXZiYXJDb21wb25lbnQgfSBmcm9tICcuL3BvLW5hdmJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9OYXZiYXJJdGVtc01vZHVsZSB9IGZyb20gJy4vcG8tbmF2YmFyLWl0ZW1zL3BvLW5hdmJhci1pdGVtcy5tb2R1bGUnO1xuaW1wb3J0IHsgUG9OYXZiYXJMb2dvQ29tcG9uZW50IH0gZnJvbSAnLi9wby1uYXZiYXItbG9nby9wby1uYXZiYXItbG9nby5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9OYXZiYXJJdGVtTmF2aWdhdGlvbk1vZHVsZSB9IGZyb20gJy4vcG8tbmF2YmFyLWl0ZW0tbmF2aWdhdGlvbi9wby1uYXZiYXItaXRlbS1uYXZpZ2F0aW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBQb0ljb25Nb2R1bGUgfSBmcm9tICcuLy4uL3BvLWljb24vcG8taWNvbi5tb2R1bGUnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE3Ds2R1bG8gZG8gY29tcG9uZW50ZSBgcG8tbmF2YmFyYC5cbiAqXG4gKiA+IFBhcmEgbyBjb3JyZXRvIGZ1bmNpb25hbWVudG8gZG8gY29tcG9uZW50ZSBgcG8tbmF2YmFyYCwgZGV2ZSBzZXIgaW1wb3J0YWRvIG8gbcOzZHVsbyBgQnJvd3NlckFuaW1hdGlvbnNNb2R1bGVgIG5vXG4gKiA+IG3Ds2R1bG8gcHJpbmNpcGFsIGRhIHN1YSBhcGxpY2HDp8Ojby5cbiAqXG4gKiBNw7NkdWxvIGRhIGFwbGljYcOnw6NvOlxuICogYGBgXG4gKiBpbXBvcnQgeyBCcm93c2VyQW5pbWF0aW9uc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG4gKiBpbXBvcnQgeyBQb01vZHVsZSB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcbiAqIC4uLlxuICpcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICBCcm93c2VyTW9kdWxlLFxuICogICAgIEJyb3dzZXJBbmltYXRpb25zTW9kdWxlLFxuICogICAgIC4uLlxuICogICAgIFBvTW9kdWxlXG4gKiAgIF0sXG4gKiAgIGRlY2xhcmF0aW9uczogW1xuICogICAgIEFwcENvbXBvbmVudCxcbiAqICAgICAuLi5cbiAqICAgXSxcbiAqICAgcHJvdmlkZXJzOiBbXSxcbiAqICAgYm9vdHN0cmFwOiBbQXBwQ29tcG9uZW50XVxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBNb2R1bGUgeyB9XG4gKiBgYGBcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBQb05hdmJhckFjdGlvbnNNb2R1bGUsXG4gICAgUG9OYXZiYXJJdGVtc01vZHVsZSxcbiAgICBQb05hdmJhckl0ZW1OYXZpZ2F0aW9uTW9kdWxlLFxuICAgIFBvTWVudU1vZHVsZSxcbiAgICBQb0ljb25Nb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbUG9OYXZiYXJDb21wb25lbnQsIFBvTmF2YmFyTG9nb0NvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtQb05hdmJhckNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgUG9OYXZiYXJNb2R1bGUge31cbiJdfQ==