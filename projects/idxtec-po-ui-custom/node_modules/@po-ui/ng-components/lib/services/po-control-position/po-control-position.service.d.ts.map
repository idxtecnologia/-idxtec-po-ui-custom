{"version":3,"file":"po-control-position.service.d.ts","sources":["po-control-position.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\nexport declare class PoControlPositionService {\n    private arrowDirection;\n    private customPositions;\n    private differenceDiagonalToWidthArrow;\n    private element;\n    private elementOffset;\n    private isCornerAligned;\n    private isSetElementWidth;\n    private offsetArrow;\n    private targetElement;\n    /**\n     * @description Ajusta a posição do elemento, caso não couber em tela irá para próxima posição.\n     *\n     * @param value posição para exibição do elemento\n     */\n    adjustPosition(value: string): void;\n    /**\n     * @description Retorna a direção da seta, conforme a posição do elemento.\n     */\n    getArrowDirection(): string;\n    /**\n     * @description Método responsável por definir as propriedades utilizadas para exibir o elemento na posição correta.\n     *\n     * @param element elemento que será exibido\n     * @param elementOffset offSet do elemento\n     * @param targetElement elemento de onde deve partir a exibição\n     * @param customPositions posições que sobrescreve as posições padrões\n     * @param isSetElementWidth indica se deve definir o tamanho do elemento a ser exibido, caso for verdadeiro será igual do targetElement\n     * @param isCornerAligned indica se o elemento filho será alinhado nos cantos do elemneto pai.\n     */\n    setElements(element: ElementRef | HTMLElement, elementOffset: number, targetElement: ElementRef | HTMLElement, customPositions?: Array<string>, isSetElementWidth?: boolean, isCornerAligned?: boolean): void;\n    private adjustCustomPosition;\n    private adjustDefaultPosition;\n    private elementPosition;\n    private getMainPosition;\n    private getMainPositions;\n    private getMainPositionsByCustomPositions;\n    private getOverflows;\n    private getSizesAndPositions;\n    private nextPosition;\n    private overflowAllSides;\n    private overflowMain;\n    private setAlignedArrowDirection;\n    private setAlignedBottomPositions;\n    private setAlignedElementPosition;\n    private setAlignedTopPositions;\n    private setArrowDirection;\n    private setBottomPositions;\n    private setElementPosition;\n    private setElementWidth;\n    private setLeftPositions;\n    private setRightPositions;\n    private setTopPositions;\n    private verifySubPositions;\n}\n"]}