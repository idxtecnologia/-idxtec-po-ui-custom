{"version":3,"file":"po-modal-base.component.d.ts","sources":["po-modal-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoModalAction } from './po-modal-action.interface';\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\n/**\n * @description\n *\n * O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.\n *\n * No cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.\n *\n * Em seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\n * `po-table` e os demais componentes do PO.\n *\n * No rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como\n * definir um estado de carregando e / ou desabilitado e / ou definir o botão com o tipo *danger*. Também é possível utilizar\n * o componente [`PoModalFooter`](/documentation/po-modal-footer).\n *\n * > É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada.\n */\nexport declare class PoModalBaseComponent {\n    /** Título da modal. */\n    title: string;\n    /**\n     * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da primeira ação.\n     * Caso esta propriedade não seja definida ou esteja incompleta, automaticamente será adicionado um botão de ação com\n     * a função de fechar a modal.\n     */\n    primaryAction?: PoModalAction;\n    /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da segunda ação. */\n    secondaryAction?: PoModalAction;\n    language: any;\n    literals: any;\n    isHidden: boolean;\n    onXClosed: EventEmitter<boolean>;\n    private _hideClose?;\n    private _size?;\n    /**\n     * Define o tamanho da modal.\n     *\n     * Valores válidos:\n     *  - `sm` (pequeno)\n     *  - `md` (médio)\n     *  - `lg` (grande)\n     *  - `xl` (extra grande)\n     *  - `auto` (automático)\n     *\n     * > Quando informado `auto` a modal calculará automaticamente seu tamanho baseado em seu conteúdo.\n     * Caso não seja informado um valor, a modal terá o tamanho definido como `md`.\n     *\n     * > Todas as opções de tamanho possuem uma largura máxima de **768px**.\n     */\n    set size(value: string);\n    get size(): string;\n    /**\n     * Define o fechamento da modal ao clicar fora da mesma.\n     * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\n     */\n    clickOut?: boolean;\n    set setClickOut(value: boolean | string);\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Oculta o ícone de fechar do cabeçalho da modal.\n     *\n     * > Caso a propriedade estiver habilitada, não será possível fechar a modal através da tecla *ESC*.\n     *\n     * @default `false`\n     */\n    set hideClose(value: boolean);\n    get hideClose(): boolean;\n    constructor(poLanguageService: PoLanguageService);\n    /** Função para fechar a modal. */\n    close(xClosed?: boolean): void;\n    /** Função para abrir a modal. */\n    open(): void;\n    validPrimaryAction(): void;\n}\n"]}