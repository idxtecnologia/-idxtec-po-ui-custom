{"version":3,"file":"po-tree-view-base.component.d.ts","sources":["po-tree-view-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\n/**\n * @description\n *\n * O componente fornece um modelo de visualização em árvore, possibilitando a visualização das informações de maneira\n * hierárquica, desta forma sendo possível utilizar até 4 níveis.\n *\n * Nele é possível navegar entre os itens através da tecla *tab*, permitindo expandir ou colapsar o item em foco\n * por meio das teclas *enter* e *space*.\n *\n * Além da navegação, o componente possibilita também a seleção dos itens do primeiro ao último nível, tanto de forma parcial como completa.\n *\n * O componente também possui eventos disparados ao marcar/desmarcar e expandir/colapsar os itens.\n */\nexport declare class PoTreeViewBaseComponent {\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ação que será disparada ao colapsar um item.\n     *\n     * > Como parâmetro o componente envia o item colapsado.\n     */\n    collapsed: EventEmitter<PoTreeViewItem>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ação que será disparada ao expandir um item.\n     *\n     * > Como parâmetro o componente envia o item expandido.\n     */\n    expanded: EventEmitter<PoTreeViewItem>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ação que será disparada ao selecionar um item.\n     *\n     * > Como parâmetro o componente envia o item selecionado.\n     */\n    selected: EventEmitter<PoTreeViewItem>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ação que será disparada ao desfazer a seleção de um item.\n     *\n     * > Como parâmetro o componente envia o item que foi desmarcado.\n     */\n    unselected: EventEmitter<PoTreeViewItem>;\n    private _items;\n    private _selectable;\n    /**\n     * Lista de itens do tipo `PoTreeViewItem` que será renderizada pelo componente.\n     */\n    set items(value: Array<PoTreeViewItem>);\n    get items(): Array<PoTreeViewItem>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Habilita uma caixa de seleção para selecionar e/ou desmarcar um item da lista.\n     *\n     * @default false\n     */\n    set selectable(value: boolean);\n    get selectable(): boolean;\n    protected emitExpanded(treeViewItem: PoTreeViewItem): void;\n    protected emitSelected(treeViewItem: PoTreeViewItem): void;\n    private addChildItemInParent;\n    private addItem;\n    private selectAllItems;\n    private selectItemBySubItems;\n    private everyItemSelected;\n    private expandParentItem;\n    private getItemsByMaxLevel;\n    private getItemsWithParentSelected;\n    private updateItemsOnSelect;\n}\n"]}