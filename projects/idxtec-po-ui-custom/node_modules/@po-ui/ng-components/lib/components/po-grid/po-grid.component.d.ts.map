{"version":3,"file":"po-grid.component.d.ts","sources":["po-grid.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { PoGridRowActions } from './po-grid-row-actions.interface';\n/**\n * @description\n *\n * > Componente em desenvolvimento, podendo haver BREAKING CHANGES nas próximas versões.\n *\n * Componente grid.\n *\n * Ações / atalhos:\n *\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\n * - ARROW-DOWN: Navega para celula inferior;\n * - ARROW-RIGHT: Navega para celula direita;\n * - ARROW-LEFT: Navega para celula esquerda;\n * - TAB: Navega para próxima celula;\n * - SHIFT+TAB: Navega para celula anterior;\n * - CTRL+DEL: Remove linha;\n * - DEL/BACKSPACE: Limpa celula;\n * - ENTER: Edita linha com valor atual/Confirma edição da celula;\n * - DOUBLE-CLICK: Edita linha com valor atual;\n * - ESC: Cancela edição da celula / Cancela inserção de linhas em branco;\n * - A..Z/0..9: Inicia edição com valor em branco.\n *\n * @example\n *\n * <example name=\"po-grid-basic\" title=\"PO Grid Basic\">\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.html\"> </file>\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.ts\"> </file>\n * </example>\n */\nexport declare class PoGridComponent implements OnDestroy {\n    private changeDetectorRef;\n    private elRef;\n    tableElement: ElementRef;\n    tableWrapper: ElementRef;\n    /**\n     * @description\n     *\n     * Ações disparadas quando uma linha do grid é manipulada.\n     */\n    rowActions: PoGridRowActions;\n    /**\n     * Lista com os dados que serão exibidos no grid.\n     */\n    data: Array<any>;\n    lastCell: string;\n    lastRow: number;\n    lastColumn: number;\n    currencyCell: string;\n    currencyRow: number;\n    currencyColumn: number;\n    currencyObj: any;\n    logger: boolean;\n    width: string;\n    widporeeze: number;\n    widthActions: number;\n    private resizeListener;\n    private timeoutResize;\n    private _columns;\n    /**\n     * Colunas exibidas no grid.\n     */\n    set columns(value: Array<any>);\n    get columns(): Array<any>;\n    constructor(changeDetectorRef: ChangeDetectorRef, elRef: ElementRef, renderer: Renderer2);\n    ngOnDestroy(): void;\n    get freezeColumns(): any[];\n    get actionColumns(): any[];\n    cancelRow(event: any, row: any): void;\n    removeRow(event: any, row: any): boolean;\n    tableKeydown(event: any, direction: string): void;\n    tableClick(event: any): void;\n    saveRow(row: number): boolean;\n    insertRow(): boolean;\n    isEmptyRow(row: number): boolean;\n    selectCell(row: number, col: number): void;\n    private debounceResize;\n    private getEventPath;\n}\n"]}