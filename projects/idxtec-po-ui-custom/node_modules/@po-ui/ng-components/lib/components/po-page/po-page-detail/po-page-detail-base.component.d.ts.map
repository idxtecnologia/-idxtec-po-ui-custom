{"version":3,"file":"po-page-detail-base.component.d.ts","sources":["po-page-detail-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\nimport { PoPageDetailLiterals } from './po-page-detail-literals.interface';\nexport declare const poPageDetailLiteralsDefault: {\n    en: PoPageDetailLiterals;\n    es: PoPageDetailLiterals;\n    pt: PoPageDetailLiterals;\n    ru: PoPageDetailLiterals;\n};\n/**\n * @description\n *\n * O componente **po-page-detail** é utilizado como container principal para a tela de\n * detalhamento de um registro, tendo a possibilidade de usar as ações de \"Voltar\", \"Editar\" e \"Remover\".\n */\nexport declare class PoPageDetailBaseComponent {\n    poPageContent: PoPageContentComponent;\n    /** Objeto com propriedades do breadcrumb. */\n    breadcrumb: PoBreadcrumb;\n    /**\n     * Evento que será disparado ao clicar no botão de \"Voltar\".\n     *\n     * ```\n     * <po-page-detail (p-back)=\"myBackFunction()\">\n     * </po-page-detail>\n     * ```\n     *\n     * > Caso não utilizar esta propriedade, o botão de \"Voltar\" não será exibido.\n     */\n    back: EventEmitter<any>;\n    /**\n     * Evento que será disparado ao clicar no botão de \"Editar\".\n     *\n     * ```\n     * <po-page-detail (p-edit)=\"myEditFunction()\">\n     * </po-page-detail>\n     * ```\n     *\n     * > Caso não utilizar esta propriedade, o botão de \"Editar\" não será exibido.\n     */\n    edit: EventEmitter<any>;\n    /**\n     * Evento que será disparado ao clicar no botão de \"Remover\".\n     *\n     * ```\n     * <po-page-detail (p-remove)=\"myRemoveFunction()\">\n     * </po-page-detail>\n     * ```\n     *\n     * > Caso não utilizar esta propriedade, o botão de \"Remover\" não será exibido.\n     */\n    remove: EventEmitter<any>;\n    private _literals;\n    private _title;\n    private language;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Objeto com as literais usadas no `po-page-detail`.\n     *\n     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\n     *\n     * ```\n     *  const customLiterals: PoPageDetailLiterals = {\n     *    edit: 'Edição',\n     *    remove: 'Exclusão',\n     *    back: 'Menu'\n     *  };\n     * ```\n     *\n     * Ou passando apenas as literais que deseja customizar:\n     *\n     * ```\n     *  const customLiterals: PoPageDetailLiterals = {\n     *    remove: 'Excluir registro permanentemente'\n     *  };\n     * ```\n     *\n     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n     *\n     * ```\n     * <po-page-detail\n     *   [p-literals]=\"customLiterals\">\n     * </po-page-detail>\n     * ```\n     *\n     * > O objeto padrão de literais será traduzido de acordo com o idioma do\n     * [`PoI18nService`](/documentation/po-i18n) ou do browser.\n     */\n    set literals(value: PoPageDetailLiterals);\n    get literals(): PoPageDetailLiterals;\n    /** Título da página. */\n    set title(title: string);\n    get title(): string;\n    constructor(languageService: PoLanguageService);\n}\n"]}