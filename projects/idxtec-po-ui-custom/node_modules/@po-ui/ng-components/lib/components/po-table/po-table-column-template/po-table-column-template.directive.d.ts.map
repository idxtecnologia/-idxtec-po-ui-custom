{"version":3,"file":"po-table-column-template.directive.d.ts","sources":["po-table-column-template.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef } from '@angular/core';\n/**\n * @usedBy PoTableComponent\n *\n * @description\n *\n * Esta diretiva permite que seja possível alterar o conteúdo das células de uma coluna, para que os valores possam ser exibidos\n * de acordo com a necessidade do usuário.\n *\n * Em seu uso, deve-se utilizar como parâmetro de entrada o input [p-property], o qual é responsável por informar ao PO-TABLE qual a coluna que\n * será adicionado o conteúdo do template.\n *\n * Retorno:\n *  - value: valor referente ao conteúdo da linha corrente.\n *\n * Modo de uso:\n * ```html\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *   <ng-template p-table-column-template [p-property]=\"targetProperty\" let-value>\n *     <span [innerText]=\"value\"></span>\n *   </ng-template>\n * </po-table>\n * ...\n * ```\n * > No exemplo acima, todas as células correspondentes a coluna `status` terão o conteúdo alterado para `<h1>${value}</h1>`,\n * sendo que `value` refere-se ao conteúdo da linha.\n *\n * ```html\n * ...\n * <po-table\n *   [p-columns]=\"columns\"\n *   [p-items]=\"items\">\n *   <ng-template  p-table-column-template [p-property]=\"targetProperty\" let-value>\n *     <span *ngIf=\"value === 'FINISHED'\" [style.background]=\"'silver'\" [innerText]=\"value\"></span>\n *     <span *ngIf=\"value === 'OPENED'\" [style.background]=\"'gray'\" [innerText]=\"value\"></span>\n *   </ng-template>\n * </po-table>\n * ...\n * ```\n * > Agora, neste exemplo, com o valor da linha corrente retornado (value), é feito uma validação para\n * definir o template exato para adicionar a uma específica célula.\n *\n * Abaixo, a declaração dos dados de entrada do PO-TABLE para o uso da directiva.\n * ```typescript\n * ...\n * export class AppComponent {\n *\n *    targetProperty= 'status';\n *\n *    items = [{\n *      code: 1200,\n *      product: 'Rice',\n *      status: 'CANCELED'\n *      },{\n *      code: 1355,\n *      product: 'Bean',\n *      status: 'FINISHED'\n *    }];\n *\n *    columns = [\n *      { property: 'code', label: 'ID' },\n *      { property: 'product', label: 'PRODUTO' },\n *      { property: 'status', label: 'STATUS', type: 'columnTemplate' }\n *    ];\n * }\n * ...\n * ```\n * > Observação: Sempre adicionar o **type** da coluna que deseja manipular com a directiva como `columnTemplate`\n */\nexport declare class PoTableColumnTemplateDirective {\n    templateRef: TemplateRef<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Variável responsável por armazenar a property da coluna da tabela que será adicionado o template.\n     *\n     * Caso não seja informada esta propriedade, serão apresentados normalmente os dados da coluna.\n     */\n    targetProperty: string;\n    constructor(templateRef: TemplateRef<any>);\n}\n"]}