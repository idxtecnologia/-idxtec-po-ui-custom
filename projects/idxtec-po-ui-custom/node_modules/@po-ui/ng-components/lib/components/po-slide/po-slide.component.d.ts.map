{"version":3,"file":"po-slide.component.d.ts","sources":["po-slide.component.d.ts"],"names":[],"mappingssourcesContent":["import { DoCheck, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { AnimationBuilder } from '@angular/animations';\nimport { PoSlideBaseComponent } from './po-slide-base.component';\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\n/**\n * @docsExtends PoSlideBaseComponent\n *\n * @example\n * <example name=\"po-slide-basic\" title=\"PO Slide Basic\">\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.html\"> </file>\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-labs\" title=\"PO Slide Labs\">\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.html\"> </file>\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-useful-articles\" title=\"PO Slide - Useful articles\">\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html\"> </file>\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-landscapes\" title=\"PO Slide - Landscapes\">\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.html\"> </file>\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-slide-external-controls\" title=\"PO Slide - External Controls\">\n *  <file name=\"sample-po-slide-external-controls/sample-po-slide-external-controls.component.html\"> </file>\n *  <file name=\"sample-po-slide-external-controls/sample-po-slide-external-controls.component.ts\"> </file>\n * </example>\n */\nexport declare class PoSlideComponent extends PoSlideBaseComponent implements OnInit, DoCheck, OnChanges, OnDestroy {\n    private builder;\n    slideContentTemplate: PoSlideContentTemplateDirective;\n    private slide;\n    private itemsElements;\n    currentSlideIndex: number;\n    imageHeight: number;\n    slideItems: Array<PoSlideItem | any>;\n    slideItemWidth: number;\n    private isLoaded;\n    private player;\n    private setInterval;\n    private resize$;\n    private resizeSubscription;\n    private get hasElements();\n    private get isImageSlide();\n    private get offset();\n    get hasSlides(): boolean;\n    constructor(builder: AnimationBuilder);\n    onResize(): void;\n    ngOnInit(): void;\n    ngDoCheck(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    /**\n     * Método que retorna o index do slide atual\n     *\n     * ```\n     * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\n     *  myFunction() {\n     *    let currentIndex = this.slideComponent.getCurrentSlideIndex();\n     * }\n     *\n     * ```\n     */\n    getCurrentSlideIndex(): number;\n    goToItem(index: number): void;\n    nextControl(): void;\n    /**\n     * Método para chamar o próximo slide.\n     *\n     * ```\n     * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\n     *\n     * myFunction() {\n     *  this.slideComponent.next();\n     * }\n     * ```\n     */\n    next(): void;\n    /**\n     * Método para chamar o slide anterior.\n     *\n     * ```\n     * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\n     *\n     * myFunction() {\n     *  this.slideComponent.previous();\n     * }\n     * ```\n     */\n    previous(): void;\n    previousControl(): void;\n    setSlideHeight(height: number): void;\n    protected cancelInterval(): void;\n    protected setSlideItems(slides: Array<PoSlideItem | string | any>): void;\n    protected startSlide(): void;\n    protected startInterval(): void;\n    private animate;\n    private buildTransitionAnimation;\n    private createArrayForTemplate;\n    private createArrayFromSlides;\n    private setDefaultHeight;\n    private setHeight;\n    private setSlideItemWidth;\n}\n"]}