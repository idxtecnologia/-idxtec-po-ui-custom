{"version":3,"file":"po-stepper.component.d.ts","sources":["po-stepper.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, QueryList } from '@angular/core';\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperBaseComponent } from './po-stepper-base.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\n/**\n * @docsExtends PoStepperBaseComponent\n *\n * @example\n *\n * <example name=\"po-stepper-basic\" title=\"PO Stepper Basic\">\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.html\"> </file>\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-labs\" title=\"PO Stepper Labs\">\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.html\"> </file>\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-sales\" title=\"PO Stepper - Sales\">\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.html\"> </file>\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-stepper-active\" title=\"PO Stepper - Active\">\n *  <file name=\"sample-po-stepper-active/sample-po-stepper-active.component.html\"> </file>\n *  <file name=\"sample-po-stepper-active/sample-po-stepper-active.component.ts\"> </file>\n *  <file name=\"sample-po-stepper-active/sample-po-stepper-active.service.ts\"> </file>\n * </example>\n */\nexport declare class PoStepperComponent extends PoStepperBaseComponent implements AfterContentInit {\n    private changeDetector;\n    poSteps: QueryList<PoStepComponent>;\n    private currentActiveStep;\n    get currentStepIndex(): number;\n    get stepList(): QueryList<PoStepComponent> | Array<PoStepperItem>;\n    get usePoSteps(): boolean;\n    constructor(changeDetector: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    /**\n     * Altera o status do *step* para ativo.\n     *\n     * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\n     *\n     * @param {number} index Índice do `po-step` que se deseja ativar.\n     */\n    active(index: number): void;\n    /**\n     * Ativa o primeiro *step*.\n     *\n     * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\n     */\n    first(): void;\n    /**\n     * Ativa o próximo *step*.\n     *\n     * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\n     */\n    next(): void;\n    /**\n     * Ativa o *step* anterior.\n     *\n     * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\n     */\n    previous(): void;\n    changeStep(stepIndex: number, step?: PoStepComponent): void;\n    onStepActive(step: PoStepComponent): void;\n    trackByFn(step: PoStepComponent): string;\n    private activeFirstStep;\n    private allowNextStep;\n    private canActiveNextStep;\n    private controlStepsStatus;\n    private getStepperStatusByCanActive;\n    private getStepsAndIndex;\n    private getPoSteps;\n    private isBeforeStep;\n    private setFinalSteppersAsDisabled;\n    private setStepAsActive;\n    private setNextStepAsDefault;\n}\n"]}