{"version":3,"file":"po-stepper-base.component.d.ts","sources":["po-stepper-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoStepComponent } from './po-step/po-step.component';\nimport { PoStepperItem } from './po-stepper-item.interface';\nimport { PoStepperOrientation } from './enums/po-stepper-orientation.enum';\n/**\n * @description\n *\n * O `po-stepper` permite que um processo seja dividido em passos para que o usuário o realize\n * mais facilmente.\n *\n * Existem duas formas de utilização:\n *\n * 1 - Usando o componente [**po-step**](/documentation/po-step) para renderizar e descrever os passos.\n *\n * 2 - Através da propriedade `p-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\n * de renderização do que será exibido a cada *step* ativo.\n *\n * Através de suas propriedades, é possível definir se sua orientação será horizontal ou vertical,\n * além da possibilidade de aumentar o tamanho dos *steps*.\n *\n * Também é possível navegar entre os *steps* através do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\n * pressionar a tecla *enter*. Além disso, é possível ativar a exibição de ícones no lugar de números nos *steps* através da\n * propriedade [`p-step-icons`](/documentation/po-stepper#stepIconsProperty).\n *\n * #### Utilizando os métodos do componente:\n *\n * Para acessar os métodos do componente é necessário ter a referência do mesmo.\n *\n * Por exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\n *\n * ```\n * @ViewChild(PoStepperComponent) poStepperComponent: PoStepperComponent;\n * ```\n *\n * E para acessar o método:\n *\n * ```\n * poStepperComponent.next();\n * ```\n *\n * #### Boas práticas\n *\n * - Evite `labels` extensos que quebram o layout do `po-stepper`, use `labels` diretos, curtos e intuitivos.\n * - Utilize apenas um `po-stepper` por página.\n */\nexport declare class PoStepperBaseComponent {\n    /**\n     *\n     * @optional\n     *\n     * @description\n     *\n     * <a id=\"stepIconsProperty\"></a>\n     *\n     * Habilita a exibição de ícone ao invés de número no centro do círculo dos *steps*.\n     *\n     * @default `false`\n     */\n    stepIcons: boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define o tamanho dos *steps* em *pixels*, possibilitando um maior destaque.\n     *\n     * O valor informado deve ser entre `24` e `64`.\n     *\n     * > Valores que não se enquadrarem a esta regra serão ignorados, mantendo-se o valor *default*.\n     *\n     * @default `24`\n     */\n    stepSize: number;\n    /** Ação que será executada quando o usuário mudar o passo do `po-stepper`. */\n    onChangeStep: EventEmitter<number | PoStepComponent>;\n    private _orientation?;\n    private _sequential?;\n    private _step;\n    private _steps;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define a orientação de exibição do `po-stepper`.\n     *\n     * > Veja os valores válidos no *enum* [PoStepperOrientation](documentation/po-stepper#stepperOrientation).\n     *\n     * @default `PoStepperOrientation.Horizontal`\n     */\n    set orientation(value: PoStepperOrientation);\n    get orientation(): PoStepperOrientation;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Controla o passo atual do `po-stepper`.\n     *\n     * > Ao utilizar esta propriedade e também utilizar o componente [**po-step**](/documentation/po-step),\n     * o valor desta propriedade será ignorada permanecendo a definição do [**po-step**](/documentation/po-step).\n     *\n     * @default `1`\n     */\n    set step(step: number);\n    get step(): number;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Lista dos itens do stepper. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio.\n     *\n     * > Ao utilizar esta propriedade e também utilizar o componente [**po-step**](/documentation/po-step),\n     * o valor desta propriedade será ignorada permanecendo a definição do [**po-step**](/documentation/po-step).\n     */\n    set steps(steps: Array<PoStepperItem>);\n    get steps(): Array<PoStepperItem>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define se o `po-stepper` será sequencial ou aleatório.\n     *\n     * > Ao utilizar o componente [**po-step**](/documentation/po-step), o valor desta propriedade sempre será verdadeiro.\n     *\n     * @default `true`\n     */\n    set sequential(sequential: boolean);\n    get sequential(): boolean;\n}\n"]}