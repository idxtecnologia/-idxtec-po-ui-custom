{"version":3,"file":"po-calendar.component.d.ts","sources":["po-calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { PoCalendarBaseComponent } from './po-calendar-base.component';\nimport { PoDateService } from '../../services/po-date/po-date.service';\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\n/**\n * @docsExtends PoCalendarBaseComponent\n *\n * @example\n *\n * <example name=\"po-calendar-basic\" title=\"PO Calendar Basic\" >\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.html\"> </file>\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-labs\" title=\"PO Calendar Labs\" >\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.html\"> </file>\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-calendar-ticket-sales\" title=\"PO Calendar - Ticket Sales\" >\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html\"> </file>\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts\"> </file>\n * </example>\n */\nexport declare class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit, OnChanges {\n    private changeDetector;\n    hoverValue: Date;\n    constructor(changeDetector: ChangeDetectorRef, poDate: PoDateService, languageService: PoLanguageService);\n    get isResponsive(): boolean;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    getActivateDate(partType: any): any;\n    getValue(partType: any): any;\n    onSelectDate(selectedDate: any, partType?: any): void;\n    onHoverDate(date: any): void;\n    onHeaderChange({ month, year }: {\n        month: any;\n        year: any;\n    }, partType: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(func: any): void;\n    validate(c: AbstractControl): {\n        [key: string]: any;\n    };\n    writeValue(value: any): void;\n    private getValidateStartDate;\n    private getValueFromSelectedDate;\n    private convertDateToISO;\n    private convertDateFromIso;\n    private updateModel;\n    private writeDate;\n}\n"]}