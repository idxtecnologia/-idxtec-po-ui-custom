{"version":3,"file":"po-list-view-base.component.d.ts","sources":["po-list-view-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\nimport { PoListViewLiterals } from './interfaces/po-list-view-literals.interface';\nexport declare const poListViewLiteralsDefault: {\n    en: PoListViewLiterals;\n    es: PoListViewLiterals;\n    pt: PoListViewLiterals;\n    ru: PoListViewLiterals;\n};\n/**\n * @description\n *\n * Componente de lista que recebe um array de objetos e renderiza de forma dinâmica os dados de\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\n *  **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\n * **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n *\n * O componente disponibiliza uma área específica para exibição informações adicionais,\n * através da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\n */\nexport declare class PoListViewBaseComponent {\n    /** Recebe uma propriedade que será utilizada para recuperar o valor do objeto que será usado como link para o título. */\n    propertyLink?: string;\n    /** Recebe uma propriedade que será utilizada para recuperar o valor do objeto que será exibido como o título de cada item. */\n    propertyTitle?: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Recebe uma ação, que será executada quando clicar no botão \"Carregar mais resultados\".\n     *\n     * > Caso nenhuma ação for definida o mesmo não ficará visível.\n     */\n    showMore: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ação que será executada ao clicar no título.\n     *\n     * Ao ser disparado, o método inserido na ação irá receber como parâmetro o item da lista clicado.\n     */\n    titleAction: EventEmitter<any>;\n    popupTarget: any;\n    selectAll: boolean;\n    showHeader: boolean;\n    private _actions;\n    private _height;\n    private _hideSelectAll;\n    private _items;\n    private _literals;\n    private _select;\n    private _showMoreDisabled;\n    private language;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Lista de ações que serão exibidas no componente.\n     */\n    set actions(value: Array<PoListViewAction>);\n    get actions(): Array<PoListViewAction>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define a altura do `po-list-view` em *pixels*.\n     */\n    set height(height: number);\n    get height(): number;\n    /**\n     * @description\n     *\n     * Esconde o *checkbox* para seleção de todos os itens.\n     *\n     * @default `false`\n     */\n    set hideSelectAll(hideSelectAll: boolean);\n    get hideSelectAll(): boolean;\n    /** Lista de itens que serão exibidos no componente. */\n    set items(value: Array<any>);\n    get items(): Array<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Objeto com as literais usadas no `po-list-view`.\n     *\n     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\n     *\n     * ```\n     *  const customLiterals: PoListViewLiterals = {\n     *    hideDetail: 'Ocultar detalhes completamente',\n     *    loadMoreData: 'Mais dados',\n     *    showDetail: 'Mostrar mais detalhes',\n     *    selectAll: 'Selecionar todos os itens'\n     *  };\n     * ```\n     *\n     * Ou passando apenas as literais que deseja customizar:\n     *\n     * ```\n     *  const customLiterals: PoListViewLiterals = {\n     *    showDetail: 'Mostrar mais detalhes'\n     *  };\n     * ```\n     *\n     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n     *\n     * ```\n     * <po-list-view\n     *   [p-literals]=\"customLiterals\">\n     * </po-list-view>\n     * ```\n     *\n     * > O objeto padrão de literais será traduzido de acordo com o idioma do\n     * [`PoI18nService`](/documentation/po-i18n) ou do browser.\n     */\n    set literals(value: PoListViewLiterals);\n    get literals(): PoListViewLiterals;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinâmica `$selected` para identificar se o\n     * item está selecionado, por exemplo:\n     *\n     * ```\n     *  item.$selected\n     *\n     *  // ou\n     *\n     *  item['$selected']\n     * ```\n     *\n     * @default `false`\n     */\n    set select(select: boolean);\n    get select(): boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Indica que o botão `Carregar Mais Resultados` será desabilitado.\n     */\n    set showMoreDisabled(value: boolean);\n    get showMoreDisabled(): boolean;\n    constructor(languageService: PoLanguageService);\n    onClickAction(listViewAction: PoListViewAction, item: any): void;\n    onShowMore(): void;\n    runTitleAction(listItem: any): void;\n    selectAllListItems(): void;\n    selectListItem(row: any): void;\n    private deleteInternalAttrs;\n    private checkIfItemsAreSelected;\n    private showMainHeader;\n}\n"]}