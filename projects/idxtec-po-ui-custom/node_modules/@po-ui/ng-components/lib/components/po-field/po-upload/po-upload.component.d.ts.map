{"version":3,"file":"po-upload.component.d.ts","sources":["po-upload.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Renderer2, AfterViewInit } from '@angular/core';\nimport { PoI18nPipe } from '../../../services/po-i18n/po-i18n.pipe';\nimport { PoNotificationService } from '../../../services/po-notification/po-notification.service';\nimport { PoProgressStatus } from '../../po-progress/enums/po-progress-status.enum';\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\nimport { PoUploadBaseComponent } from './po-upload-base.component';\nimport { PoUploadFile } from './po-upload-file';\nimport { PoUploadService } from './po-upload.service';\nimport { PoUploadStatus } from './po-upload-status.enum';\n/**\n * @docsExtends PoUploadBaseComponent\n *\n * @example\n *\n * <example name=\"po-upload-basic\" title=\"PO Upload Basic\">\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.html\"> </file>\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-upload-labs\" title=\"PO Upload Labs\">\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.html\"> </file>\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-upload-resume\" title=\"PO Upload - Resume\">\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.html\"> </file>\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-upload-rs\" title=\"PO Upload - Realize & Show\">\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.html\"> </file>\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.ts\"> </file>\n * </example>\n */\nexport declare class PoUploadComponent extends PoUploadBaseComponent implements AfterViewInit {\n    renderer: Renderer2;\n    private i18nPipe;\n    private notification;\n    private inputFile;\n    private poUploadDragDropComponent;\n    private uploadButton;\n    infoByUploadStatus: {\n        [key: string]: {\n            text: (percent?: number) => string;\n            icon?: string;\n        };\n    };\n    progressStatusByFileStatus: {\n        0: PoProgressStatus;\n        2: PoProgressStatus;\n    };\n    private calledByCleanInputValue;\n    constructor(uploadService: PoUploadService, renderer: Renderer2, i18nPipe: PoI18nPipe, notification: PoNotificationService, languageService: PoLanguageService);\n    get displayDragDrop(): boolean;\n    get displaySendButton(): boolean;\n    get selectFileButtonLabel(): string;\n    get hasMoreThanFourItems(): boolean;\n    get hasMultipleFiles(): boolean;\n    get hasFileNotUploaded(): boolean;\n    get isDisabled(): boolean;\n    get maxFiles(): number;\n    cancel(file: PoUploadFile): void;\n    ngAfterViewInit(): void;\n    /** Método responsável por **limpar** o(s) arquivo(s) selecionado(s). */\n    clear(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoUploadComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoUploadComponent, { static: true }) upload: PoUploadComponent;\n     *\n     * focusUpload() {\n     *   this.upload.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    hasAnyFileUploading(files: Array<PoUploadFile>): boolean;\n    isAllowCancelEvent(status: PoUploadStatus): boolean;\n    onFileChange(event: any): void;\n    onFileChangeDragDrop(files: any): void;\n    removeFile(file: any): void;\n    /** Método responsável por **abrir** a janela para seleção de arquivo(s). */\n    selectFiles(): void;\n    sendFeedback(): void;\n    /** Método responsável por **enviar** o(s) arquivo(s) selecionado(s). */\n    sendFiles(): void;\n    setDirectoryAttribute(canHandleDirectory: boolean): void;\n    stopUpload(file: PoUploadFile): void;\n    trackByFn(index: any, file: PoUploadFile): string;\n    uploadFiles(files: Array<PoUploadFile>): void;\n    private cleanInputValue;\n    private responseHandler;\n    private setPipeArguments;\n    private stopUploadHandler;\n    private updateFiles;\n    private updateModel;\n    private uploadingHandler;\n    private mapCleanUploadFiles;\n}\n"]}