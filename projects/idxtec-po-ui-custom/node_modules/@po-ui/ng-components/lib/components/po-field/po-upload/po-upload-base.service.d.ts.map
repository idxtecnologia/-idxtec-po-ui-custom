{"version":3,"file":"po-upload-base.service.d.ts","sources":["po-upload-base.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PoUploadFile } from './po-upload-file';\nimport { Observable, Subscription } from 'rxjs';\nexport declare class PoUploadBaseService {\n    private http;\n    formField: string;\n    requests: Array<any>;\n    constructor(http: HttpClient);\n    /**\n     * Método responsável por enviar os arquivos ao servidor, conforme o parâmetro URL.\n     *\n     * @param url URL da requisição a ser efetuada.\n     * @param files Arquivos a serem enviados.\n     * @param tOnUpload Função a ser executada quando o arquivo for enviado ao servidor.\n     * @param uploadCallback Função que será executada enquanto os arquivos estiverem sendo enviados.\n     * @param successCallback Função a ser executada quando a requisição for efetuada com sucesso.\n     * @param errorCallback Função a ser executada quando a requisição foi efetuada com sucesso.\n     */\n    upload(url: string, files: Array<PoUploadFile>, headers: {\n        [name: string]: string | Array<string>;\n    }, tOnUpload: EventEmitter<any>, uploadCallback: (file: PoUploadFile, percent: number) => void, successCallback: (file: PoUploadFile, event: any) => void, errorCallback: (file: PoUploadFile, event: any) => void): void;\n    sendFile(url: string, file: PoUploadFile, headers: {\n        [name: string]: string | Array<string>;\n    }, formData: FormData, uploadCallback: (file: PoUploadFile, percent: number) => void, successCallback: (file: PoUploadFile, event: any) => void, errorCallback: (file: PoUploadFile, event: any) => void): void;\n    getRequest(url: string, headers: {\n        [name: string]: string | Array<string>;\n    }, formData: FormData): Observable<any>;\n    stopRequestByFile(file: any, callback: () => void): void;\n    removeRequest(requestObj: any): void;\n    addRequest(file: PoUploadFile, request: Subscription): void;\n}\n"]}