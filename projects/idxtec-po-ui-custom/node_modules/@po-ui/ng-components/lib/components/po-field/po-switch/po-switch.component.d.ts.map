{"version":3,"file":"po-switch.component.d.ts","sources":["po-switch.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { PoFieldModel } from '../po-field.model';\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\n/**\n * @docsExtends PoFieldModel\n *\n * @description\n *\n * O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\n * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.\n *\n * Pode-se ligar ou deligar o botão utilizando a tecla de espaço ou o clique do mouse.\n *\n * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\n * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.\n *\n * > O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.\n *\n * @example\n *\n * <example name=\"po-switch-basic\" title=\"PO Switch Basic\">\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.html\"> </file>\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-labs\" title=\"PO Switch Labs\">\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.html\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts\"> </file>\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.po.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order\" title=\"PO Switch - Order Summary\">\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.html\"> </file>\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-switch-order-reactive-form\" title=\"PO Switch - Order Summary Reactive Form\">\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts\"> </file>\n * </example>\n */\nexport declare class PoSwitchComponent extends PoFieldModel<boolean> implements AfterViewInit {\n    private changeDetector;\n    switchContainer: ElementRef;\n    value: boolean;\n    private _labelOff;\n    private _labelOn;\n    private _labelPosition;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Posição de exibição do rótulo.\n     *\n     * > Por padrão exibe à direita.\n     */\n    set labelPosition(position: PoSwitchLabelPosition);\n    get labelPosition(): PoSwitchLabelPosition;\n    /**\n     * Texto exibido quando o valor do componente for `false`.\n     *\n     * @default `false`\n     */\n    set labelOff(label: string);\n    get labelOff(): string;\n    /**\n     * Texto exibido quando o valor do componente for `true`.\n     *\n     * @default `true`\n     */\n    set labelOn(label: string);\n    get labelOn(): string;\n    constructor(changeDetector: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoSwitchComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;\n     *\n     * focusSwitch() {\n     *   this.switch.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    onBlur(): void;\n    getLabelPosition(): \"left\" | \"right\";\n    getSwitchPosition(): \"left\" | \"right\";\n    onKeyDown(event: any): void;\n    changeValue(value: any): void;\n    eventClick(): void;\n    onWriteValue(value: any): void;\n}\n"]}