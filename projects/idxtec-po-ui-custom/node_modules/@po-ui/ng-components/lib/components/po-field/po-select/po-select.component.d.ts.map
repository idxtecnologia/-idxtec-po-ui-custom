{"version":3,"file":"po-select.component.d.ts","sources":["po-select.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, IterableDiffers, Renderer2, EventEmitter } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoSelectOption } from './po-select-option.interface';\nimport { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';\nimport { PoFieldValidateModel } from '../po-field-validate.model';\n/**\n * @docsExtends PoFieldValidateModel\n *\n * @example\n *\n * <example name=\"po-select-basic\" title=\"PO Select Basic\">\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.html\"> </file>\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-labs\" title=\"PO Select Labs\">\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.html\"> </file>\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-select-customer-registration\" title=\"PO Select - Customer registration\">\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.html\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts\"> </file>\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts\"> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>\n * </example>\n *\n * @description\n *\n * O componente po-select exibe uma lista de valores e permite que o usuário selecione um desses valores.\n * Os valores listados podem ser fixos ou dinâmicos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\n * O po-select não permite que o usuário informe um valor diferente dos valores listados, isso garante a consistência da informação.\n * O po-select não permite que sejam passados valores duplicados, undefined e null para as opções, excluindo-os da lista.\n *\n * > Ao passar um valor para o _model_ que não está na lista de opções, o mesmo será definido como `undefined`.\n *\n * Também existe a possibilidade de utilizar um _template_ para a exibição dos itens da lista,\n * veja mais em **[p-select-option-template](/documentation/po-select-option-template)**.\n */\nexport declare class PoSelectComponent extends PoFieldValidateModel<any> implements AfterViewInit, DoCheck {\n    private element;\n    private changeDetector;\n    renderer: Renderer2;\n    private controlPosition;\n    selectOptionTemplate: PoSelectOptionTemplateDirective;\n    contentList: ElementRef;\n    iconElement: ElementRef;\n    selectElement: ElementRef;\n    selectButtonElement: ElementRef;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Função para atualizar o ngModel do componente, necessário quando não for utilizado dentro da tag form.\n     */\n    ngModelChange: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Indica que o campo será somente para leitura.\n     *\n     * @default `false`\n     */\n    readonly: boolean;\n    /** Mensagem que aparecerá enquanto nenhuma opção estiver selecionada. */\n    placeholder?: string;\n    displayValue: any;\n    isMobile: any;\n    modelValue: any;\n    onModelChange: any;\n    open: boolean;\n    selectedValue: any;\n    selectIcon: string;\n    scrollPosition: number;\n    eventListenerFunction: () => void;\n    eventResizeListener: () => void;\n    onModelTouched: any;\n    protected clickoutListener: () => void;\n    private differ;\n    private _options;\n    /**\n     * Nesta propriedade deve ser definido uma coleção de objetos que implementam a interface `PoSelectOption`.\n     *\n     * Caso esta lista estiver vazia, o model será `undefined`.\n     *\n     * > Essa propriedade é imutável, ou seja, sempre que quiser atualizar a lista de opções disponíveis\n     * atualize a referência do objeto:\n     *\n     * ```\n     * // atualiza a referência do objeto garantindo a atualização do template\n     * this.options = [...this.options, { value: 'x', label: 'Nova opção' }];\n     *\n     * // evite, pois não atualiza a referência do objeto podendo gerar atrasos na atualização do template\n     * this.options.push({ value: 'x', label: 'Nova opção' });\n     * ```\n     */\n    set options(options: Array<PoSelectOption>);\n    get options(): Array<PoSelectOption>;\n    constructor(element: ElementRef, changeDetector: ChangeDetectorRef, differs: IterableDiffers, renderer: Renderer2, controlPosition: PoControlPositionService);\n    get isInvisibleSelectNative(): any;\n    onKeydown($event?: any): void;\n    ngAfterViewInit(): void;\n    ngDoCheck(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoSelectComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;\n     *\n     * focusSelect() {\n     *   this.select.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    hideDropDown(): void;\n    onBlur(): void;\n    onOptionClick(option: PoSelectOption): void;\n    onSelectChange(value: any): void;\n    onUpdateOptions(): void;\n    scrollValue(index: any, clientHeight: any): number;\n    selector(query: string): Element;\n    toggleButton(): void;\n    updateValues(option: PoSelectOption): void;\n    wasClickedOnToggle(event: MouseEvent): void;\n    onWriteValue(value: any): void;\n    extraValidation(c: AbstractControl): {\n        [key: string]: any;\n    };\n    private isEqual;\n    private disableDefaultEventAndToggleButton;\n    private findOptionValue;\n    private getSelectItemHeight;\n    private initializeListeners;\n    private onScroll;\n    private removeListeners;\n    private setPositionDropdown;\n    private setScrollPosition;\n    private showDropdown;\n}\n"]}