{"version":3,"file":"po-password.component.d.ts","sources":["po-password.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AbstractControl } from '@angular/forms';\nimport { ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n * O po-password é um input específico para senhas. Já possui tipo, estilo e ícone predefinidos.\n *\n * @example\n *\n * <example name=\"po-password-basic\" title=\"PO Password Basic\">\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.html\"> </file>\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-labs\" title=\"PO Password Labs\">\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.html\"> </file>\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-password-reset\" title=\"PO Password - Reset\">\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.html\"> </file>\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.ts\"> </file>\n * </example>\n */\nexport declare class PoPasswordComponent extends PoInputGeneric {\n    type: string;\n    visiblePassword: boolean;\n    private _hidePasswordPeek?;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Permite esconder a função de espiar a senha digitada.\n     *\n     * @default `false`\n     */\n    set hidePasswordPeek(value: boolean);\n    get hidePasswordPeek(): boolean;\n    get autocomplete(): string;\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    extraValidation(c: AbstractControl): {\n        [key: string]: any;\n    };\n    showPassword(): void;\n}\n"]}