{"version":3,"file":"po-lookup.component.d.ts","sources":["po-lookup.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, DoCheck, ElementRef, Injector, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { PoLookupBaseComponent } from './po-lookup-base.component';\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\nimport { PoLookupModalService } from './services/po-lookup-modal.service';\n/**\n * @docsExtends PoLookupBaseComponent\n *\n * @description\n *\n * Quando existe muitos dados o po-lookup por padrão traz apenas 10 itens na tabela e os demais são carregados por demanda através do\n * botão 'Carregar mais resultados'. Para que funcione corretamente, é importante que o serviço siga o\n * [Guia de implementação das APIs TOTVS](https://po-ui.io/guides/api).\n *\n * Importante:\n *\n * - Caso o po-lookup contenha o [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\n * Então será necessário informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\n * ```\n * <po-lookup\n *   [(ngModel)]=\"pessoa.nome\"\n *   [ngModelOptions]=\"{standalone: true}\">\n * </po-lookup>\n * ```\n *\n * @example\n *\n * <example name=\"po-lookup-basic\" title=\"PO Lookup Basic\">\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.html\"> </file>\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-labs\" title=\"PO Lookup Labs\">\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.html\"> </file>\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero\" title=\"PO Lookup - Hero\">\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-hero-reactive-form\" title=\"PO Lookup - Hero Reactive Form\">\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.html\"> </file>\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.ts\"> </file>\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-sw-films\" title=\"PO Lookup - Star Wars films\">\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.html\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.ts\"> </file>\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-lookup-multiple\" title=\"PO Lookup - Multiple\">\n *  <file name=\"sample-po-lookup-multiple/sample-po-lookup-multiple.component.html\"> </file>\n *  <file name=\"sample-po-lookup-multiple/sample-po-lookup-multiple.component.ts\"> </file>\n *  <file name=\"sample-po-lookup-multiple/sample-po-lookup-multiple.service.ts\"> </file>\n * </example>\n */\nexport declare class PoLookupComponent extends PoLookupBaseComponent implements AfterViewInit, OnDestroy, OnInit, DoCheck {\n    private renderer;\n    private poLookupModalService;\n    inputEl: ElementRef;\n    initialized: boolean;\n    timeoutResize: any;\n    visibleElement: boolean;\n    disclaimers: any[];\n    visibleDisclaimers: any[];\n    private modalSubscription;\n    private isCalculateVisibleItems;\n    get autocomplete(): \"on\" | \"off\";\n    constructor(renderer: Renderer2, poLookupFilterService: PoLookupFilterService, poLookupModalService: PoLookupModalService, injector: Injector);\n    ngAfterViewInit(): void;\n    ngDoCheck(): void;\n    ngOnDestroy(): void;\n    ngOnInit(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoLookupComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\n     *\n     * focusLookup() {\n     *   this.lookup.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    openLookup(): void;\n    checkSelectedItems(): any;\n    setDisclaimers(selectedOptions: Array<any>): void;\n    setViewValue(value: any, object: any): void;\n    getViewValue(): string;\n    searchEvent(): void;\n    closeDisclaimer(value: any): void;\n    updateVisibleItems(): void;\n    debounceResize(): void;\n    getInputWidth(): number;\n    getDisclaimersWidth(): any[];\n    calculateVisibleItems(): void;\n    private isAllowedOpenModal;\n    private formatFields;\n    private setInputValueWipoieldFormat;\n    private initializeListeners;\n}\n"]}