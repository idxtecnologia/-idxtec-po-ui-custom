{"version":3,"file":"po-combo.component.d.ts","sources":["po-combo.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, IterableDiffers, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\nimport { PoComboBaseComponent } from './po-combo-base.component';\nimport { PoComboFilterService } from './po-combo-filter.service';\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\nimport { PoComboOptionTemplateDirective } from './po-combo-option-template/po-combo-option-template.directive';\n/**\n * @docsExtends PoComboBaseComponent\n *\n * @description\n * Utilizando po-combo com serviço, é possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\n * faça uma requisição à URL informada passando o valor digitado no campo. Se encontrado o valor, então o mesmo será selecionado, caso\n * não seja encontrado, então a lista de itens voltará para o estado inicial.\n *\n * @example\n *\n * <example name=\"po-combo-basic\" title=\"PO Combo Basic\">\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.html\"> </file>\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-labs\" title=\"PO Combo Labs\">\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.html\"> </file>\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-scheduling\" title=\"PO Combo - Scheduling\">\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.html\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.ts\"> </file>\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.service.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-transfer\" title=\"PO Combo - Banking Transfer\">\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.html\"> </file>\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes\" title=\"PO Combo - Heroes\">\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-heroes-reactive-form\" title=\"PO Combo - Heroes Reactive Form\">\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-combo-hotels\" title=\"PO Combo - Booking Hotel\">\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.html\"> </file>\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.ts\"> </file>\n * </example>\n */\nexport declare class PoComboComponent extends PoComboBaseComponent implements AfterViewInit, OnChanges, OnDestroy {\n    element: ElementRef;\n    differs: IterableDiffers;\n    defaultService: PoComboFilterService;\n    renderer: Renderer2;\n    private changeDetector;\n    private controlPosition;\n    private sanitized;\n    comboOptionTemplate: PoComboOptionTemplateDirective;\n    containerElement: ElementRef;\n    contentElement: ElementRef;\n    iconElement: ElementRef;\n    inputEl: ElementRef;\n    comboIcon: string;\n    comboOpen: boolean;\n    differ: any;\n    isProcessingValueByTab: boolean;\n    scrollTop: number;\n    service: PoComboFilterService;\n    shouldMarkLetters: boolean;\n    private _isServerSearching;\n    private clickoutListener;\n    private eventResizeListener;\n    private filterSubscription;\n    private getSubscription;\n    constructor(element: ElementRef, differs: IterableDiffers, defaultService: PoComboFilterService, renderer: Renderer2, changeDetector: ChangeDetectorRef, controlPosition: PoControlPositionService, sanitized: DomSanitizer, languageService: PoLanguageService);\n    set isServerSearching(value: boolean);\n    get isServerSearching(): boolean;\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoComboComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoComboComponent, { static: true }) combo: PoComboComponent;\n     *\n     * focusCombo() {\n     *   this.combo.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    onBlur(): void;\n    onKeyDown(event?: any): void;\n    onKeyUp(event?: any): void;\n    initInputObservable(): void;\n    controlApplyFilter(value: any): void;\n    applyFilter(value: string): void;\n    setOptionsByApplyFilter(value: any, items: any): void;\n    getObjectByValue(value: any): void;\n    updateOptionByFilteredValue(item: any): void;\n    selectPreviousOption(): void;\n    selectNextOption(): void;\n    toggleComboVisibility(): void;\n    applyFilterInFirstClick(): void;\n    controlComboVisibility(toOpen: boolean): void;\n    onOptionClick(option: PoComboOption | PoComboGroup, event?: any): void;\n    scrollTo(index: any): void;\n    getInputValue(): any;\n    setInputValue(value: string): void;\n    wasClickedOnToggle(event: MouseEvent): void;\n    getLabelFormatted(label: string): SafeHtml;\n    safeHtml(value: any): SafeHtml;\n    isValidCharacterToSearch(keyCode: any): boolean;\n    searchOnEnter(value: string): void;\n    private adjustContainerPosition;\n    private close;\n    private initializeListeners;\n    private onErrorGetObjectByValue;\n    private onErrorFilteredData;\n    private onScroll;\n    private open;\n    private removeListeners;\n    private sanitizeTagHTML;\n    private setContainerPosition;\n    private setScrollTop;\n}\n"]}