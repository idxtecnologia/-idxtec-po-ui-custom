{"version":3,"file":"po-multiselect.component.d.ts","sources":["po-multiselect.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\nimport { PoMultiselectBaseComponent } from './po-multiselect-base.component';\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\nimport { PoMultiselectFilterService } from './po-multiselect-filter.service';\n/**\n * @docsExtends PoMultiselectBaseComponent\n *\n * @example\n *\n * <example name=\"po-multiselect-basic\" title=\"PO Multiselect Basic\">\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-labs\" title=\"PO Multiselect Labs\">\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation\" title=\"PO Multiselect - Vacation\">\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-vacation-reactive-form\" title=\"PO Multiselect - Vacation Reactive Form\">\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-multiselect-heroes\" title=\"PO Multiselect - Heroes - using API\">\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.component.html\"> </file>\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.component.ts\"> </file>\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.service.ts\"> </file>\n * </example>\n */\nexport declare class PoMultiselectComponent extends PoMultiselectBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnChanges {\n    private renderer;\n    private changeDetector;\n    private el;\n    private controlPosition;\n    defaultService: PoMultiselectFilterService;\n    dropdownElement: ElementRef;\n    dropdown: any;\n    iconElement: ElementRef;\n    inputElement: ElementRef;\n    disclaimerOffset: number;\n    dropdownIcon: string;\n    dropdownOpen: boolean;\n    initialized: boolean;\n    positionDisclaimerExtra: any;\n    timeoutResize: any;\n    visibleElement: boolean;\n    private isCalculateVisibleItems;\n    private cacheOptions;\n    constructor(renderer: Renderer2, changeDetector: ChangeDetectorRef, el: ElementRef, controlPosition: PoControlPositionService, defaultService: PoMultiselectFilterService, languageService: PoLanguageService);\n    ngAfterViewInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngDoCheck(): void;\n    ngOnDestroy(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoMultiselectComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;\n     *\n     * focusMultiselect() {\n     *   this.multiselect.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    getInputWidth(): number;\n    getDisclaimersWidth(): any[];\n    calculateVisibleItems(): void;\n    changeItems(changedItems: any): void;\n    updateVisibleItems(): void;\n    debounceResize(): void;\n    onBlur(): void;\n    onKeyDown(event?: any): void;\n    toggleDropdownVisibility(): void;\n    openDropdown(toOpen: any): void;\n    controlDropdownVisibility(toOpen: boolean): void;\n    scrollToSelectedOptions(): void;\n    setVisibleOptionsDropdown(options: any): void;\n    changeSearch(event: any): void;\n    closeDisclaimer(value: any): void;\n    wasClickedOnToggle(event: MouseEvent): void;\n    applyFilter(value?: string): Observable<Array<PoMultiselectOption>>;\n    private applyFilterInFirstClick;\n    private setOptionsByApplyFilter;\n    private adjustContainerPosition;\n    private close;\n    private initializeListeners;\n    private onScroll;\n    private open;\n    private removeListeners;\n    private setPositionDropdown;\n}\n"]}