{"version":3,"file":"po-radio-group-base.component.d.ts","sources":["po-radio-group-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { EventEmitter } from '@angular/core';\nimport { PoRadioGroupOption } from './po-radio-group-option.interface';\n/**\n * @description\n *\n * O componente `po-radio-group` deve ser utilizado para disponibilizar múltiplas opções ao usuário, permitindo a ele que\n * selecione apenas uma delas. Seu uso é recomendado para um número pequeno de opções, caso contrário, recomenda-se o uso\n * do [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\n *\n * Este não é um componente de multiseleção, se for este o caso, deve-se utilizar o\n * [**po-checkbox-group**](/documentation/po-checkbox-group).\n *\n * > Ao passar um valor para o *model* que não esteja na lista de opções, o mesmo será definido como `undefined`.\n */\nexport declare abstract class PoRadioGroupBaseComponent implements ControlValueAccessor, Validator {\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Aplica foco no elemento ao ser iniciado.\n     *\n     * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\n     *\n     * @default `false`\n     */\n    autoFocus: boolean;\n    /** Nome das opções. */\n    name: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define se a indicação de campo opcional será exibida.\n     *\n     * > Não será exibida a indicação se:\n     * - O campo conter `p-required`;\n     * - Não possuir `p-help` e/ou `p-label`.\n     *\n     * @default `false`\n     */\n    optional: boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento ao alterar valor do campo.\n     */\n    change: EventEmitter<any>;\n    mdColumns: number;\n    value: any;\n    private _columns;\n    private _disabled?;\n    private _options;\n    private _required?;\n    private onChangePropagate;\n    private validatorChange;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define a quantidade de colunas para exibição das opções.\n     *\n     * **Considerações:**\n     *  - É possível exibir as opções entre `1` e `4` colunas.\n     *  - O número máximo de colunas é invariável nas seguintes resoluções:\n     *    + `sm`: `1`\n     *    + `md`: `2`\n     *\n     * @default `2`\n     */\n    set columns(value: number);\n    get columns(): number;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Indica que o campo será desabilitado.\n     *\n     * @default `false`\n     */\n    set disabled(disabled: boolean);\n    get disabled(): boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Indica que o campo será obrigatório.\n     *\n     * @default `false`\n     */\n    set required(required: boolean);\n    get required(): boolean;\n    /**\n     * Lista de opções que serão exibidas.\n     * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoRadioGroupOption.\n     */\n    set options(value: Array<PoRadioGroupOption>);\n    get options(): Array<PoRadioGroupOption>;\n    changeValue(changedValue: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    registerOnValidatorChange(fn: any): void;\n    validate(abstractControl: AbstractControl): {\n        [key: string]: any;\n    };\n    writeValue(modelValue: any): void;\n    private checkColumnsRange;\n    private getGridSystemColumns;\n    private validateModel;\n    abstract getElementByValue(value: any): any;\n}\n"]}