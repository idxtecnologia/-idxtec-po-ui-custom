{"version":3,"file":"po-rich-text.component.d.ts","sources":["po-rich-text.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\nimport { PoRichTextBaseComponent } from './po-rich-text-base.component';\nimport { PoRichTextBodyComponent } from './po-rich-text-body/po-rich-text-body.component';\nimport { PoRichTextService } from './po-rich-text.service';\n/**\n * @docsExtends PoRichTextBaseComponent\n *\n * @example\n *\n * <example name=\"po-rich-text-basic\" title=\"PO Rich Text Basic\">\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-labs\" title=\"PO Rich Text Labs\">\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-rich-text-recipe\" title=\"PO Rich Text Recipe\">\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe-image-base-64.ts\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.html\"> </file>\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.ts\"> </file>\n * </example>\n */\nexport declare class PoRichTextComponent extends PoRichTextBaseComponent implements AfterViewInit, OnDestroy {\n    private element;\n    bodyElement: PoRichTextBodyComponent;\n    private listener;\n    private modelLastUpdate;\n    get errorMsg(): string;\n    constructor(element: ElementRef, richTextService: PoRichTextService);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Função que atribui foco ao componente.\n     *\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\n     *\n     * ```\n     * import { PoRichTextComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoRichTextComponent, { static: true }) richText: PoRichTextComponent;\n     *\n     * focusRichText() {\n     *   this.richText.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    onBlur(): void;\n    onChangeValue(value: any): void;\n    updateValue(value: string): void;\n    private addKeyListeners;\n    private controlChangeModelEmitter;\n    private verifyAutoFocus;\n    private validateClassesForRequired;\n}\n"]}