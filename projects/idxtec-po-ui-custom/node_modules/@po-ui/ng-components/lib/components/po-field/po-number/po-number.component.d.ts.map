{"version":3,"file":"po-number.component.d.ts","sources":["po-number.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AbstractControl } from '@angular/forms';\nimport { ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { PoNumberBaseComponent } from './po-number-base.component';\n/**\n * @docsExtends PoInputBaseComponent\n *\n * @description\n *\n * O `po-number` é um input específico para receber apenas números.\n * É possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,\n * respectivamente.\n *\n * @example\n *\n * <example name=\"po-number-basic\" title=\"PO Number Basic\">\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.html\"> </file>\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-labs\" title=\"PO Number Labs\">\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.html\"> </file>\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-number-calculate\" title=\"PO Number - Calculate\">\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.html\"> </file>\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.ts\"> </file>\n * </example>\n */\nexport declare class PoNumberComponent extends PoNumberBaseComponent {\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Intervalo.\n     *\n     * @default 1\n     */\n    step?: string;\n    /** Valor mínimo.\n     *\n     * > Quando o valor mínimo for um número com decimais aconselha-se utilizar junto da propriedade `p-step` também passando a ela um valor decimal.\n     */\n    min?: number;\n    set setMin(min: number);\n    /** Valor máximo.\n     *\n     * > Quando o valor máximo for um número com decimais aconselha-se utilizar junto da propriedade `p-step` também passando a ela um valor decimal.\n     */\n    max?: number;\n    set setMax(max: number);\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    extraValidation(abstractControl: AbstractControl): {\n        [key: string]: any;\n    };\n    getErrorPatternMessage(): string;\n    private containsInvalidClass;\n}\n"]}