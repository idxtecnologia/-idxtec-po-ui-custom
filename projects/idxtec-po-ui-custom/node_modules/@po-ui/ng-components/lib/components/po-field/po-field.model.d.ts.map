{"version":3,"file":"po-field.model.d.ts","sources":["po-field.model.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare abstract class PoFieldModel<T> implements ControlValueAccessor {\n    /** Rótulo exibido pelo componente. */\n    label: string;\n    /** Nome do componente. */\n    name: string;\n    /** Texto de apoio para o campo. */\n    help: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Aplica o foco no elemento ao ser iniciado.\n     *  > Caso mais de um elemento seja configurado com essa propriedade,\n     * o último elemento declarado com ela terá o foco.\n     *\n     * @default `false`\n     */\n    autoFocus: boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Indica se o campo será desabilitado.\n     *\n     * @default `false`\n     */\n    disabled: boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento disparado ao alterar valor do campo.\n     */\n    change: EventEmitter<T>;\n    value: T;\n    protected onTouched: any;\n    private propagateChange;\n    constructor();\n    setDisabledState(isDisabled: boolean): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    writeValue(value: T): void;\n    emitChange(value: any): void;\n    protected updateModel(value: T): void;\n    abstract onWriteValue(value: T): void;\n}\n"]}