{"version":3,"file":"po-checkbox.component.d.ts","sources":["po-checkbox.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, AfterViewInit } from '@angular/core';\nimport { PoCheckboxBaseComponent } from './po-checkbox-base.component';\n/**\n * @docsExtends PoCheckboxBaseComponent\n *\n * @example\n *\n * <example name=\"po-checkbox-basic\" title=\"PO Checkbox Basic\">\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-labs\" title=\"PO Checkbox Labs\">\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-checkbox-acceptance-term\" title=\"PO Checkbox - Acceptance Term\">\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.html\"> </file>\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.ts\"> </file>\n * </example>\n */\nexport declare class PoCheckboxComponent extends PoCheckboxBaseComponent implements AfterViewInit {\n    private changeDetector;\n    checkboxLabel: ElementRef;\n    constructor(changeDetector: ChangeDetectorRef);\n    /**\n     * Função que atribui foco ao *checkbox*.\n     *\n     * Para utilizá-la é necessário capturar a referência do componente no DOM através do `ViewChild`, como por exemplo:\n     *\n     * ```\n     * ...\n     * import { ViewChild } from '@angular/core';\n     * import { PoCheckboxComponent } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild(PoCheckboxComponent, { static: true }) checkbox: PoCheckboxComponent;\n     *\n     * focusCheckbox() {\n     *   this.checkbox.focus();\n     * }\n     * ```\n     */\n    focus(): void;\n    onBlur(): void;\n    ngAfterViewInit(): void;\n    onKeyDown(event: KeyboardEvent, value: boolean): void;\n    protected changeModelValue(value: boolean | null): void;\n}\n"]}