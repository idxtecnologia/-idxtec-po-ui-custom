{"version":3,"file":"po-multiselect-dropdown.component.d.ts","sources":["po-multiselect-dropdown.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { PoMultiselectLiterals } from '../../index';\nimport { PoMultiselectOption } from '../po-multiselect-option.interface';\nimport { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';\n/**\n * @docsPrivate\n *\n * @description\n *\n * Componente que construíra o dropdown, contendo o campo de pesquisa e os itens para seleção.\n */\nexport declare class PoMultiselectDropdownComponent {\n    /** Propriedade que indica se deve exibir o loading. */\n    isServerSearching?: boolean;\n    /** Propriedade que indica se o campo de pesquisa deverá ser escondido. */\n    hideSearch?: boolean;\n    /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */\n    literals?: PoMultiselectLiterals;\n    /** Placeholder do campo de pesquisa. */\n    placeholderSearch: string;\n    /** Propriedade que recebe a lista de opções selecionadas. */\n    selectedOptions: Array<any>;\n    /** Propriedade que recebe a lista com todas as opções. */\n    options: Array<PoMultiselectOption>;\n    /** Propriedade que recebe a lista de opções que deverão ser criadas no dropdown. */\n    visibleOptions: Array<PoMultiselectOption>;\n    /** Propriedade que indica se o campo \"Selecionar todos\" deverá ser escondido. */\n    hideSelectAll?: boolean;\n    /** Evento disparado a cada tecla digitada na pesquisa. */\n    changeSearch: EventEmitter<any>;\n    /** Evento disparado a cada alteração na lista das opções selecionadas. */\n    change: EventEmitter<any>;\n    /**\n     * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.\n     * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento\n     * para notificar o componente principal que deve fechar o dropdown.\n     */\n    closeDropdown: EventEmitter<any>;\n    container: ElementRef;\n    ulElement: ElementRef;\n    searchElement: PoMultiselectSearchComponent;\n    scrollTop: number;\n    show: boolean;\n    get hasOptions(): boolean;\n    onKeydown(event: any): void;\n    scrollTo(index: any): void;\n    isSelectedItem(option: PoMultiselectOption): boolean;\n    clickItem(check: any, option: any): void;\n    onClickSelectAll(): void;\n    updateSelectedValues(checked: any, option: any): void;\n    everyVisibleOptionsSelected(selectedValues: any): boolean;\n    someVisibleOptionsSelected(selectedValues: any): boolean;\n    getStateSelectAll(): boolean;\n    callChangeSearch(event: any): void;\n    controlVisibility(toOpen: any): void;\n    private uniqueSelectedOptions;\n}\n"]}