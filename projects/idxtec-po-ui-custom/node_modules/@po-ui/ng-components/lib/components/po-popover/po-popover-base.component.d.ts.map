{"version":3,"file":"po-popover-base.component.d.ts","sources":["po-popover-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\n/**\n * @description\n *\n * O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:\n * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\n *\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\n * [**po-tooltip**](https://po-ui.io/documentation/po-tooltip?view=doc).\n *\n * Para conteúdos maiores recomenda-se o uso do [**po-modal**](https://po-ui.io/documentation/po-modal?view=doc).\n *\n * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,\n * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\n *\n * Também é possível escolher entre os dois eventos que podem abrir o *popover*.\n * Os eventos permitidos são: `click` e `hover`.\n *\n */\nexport declare class PoPopoverBaseComponent {\n    /**\n     * @description\n     *\n     * ElementRef do componente de origem responsável por abrir o popover.\n     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento\n     * de abertura, exemplo:\n     *\n     * ```\n     * <po-button\n     *   p-label=\"Open Popover\">\n     * </po-button>\n     *\n     * <po-popover\n     *   [p-target]=\"poButton\"\n     *   [p-title]=\"PO Popover\">\n     * </po-popover>\n     * ```\n     *\n     * Também deve-se criar um ViewChild para cada popover, passando como referência o elemento do\n     * HTML que irá disparar o evento. Exemplo:\n     *\n     * ```\n     * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;\n     * ```\n     *\n     * Pode-se tambem informar diretamente o HTMLElement, para não ter que utilizar o ViewChild.\n     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento\n     * de abertura, exemplo:\n     *\n     * ```\n     * <button #target>\n     *   Abrir popover\n     * </button>\n     *\n     * <po-popover\n     *     [p-target]=\"target\"\n     *     p-trigger=\"click\" >\n     * </po-popover>\n     * ```\n     *\n     *\n     *\n     */\n    target: ElementRef | HTMLElement;\n    /** Título do popover. */\n    title?: string;\n    /** Evento disparado ao fechar o popover. */\n    closePopover: EventEmitter<any>;\n    isHidden: boolean;\n    protected clickoutListener: () => void;\n    protected mouseEnterListener: () => void;\n    protected mouseLeaveListener: () => void;\n    protected resizeListener: () => void;\n    private _hideArrow;\n    private _position?;\n    private _trigger?;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Desabilita a seta do componente *popover*.\n     *\n     * @default `false`\n     */\n    set hideArrow(value: boolean);\n    get hideArrow(): boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define a posição que o po-popover abrirá em relação ao componente alvo. Sugere-se que seja\n     * usada a orientação \"right\" (direita), porém o mesmo é flexível e será rotacionado\n     * automaticamente para se adequar a tela, caso necessário.\n     *\n     * Posições válidas:\n     * - `right`: Posiciona o po-popover no lado direito do componente alvo.\n     * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.\n     * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.\n     * - `bottom`: Posiciona o po-popover abaixo do componente alvo.\n     * - `bottom-left`: Posiciona o po-popover abaixo e à esquerda do componente alvo.\n     * - `bottom-right`: Posiciona o po-popover abaixo e à direita do componente alvo.\n     * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.\n     * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.\n     * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.\n     * - `top`: Posiciona o po-popover acima do componente alvo.\n     * - `top-right`: Posiciona o po-popover acima e à direita do componente alvo.\n     * - `top-left`: Posiciona o po-popover acima e à esquerda do componente alvo.\n     *\n     *\n     * @default right\n     */\n    set position(value: string);\n    get position(): string;\n    /**\n     * @description\n     *\n     * Define o evento que abrirá o po-popover.\n     *\n     * Valores válidos:\n     *  - `click`: Abre ao clicar no componente alvo.\n     *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\n     *\n     * @default click\n     * @optional\n     */\n    set trigger(value: string);\n    get trigger(): string;\n}\n"]}