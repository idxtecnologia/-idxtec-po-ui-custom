{"version":3,"file":"po-progress-base.component.d.ts","sources":["po-progress-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\n/**\n * @description\n *\n * Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\n *\n * Este componente pode ser utilizado no *upload* de arquivos, uma atualização no sistema ou o processamento de uma imagem.\n */\nexport declare class PoProgressBaseComponent {\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Informação adicional que aparecerá abaixo da barra de progresso ao lado direito.\n     */\n    info?: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ícone que aparecerá ao lado do texto da propriedade `p-info`.\n     *\n     * Exemplo: `po-icon-ok`.\n     */\n    infoIcon?: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Status da barra de progresso que indicará visualmente ao usuário\n     * o andamento, por exemplo, se a mesma foi concluída com sucesso.\n     *\n     * @default `PoProgressStatus.Default`\n     */\n    status: PoProgressStatus;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Texto principal que aparecerá abaixo da barra de progresso no lado esquerdo.\n     */\n    text?: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento que será disparado ao clicar no ícone de cancelamento (\"x\") na parte inferior da barra de progresso.\n     *\n     * Ao ser disparado, a função receberá como parâmetro o status atual da barra de progresso.\n     *\n     * > Se nenhuma função for passada para o evento ou a barra de progresso estiver com o status `PoProgressStatus.Success`,\n     * o ícone de cancelamento não será exibido.\n     */\n    cancel: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento que será disparado ao clicar no ícone de tentar novamente na parte inferior da barra de progresso.\n     *\n     * > o ícone será exibido apenas se informar uma função neste evento e o status da barra de progresso for\n     * `PoProgressStatus.Error`.\n     */\n    retry: EventEmitter<any>;\n    private _indeterminate?;\n    private _value?;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Habilita o modo indeterminado na barra de progresso, que mostra uma animação fixa sem um valor estabelecido.\n     *\n     * Esta opção pode ser utilizada quando não souber quanto tempo levará para que um processo seja concluído.\n     *\n     * > Caso esta propriedade e a `p-value` seja habilitada, a propriedade `p-value` será ignorada.\n     *\n     * @default `false`\n     */\n    set indeterminate(indeterminate: boolean);\n    get indeterminate(): boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Valor que representará o progresso.\n     *\n     * > Os valores aceitos são números inteiros de `0` à `100`.\n     *\n     * @default `0`\n     */\n    set value(value: number);\n    get value(): number;\n    private isProgressRangeValue;\n}\n"]}