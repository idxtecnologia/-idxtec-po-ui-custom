{"version":3,"file":"po-disclaimer-group-base.component.d.ts","sources":["po-disclaimer-group-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { DoCheck, EventEmitter, IterableDiffers } from '@angular/core';\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\nimport { PoDisclaimer } from '../po-disclaimer/po-disclaimer.interface';\nexport declare const poDisclaimerGroupLiteralsDefault: {\n    en: {\n        removeAll: string;\n    };\n    es: {\n        removeAll: string;\n    };\n    pt: {\n        removeAll: string;\n    };\n    ru: {\n        removeAll: string;\n    };\n};\n/**\n * @description\n *\n * O componente `po-disclaimer-group` é recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\n *\n * À partir de dois *disclaimers* com o botão **fechar** habilitado, o componente renderiza de forma automática um novo e destacado\n * *disclaimer* que possibilita **remover todos**, mas que também pode ser desabilitado.\n *\n * Também é possível navegar entre os *disclaimers* através do teclado utilizando a tecla *tab* e, para remoção do *disclaimer* selecionado,\n * basta pressionar a tecla *enter*. Esta funcionalidade não se aplica caso a propriedade `hideClose` estiver habilitada.\n *\n * > Veja a integração destas funcionalidade no componente [po-page-list](/documentation/po-page-list).\n */\nexport declare class PoDisclaimerGroupBaseComponent implements DoCheck {\n    /** Título do grupo de *disclaimers*. */\n    title?: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Função que será disparada quando a lista de *disclaimers* for modificada.\n     */\n    change: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Função que será disparada quando um *disclaimer* for removido da lista de *disclaimers* pelo usuário.\n     *\n     * Recebe como parâmetro um objeto conforme a interface `PoDisclaimerGroupRemoveAction`.\n     */\n    remove: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Função que será disparada quando todos os *disclaimers* forem removidos da lista de *disclaimers* pelo usuário,\n     * utilizando o botão \"remover todos\".\n     *\n     * Recebe como parâmetro uma lista contendo todos os `disclaimers` removidos.\n     */\n    removeAll: EventEmitter<any>;\n    literals: any;\n    private _disclaimers;\n    private _hideRemoveAll;\n    private differ;\n    private previousDisclaimers;\n    /** Lista de *disclaimers*. */\n    /**\n     * @description\n     *\n     * Lista de *disclaimers*.\n     *\n     * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referência do array de `PoDisclaimer`.\n     *\n     * Exemplo adicionando um *disclaimer* no array:\n     *\n     * ```\n     * this.disclaimers = [...this.disclaimers, disclaimer];\n     * ```\n     *\n     * ou\n     *\n     * ```\n     * this.disclaimers = this.disclaimers.concat(disclaimer);\n     * ```\n     */\n    set disclaimers(value: Array<PoDisclaimer>);\n    get disclaimers(): Array<PoDisclaimer>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Oculta o botão para remover todos os *disclaimers* do grupo.\n     *\n     * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.\n     *\n     * @default `false`\n     */\n    set hideRemoveAll(value: boolean);\n    get hideRemoveAll(): boolean;\n    constructor(differs: IterableDiffers, languageService: PoLanguageService);\n    ngDoCheck(): void;\n    onCloseAction(disclaimer: any): void;\n    isRemoveAll(): boolean;\n    onKeyPress(event: any): void;\n    removeAllItems(): void;\n    private removeDisclaimer;\n    private checkChanges;\n    private checkDisclaimers;\n    private disclaimersAreChanged;\n    private emitChangeDisclaimers;\n}\n"]}