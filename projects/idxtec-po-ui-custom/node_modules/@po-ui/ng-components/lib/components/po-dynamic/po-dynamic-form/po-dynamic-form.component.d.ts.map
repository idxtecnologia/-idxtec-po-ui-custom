{"version":3,"file":"po-dynamic-form.component.d.ts","sources":["po-dynamic-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\nimport { PoDynamicFormLoadService } from './po-dynamic-form-load/po-dynamic-form-load.service';\nimport { PoDynamicFormValidationService } from './po-dynamic-form-validation/po-dynamic-form-validation.service';\n/**\n * @docsExtends PoDynamicFormBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-form-basic\" title=\"PO Dynamic Form Basic\">\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-form-register\" title=\"PO Dynamic Form - Register\">\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts\"> </file>\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts\"> </file>\n * </example>\n */\nexport declare class PoDynamicFormComponent extends PoDynamicFormBaseComponent implements OnInit, OnDestroy {\n    private changes;\n    private loadService;\n    private validationService;\n    fieldsComponent: {\n        focus: (property: string) => void;\n        updatePreviousValue: () => void;\n    };\n    disabledForm: boolean;\n    private _form;\n    private onLoadSubscription;\n    private sendFormSubscription;\n    private comboOptionSubject;\n    set form(value: NgForm);\n    get form(): NgForm;\n    constructor(changes: ChangeDetectorRef, loadService: PoDynamicFormLoadService, validationService: PoDynamicFormValidationService);\n    ngOnDestroy(): void;\n    ngOnInit(): void;\n    /**\n     * Função que atribui foco ao campo desejado.\n     *\n     * Para utilizá-la é necessário capturar a instância do `dynamic form`, como por exemplo:\n     *\n     * ``` html\n     * <po-dynamic-form #dynamicForm [p-fields]=\"fields\"></po-dynamic-form>\n     * ```\n     *\n     * ``` javascript\n     * import { PoDynamicFormComponent, PoDynamicFormField } from '@po-ui/ng-components';\n     *\n     * ...\n     *\n     * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;\n     *\n     * fields: Array<PoDynamicFormField> = [\n     *   { property: 'fieldOne' },\n     *   { property: 'fieldTwo' }\n     * ];\n     *\n     * fieldFocus() {\n     *   this.dynamicForm.focus('fieldTwo');\n     * }\n     * ```\n     *\n     * @param {string} property Nome da propriedade atribuída ao `PoDynamicFormField.property`.\n     */\n    focus(property: string): void;\n    getObjectValue(): Observable<any>;\n    sendObjectValue(objectValue: any): void;\n    validateForm(field: PoDynamicFormField): void;\n    private applyFormUpdatesOnLoad;\n    private applyFormValidation;\n    private disableForm;\n    private emitForm;\n    private loadDataOnInitialize;\n    private removeListeners;\n    private setFocusOnFieldByProperty;\n    private updateModelOnLoad;\n    private updateModelWithValidation;\n}\n"]}