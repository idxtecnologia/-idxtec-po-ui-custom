{"version":3,"file":"po-dynamic-view.component.d.ts","sources":["po-dynamic-view.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\nimport { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';\nimport { PoDynamicViewService } from './po-dynamic-view.service';\n/**\n * @docsExtends PoDynamicViewBaseComponent\n *\n * @example\n *\n * <example name=\"po-dynamic-view-basic\" title=\"PO Dynamic View Basic\">\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee\" title=\"PO Dynamic View - Employee\">\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-dynamic-view-employee-on-load\" title=\"PO Dynamic View - Employee on load\">\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.html\"> </file>\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.ts\"> </file>\n * </example>\n */\nexport declare class PoDynamicViewComponent extends PoDynamicViewBaseComponent implements OnChanges, OnInit {\n    constructor(currencyPipe: CurrencyPipe, datePipe: DatePipe, decimalPipe: DecimalPipe, timePipe: PoTimePipe, titleCasePipe: TitleCasePipe, dynamicViewService: PoDynamicViewService);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    private getValuesAndFieldsFromLoad;\n    private getVisibleFields;\n    private setFieldOnLoad;\n    private setFieldsOnLoad;\n    private setValueOnLoad;\n    private updateValuesAndFieldsOnLoad;\n}\n"]}