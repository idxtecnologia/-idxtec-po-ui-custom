import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { isTypeof } from '../../../utils/util';
import { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';
export class PoPageJobSchedulerExecutionComponent {
    constructor(poPageJobSchedulerService, poPageJobSchedulerLookup) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        this.poPageJobSchedulerLookup = poPageJobSchedulerLookup;
        this.isEdit = false;
        this.literals = {};
        this.noParameters = true;
        this.changeProcess = new EventEmitter();
        this.dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';
        this.existProcessAPI = true;
        this.minDateFirstExecution = new Date();
        this.periodicityOptions = [];
        this.timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';
        this.weekDays = [];
        this.frequencyOptions = [];
        this.containsFrequency = false;
        this.frequency = 'hour';
        this._value = {};
    }
    set value(value) {
        this._value = value && isTypeof(value, 'object') ? value : {};
        this.containsFrequency = this._value.frequency && this._value.frequency.value ? true : false;
    }
    get value() {
        return this._value;
    }
    get startDateFirstExecution() {
        return this.isEdit ? undefined : this.minDateFirstExecution;
    }
    get hourLabel() {
        return this.containsFrequency ? this.literals.startTime : this.literals.time;
    }
    get dayLabel() {
        return this.containsFrequency ? this.literals.startDay : this.literals.day;
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.subscribeProcessIdValueChanges();
            if (this.value.periodicity) {
                this.frequencyOptions = this.frequencyOptions.map(frequencyOption => (Object.assign(Object.assign({}, frequencyOption), { disabled: frequencyOption.value === 'day' && this.value.periodicity !== 'monthly' })));
            }
        });
    }
    ngOnInit() {
        this.periodicityTemplates = {
            daily: this.dailyTemplate,
            monthly: this.monthlyTemplate,
            weekly: this.weeklyTempalte
        };
        if (this.noParameters) {
            this.checkExistsProcessesAPI();
        }
        this.periodicityOptions = this.getPeriodicityOptions();
        this.weekDays = this.getWeekDays();
        this.frequencyOptions = this.getFrequencyOptions();
    }
    onChangeContainsFrequency(containsFrequency) {
        if (containsFrequency) {
            this.value.frequency = { type: 'hour', value: null };
        }
        else {
            this.value.frequency = {};
        }
        this.value.rangeLimitHour = null;
        this.value.rangeLimitDay = null;
        this.value.dayOfMonth = null;
    }
    onChangePeriodicityOptions(periodicity) {
        this.frequencyOptions = this.frequencyOptions.map(frequencyOption => (Object.assign(Object.assign({}, frequencyOption), { disabled: frequencyOption.value === 'day' && periodicity !== 'monthly' })));
        this.value.frequency.type = null;
    }
    onChangeFrequencyOptions() {
        this.value.rangeLimitHour = null;
    }
    checkExistsProcessesAPI() {
        this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {
            this.existProcessAPI = false;
        });
    }
    getPeriodicityOptions() {
        return [
            { label: this.literals.single, value: 'single' },
            { label: this.literals.daily, value: 'daily' },
            { label: this.literals.weekly, value: 'weekly' },
            { label: this.literals.monthly, value: 'monthly' }
        ];
    }
    getFrequencyOptions() {
        return [
            { label: this.literals.day, value: 'day' },
            { label: this.literals.hour, value: 'hour' },
            { label: this.literals.minute, value: 'minute' }
        ];
    }
    getWeekDays() {
        return [
            { label: this.literals.sunday, value: 'Sunday' },
            { label: this.literals.monday, value: 'Monday' },
            { label: this.literals.tuesday, value: 'Tuesday' },
            { label: this.literals.wednesday, value: 'Wednesday' },
            { label: this.literals.thursday, value: 'Thursday' },
            { label: this.literals.friday, value: 'Friday' },
            { label: this.literals.saturday, value: 'Saturday' }
        ];
    }
    subscribeProcessIdValueChanges() {
        var _a;
        (_a = this.form.controls['processID']) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(processId => {
            this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });
        });
    }
}
PoPageJobSchedulerExecutionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-job-scheduler-execution',
                template: "<form #formExecution=\"ngForm\">\n  <div class=\"po-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"po-row\">\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\n\n    <po-datepicker\n      class=\"po-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      p-placeholder=\"dd/mm/aaaa\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.day\"\n      [p-min-date]=\"startDateFirstExecution\"\n    >\n    </po-datepicker>\n\n    <po-input\n      class=\"po-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.time\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </div>\n\n  <hr />\n\n  <div class=\"po-row\">\n    <po-radio-group\n      class=\"po-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.periodicity\"\n      [p-options]=\"periodicityOptions\"\n      (p-change)=\"onChangePeriodicityOptions($event)\"\n    >\n    </po-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-12\"\n          name=\"containsFrequency\"\n          [(ngModel)]=\"containsFrequency\"\n          [p-label]=\"literals.frequency\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n          (p-change)=\"onChangeContainsFrequency($event)\"\n        >\n        </po-switch>\n        <ng-container *ngIf=\"containsFrequency\">\n          <po-radio-group\n            class=\"po-md-10\"\n            name=\"frequencyType\"\n            p-required\n            [(ngModel)]=\"value.frequency.type\"\n            [p-columns]=\"3\"\n            [p-options]=\"frequencyOptions\"\n            (p-change)=\"onChangeFrequencyOptions()\"\n          >\n          </po-radio-group>\n\n          <po-number class=\"po-md-2\" name=\"frequencyValue\" p-required [(ngModel)]=\"value.frequency.value\"> </po-number>\n        </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\"> </po-divider>\n\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\"> </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [p-label]=\"literals.recurrent\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n        >\n        </po-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <po-lookup\n      *ngIf=\"noParameters\"\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-field-label=\"description\"\n      p-field-value=\"processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <po-input\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"po-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n    </div>\n\n    <po-checkbox-group\n      class=\"po-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.weekDays\"\n      [p-options]=\"weekDays\"\n    >\n    </po-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <po-number\n      class=\"po-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      p-required\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\n      [p-label]=\"dayLabel\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <po-number\n      *ngIf=\"containsFrequency\"\n      class=\"po-md-3\"\n      name=\"rangeLimitDay\"\n      [(ngModel)]=\"value.rangeLimitDay\"\n      p-required\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\n      [p-label]=\"literals.endDay\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <po-input\n      class=\"po-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"hourLabel\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n\n    <po-input\n      *ngIf=\"containsFrequency && value.frequency.type !== 'day'\"\n      class=\"po-md-2\"\n      name=\"rangeLimitHour\"\n      [(ngModel)]=\"value.rangeLimitHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"literals.endTime\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </ng-template>\n</form>\n"
            },] }
];
PoPageJobSchedulerExecutionComponent.ctorParameters = () => [
    { type: PoPageJobSchedulerService },
    { type: PoPageJobSchedulerLookupService }
];
PoPageJobSchedulerExecutionComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['formExecution', { static: true },] }],
    dailyTemplate: [{ type: ViewChild, args: ['dailyTemplate', { static: true },] }],
    monthlyTemplate: [{ type: ViewChild, args: ['monthlyTemplate', { static: true },] }],
    weeklyTempalte: [{ type: ViewChild, args: ['weeklyTemplate', { static: true },] }],
    isEdit: [{ type: Input, args: ['p-is-edit',] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    noParameters: [{ type: Input, args: ['p-no-parameters',] }],
    changeProcess: [{ type: Output, args: ['p-change-process',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
//# sourceMappingURL=data:application/json;base64,