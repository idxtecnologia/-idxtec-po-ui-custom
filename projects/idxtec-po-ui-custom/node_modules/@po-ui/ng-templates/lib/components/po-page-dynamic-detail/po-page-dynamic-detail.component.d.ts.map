{"version":3,"file":"po-page-dynamic-detail.component.d.ts","sources":["po-page-dynamic-detail.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PoBreadcrumb, PoDialogService, PoLanguageService, PoNotificationService, PoPageAction } from '@po-ui/ng-components';\nimport { PoPageDynamicDetailActions } from './interfaces/po-page-dynamic-detail-actions.interface';\nimport { PoPageDynamicDetailField } from './interfaces/po-page-dynamic-detail-field.interface';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicDetailActionsService } from './po-page-dynamic-detail-actions.service';\nimport { PoPageDynamicDetailOptions } from './interfaces/po-page-dynamic-detail-options.interface';\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\nexport declare const poPageDynamicDetailLiteralsDefault: {\n    en: {\n        pageActionEdit: string;\n        pageActionRemove: string;\n        pageActionBack: string;\n        confirmRemoveTitle: string;\n        confirmRemoveMessage: string;\n        removeNotificationSuccess: string;\n        registerNotFound: string;\n    };\n    es: {\n        pageActionEdit: string;\n        pageActionRemove: string;\n        pageActionBack: string;\n        confirmRemoveTitle: string;\n        confirmRemoveMessage: string;\n        removeNotificationSuccess: string;\n        registerNotFound: string;\n    };\n    pt: {\n        pageActionEdit: string;\n        pageActionRemove: string;\n        pageActionBack: string;\n        confirmRemoveTitle: string;\n        confirmRemoveMessage: string;\n        removeNotificationSuccess: string;\n        registerNotFound: string;\n    };\n    ru: {\n        pageActionEdit: string;\n        pageActionRemove: string;\n        pageActionBack: string;\n        confirmRemoveTitle: string;\n        confirmRemoveMessage: string;\n        removeNotificationSuccess: string;\n        registerNotFound: string;\n    };\n};\n/**\n * @description\n *\n * O `po-page-dynamic-detail` é uma página que serve para exibir registros em detalhes,\n * o mesmo também suporta metadados conforme especificado na documentação.\n *\n *\n * ### Utilização via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-detail` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\n *\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\n * e depois irá buscar da rota definida na propriedade serviceLoadApi.\n *\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\n * se o cache não existe será disparado uma notificação.\n *\n * ```\n * {\n *   path: 'people/:id',\n *   component: PoPageDynamicDetailComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados\n *   }\n * }\n * ```\n *\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\n * tipo do metadado esperado e a versão cacheada pelo browser.\n *\n * O formato esperado na resposta da requisição está especificado na interface\n * [PoPageDynamicDetailMetadata](/documentation/po-page-dynamic-detail#po-page-dynamic-detail-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person Detail',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ]\n * }\n * ```\n *\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=detail&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-detail-user\" title=\"PO Page Dynamic Detail User\">\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.ts\"> </file>\n * </example>\n */\nexport declare class PoPageDynamicDetailComponent implements OnInit, OnDestroy {\n    private router;\n    private activatedRoute;\n    private poNotification;\n    private poDialogService;\n    private poPageDynamicService;\n    private poPageDynamicDetailActionsService;\n    private poPageCustomizationService;\n    /** Objeto com propriedades do breadcrumb. */\n    breadcrumb?: PoBreadcrumb;\n    /**\n     * Função ou serviço que será executado na inicialização do componente.\n     *\n     * A propriedade aceita os seguintes tipos:\n     * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n     * - `function`: Método que será executado.\n     *\n     * O retorno desta função deve ser do tipo `PoPageDynamicDetailOptions`,\n     * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\n     *\n     * Por exemplo:\n     *\n     * ```\n     * getPageOptions(): PoPageDynamicDetailOptions {\n     * return {\n     *   actions:\n     *     { new: 'new', edit: 'edit/:id', remove: true },\n     *   fields: [\n     *     { property: 'idCard', gridColumns: 6 }\n     *   ]\n     * };\n     * }\n     *\n     * ```\n     * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n     * ```\n     *  [p-load]=\"onLoadOptions.bind(this)\"\n     * ```\n     */\n    onLoad: string | (() => PoPageDynamicDetailOptions);\n    /** Título da página. */\n    title: string;\n    /**\n     * @description\n     *\n     * Endpoint usado pelo template para requisição do recurso que serão exibido.\n     *\n     * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\n     * setados como `key: true`.\n     *\n     * > `DELETE {end-point}/{keys}`\n     *\n     * ```\n     *  <po-page-dynamic-detail\n     *    [p-actions]=\"{ remove: '/' }\"\n     *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n     *    p-service=\"/api/po-samples/v1/people\"\n     *    ...>\n     *  </po-page-dynamic-detail>\n     * ```\n     *\n     * Resquisição disparada, onde a propriedade `id` é igual a 2:\n     *\n     * ```\n     *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n     *  Host: localhost:4000\n     *  Connection: keep-alive\n     *  Accept: application/json, text/plain\n     *  ...\n     * ```\n     *\n     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\n     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\n     * >\n     * > `GET {end-point}/metadata?type=detail&version={version}`\n     */\n    serviceApi: string;\n    literals: any;\n    model: any;\n    private subscriptions;\n    private _actions;\n    private _autoRouter;\n    private _duplicates;\n    private _fields;\n    private _keys;\n    private _pageActions;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Define as ações da página de acordo com a interface `PoPageDynamicDetailActions`.\n     */\n    set actions(value: PoPageDynamicDetailActions);\n    get actions(): PoPageDynamicDetailActions;\n    /**\n     * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\n     *\n     * @optional\n     *\n     * @description\n     *\n     * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações\n     * estejam definidas nas ações.\n     *\n     * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.\n     *\n     * @default false\n     */\n    set autoRouter(value: boolean);\n    get autoRouter(): boolean;\n    /** Lista dos campos exibidos na página. */\n    set fields(value: Array<PoPageDynamicDetailField>);\n    get fields(): Array<PoPageDynamicDetailField>;\n    constructor(router: Router, activatedRoute: ActivatedRoute, poNotification: PoNotificationService, poDialogService: PoDialogService, poPageDynamicService: PoPageDynamicService, poPageDynamicDetailActionsService: PoPageDynamicDetailActionsService, poPageCustomizationService: PoPageCustomizationService, languageService: PoLanguageService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    get duplicates(): any[];\n    get keys(): any[];\n    get pageActions(): PoPageAction[];\n    private remove;\n    private confirmRemove;\n    private executeRemove;\n    private formatUniqueKey;\n    private goBack;\n    private executeBackAction;\n    private loadData;\n    private setUndefinedToModelAndActions;\n    private getMetadata;\n    private navigateTo;\n    private openEdit;\n    private executeEditAction;\n    private openEditUrl;\n    private resolveUrl;\n    private getPageActions;\n    private getKeysByFields;\n    private getDuplicatesByFields;\n    private isObject;\n    private loadDataFromAPI;\n    private loadOptionsOnInitialize;\n    private getPoDynamicPageOptions;\n}\n"]}