{"version":3,"file":"po-page-dynamic-list-base.component.d.ts","sources":["po-page-dynamic-list-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { PoBreadcrumb } from '@po-ui/ng-components';\nimport { PoPageDynamicTableFilters } from './interfaces/po-page-dynamic-table-filters.interface';\nexport declare class PoPageDynamicListBaseComponent {\n    /** Objeto com propriedades do breadcrumb. */\n    breadcrumb?: PoBreadcrumb;\n    /** Endpoint da API dos recursos que serão exibidos. */\n    /**\n     * @description\n     *\n     * Endpoint usado pelo template para requisição dos recursos que serão exibidos.\n     *\n     * Ao realizar requisições de busca, podem ser enviados os parâmetros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\n     *\n     * Caso a coluna estiver ordenada descendentemente será enviada da seguinte forma: `-name`, se for ordenada\n     * ascendentemente será enviada apenas com o nome da coluna, por exemplo: `name`.\n     *\n     * Exemplo de uma requisição de busca:\n     *\n     * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\n     *\n     * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\n     * setados como `key: true`.\n     *\n     * > `DELETE {end-point}/{keys}`\n     *\n     * ```\n     *  <po-page-dynamic-table\n     *    [p-actions]=\"{ remove: true }\"\n     *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n     *    p-service=\"/api/po-samples/v1/people\"\n     *    ...>\n     *  </po-page-dynamic-table>\n     * ```\n     *\n     * Resquisição disparada, onde a propriedade `id` é igual a 2:\n     *\n     * ```\n     *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\n     *  Host: localhost:4000\n     *  Connection: keep-alive\n     *  Accept: application/json, text/plain\n     *  ...\n     * ```\n     *\n     * Para a ação `removeAll`, será feito uma requisição de exclusão em lote para esse mesmo endpoint passando, uma lista\n     * de objetos com os campos setados como `key: true` via `payload`.\n     *\n     * > `DELETE {end-point}`\n     *\n     * > `Payload: [ {key}, {key} ... {key} ]`\n     *\n     * ```\n     *  <po-page-dynamic-table\n     *    [p-actions]=\"{ removeAll: true }\"\n     *    [p-fields]=\"[ { property: 'id', key: true } ]\"\n     *    p-service=\"/api/po-samples/v1/people\"\n     *    ...>\n     *  </po-page-dynamic-table>\n     * ```\n     *\n     * Resquisição disparada, onde foram selecionados 3 itens para serem removidos:\n     *\n     * ```\n     *  DELETE /api/po-samples/v1/people HTTP/1.1\n     *  Host: localhost:4000\n     *  Connection: keep-alive\n     *  Accept: application/json, text/plain\n     *  ...\n     * ```\n     *\n     * Request payload:\n     *\n     * ```\n     * [{\"id\":2},{\"id\":4},{\"id\":5}]\n     * ```\n     *\n     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\n     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\n     * >\n     * > `GET {end-point}/metadata?type=list&version={version}`\n     */\n    serviceApi: string;\n    /** Título da página. */\n    title: string;\n    private _autoRouter;\n    private _columns;\n    private _duplicates;\n    private _fields;\n    private _filters;\n    private _keys;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `p-actions`\n     *\n     * As rotas criadas serão baseadas na propriedade `p-actions`.\n     *\n     * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.\n     *\n     * @default false\n     */\n    set autoRouter(value: boolean);\n    get autoRouter(): boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Lista dos campos usados na tabela e busca avançada.\n     *\n     *\n     * > Caso não seja definido fields a tabela assumirá o comportamento padrão.\n     */\n    set fields(fields: Array<PoPageDynamicTableFilters>);\n    get fields(): Array<PoPageDynamicTableFilters>;\n    set columns(value: any[]);\n    get columns(): any[];\n    set duplicates(value: Array<string>);\n    get duplicates(): Array<string>;\n    set filters(value: Array<PoPageDynamicTableFilters>);\n    get filters(): Array<PoPageDynamicTableFilters>;\n    set keys(value: Array<string>);\n    get keys(): Array<string>;\n    private setFieldsProperties;\n}\n"]}