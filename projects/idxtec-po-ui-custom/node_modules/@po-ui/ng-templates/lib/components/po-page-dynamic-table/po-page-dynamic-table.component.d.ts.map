{"version":3,"file":"po-page-dynamic-table.component.d.ts","sources":["po-page-dynamic-table.component.d.ts"],"names":[],"mappingssourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { PoDialogService, PoLanguageService, PoNotificationService, PoPageAction, PoTableAction, PoTableColumnSort } from '@po-ui/ng-components';\nimport { PoPageDynamicListBaseComponent } from './po-page-dynamic-list-base.component';\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\nimport { PoPageDynamicTableActions } from './interfaces/po-page-dynamic-table-actions.interface';\nimport { PoPageDynamicTableOptions } from './interfaces/po-page-dynamic-table-options.interface';\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\nimport { PoPageDynamicTableActionsService } from './po-page-dynamic-table-actions.service';\nimport { PoPageDynamicTableCustomAction } from './interfaces/po-page-dynamic-table-custom-action.interface';\nimport { PoPageDynamicTableCustomTableAction } from './interfaces/po-page-dynamic-table-custom-table-action.interface';\n/**\n * @docsExtends PoPageDynamicListBaseComponent\n *\n * @description\n *\n * O `po-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,\n * o mesmo também suporta metadados conforme especificado na documentação.\n *\n * ### Utilização via rota\n *\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\n *\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\n * e depois irá buscar da rota definida na propriedade serviceLoadApi\n *\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\n * se o cache não existe será disparado uma notificação.\n *\n * ```\n * {\n *   path: 'people',\n *   component: PoPageDynamicTableComponent,\n *   data: {\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post\n *   }\n * }\n *\n * ```\n *\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\n * tipo do metadado esperado e a versão cacheada pelo browser.\n *\n * O formato esperado na resposta da requisição está especificado na interface\n * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:\n *\n * ```\n *  {\n *   version: 1,\n *   title: 'Person Table',\n *   fields: [\n *     { property: 'id', key: true, disabled: true },\n *     { property: 'status' },\n *     { property: 'name' },\n *     { property: 'nickname' },\n *     { property: 'birthdate', label: 'Birth date' },\n *     { property: 'genre' },\n *     { property: 'city' },\n *     { property: 'country' }\n *   ],\n *   keepFilters: true\n * }\n * ```\n *\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\n * ```\n * GET {end-point}/metadata?type=list&version={version}\n * ```\n *\n * @example\n *\n * <example name=\"po-page-dynamic-table-basic\" title=\"PO Page Dynamic Table Basic\">\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts\"> </file>\n * </example>\n *\n * <example name=\"po-page-dynamic-table-users\" title=\"PO Page Dynamic Table - Users\">\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts\"> </file>\n *  <file name=\"sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.service.ts\"> </file>\n * </example>\n */\nexport declare class PoPageDynamicTableComponent extends PoPageDynamicListBaseComponent implements OnInit, OnDestroy {\n    private router;\n    private activatedRoute;\n    private poDialogService;\n    private poNotification;\n    private poPageDynamicService;\n    private poPageCustomizationService;\n    private poPageDynamicTableActionsService;\n    /**\n     * Função ou serviço que será executado na inicialização do componente.\n     *\n     * A propriedade aceita os seguintes tipos:\n     * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n     * - `function`: Método que será executado.\n     *\n     * O retorno desta função deve ser do tipo `PoPageDynamicTableOptions`,\n     * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\n     *\n     * Por exemplo:\n     *\n     * ```\n     * getPageOptions(): PoPageDynamicTableOptions {\n     * return {\n     *   actions:\n     *     { new: 'new', edit: 'edit/:id', remove: true },\n     *   fields: [\n     *     { property: 'idCard', gridColumns: 6 }\n     *   ]\n     * };\n     * }\n     *\n     * ```\n     * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n     * ```\n     *  [p-load]=\"onLoadOptions.bind(this)\"\n     * ```\n     */\n    onLoad: string | (() => PoPageDynamicTableOptions);\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Mantém na modal de `Busca Avançada` os valores preenchidos do último filtro realizado pelo usuário.\n     *\n     * @default `false`\n     */\n    keepFilters: boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.\n     *\n     * Desta forma, ao ter uma pesquisa avançada estabelecida e ser\n     * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa\n     * rápida também na lista de `disclaimers` a aplicando uma nova busca com a concatenação.\n     *\n     * Por exemplo, com os seguintes filtros aplicados:\n     *   - filtro avançado: `{ name: 'Mike', age: '12' }`\n     *   - filtro rápido: `{ search: 'paper' }`\n     *\n     * A requisição dos dados na API ficará com os parâmetros:\n     * ```\n     * page=1&pageSize=10&name=Mike&age=12&search=paper\n     * ```\n     *\n     * @default `false`\n     */\n    concatFilters: boolean;\n    hasNext: boolean;\n    items: any[];\n    literals: any;\n    pageActions: Array<PoPageAction>;\n    tableActions: Array<PoTableAction>;\n    private _actions;\n    private _pageCustomActions;\n    private _quickSearchWidth;\n    private _tableCustomActions;\n    private page;\n    private params;\n    private sortedColumn;\n    private subscriptions;\n    private hasCustomActionWithSelectable;\n    private _customPageListActions;\n    private _customTableActions;\n    private _defaultPageActions;\n    private _defaultTableActions;\n    private set defaultPageActions(value);\n    private set defaultTableActions(value);\n    private set customPageListActions(value);\n    private set customTableActions(value);\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Ações da página e da tabela.\n     * > Caso utilizar a ação padrão de excluir, a mesma será exibida por último na tabela.\n     */\n    set actions(value: PoPageDynamicTableActions);\n    get actions(): PoPageDynamicTableActions;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Lista de ações customizadas da página que serão incorporadas às ações\n     * informadas através da propriedade `p-actions`.\n     *\n     * Essas ações ficam localizadas na parte superior da página em botões com ações.\n     *\n     * Exemplo de utilização:\n     * ```\n     * [\n     *  { label: 'Export', action: this.export.bind(this) },\n     *  { label: 'Print', action: this.print.bind(this) }\n     * ];\n     * ```\n     */\n    set pageCustomActions(value: Array<PoPageDynamicTableCustomAction>);\n    get pageCustomActions(): Array<PoPageDynamicTableCustomAction>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Lista de ações customizadas na tabela da página que serão incorporadas às ações\n     * informadas através da propriedade `p-actions`.\n     *\n     * Exemplo de utilização:\n     * ```\n     * [\n     *  { label: 'Apply discount', action: this.applyDiscount.bind(this) },\n     *  { label: 'Details', action: this.details.bind(this) }\n     * ];\n     * ```\n     * > Caso utilizar a ação padrão de excluir, a mesma será exibida por último na tabela.\n     */\n    set tableCustomActions(value: Array<PoPageDynamicTableCustomTableAction>);\n    get tableCustomActions(): Array<PoPageDynamicTableCustomTableAction>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Largura do campo de busca, utilizando o *Grid System*,\n     * e limitado ao máximo de 6 colunas. O tamanho mínimo é controlado\n     * conforme resolução de tela para manter a consistência do layout.\n     */\n    set quickSearchWidth(value: number);\n    get quickSearchWidth(): number;\n    constructor(router: Router, activatedRoute: ActivatedRoute, poDialogService: PoDialogService, poNotification: PoNotificationService, poPageDynamicService: PoPageDynamicService, poPageCustomizationService: PoPageCustomizationService, poPageDynamicTableActionsService: PoPageDynamicTableActionsService, languageService: PoLanguageService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onAdvancedSearch(filter: any): void;\n    onChangeDisclaimers(disclaimers: any): void;\n    onQuickSearch(termTypedInQuickSearch: any): void;\n    onSort(sortedColumn: PoTableColumnSort): void;\n    showMore(): void;\n    get enableSelectionTable(): boolean;\n    get hasActionRemoveAll(): boolean;\n    private confirmRemove;\n    private confirmRemoveAll;\n    private formatUniqueKey;\n    private getOrderParam;\n    private loadData;\n    private getMetadata;\n    private navigateTo;\n    private openDetail;\n    private executeDetail;\n    private getPathFromNewUrl;\n    private openDuplicate;\n    private executeDuplicate;\n    private openEdit;\n    private executeEditAction;\n    private openEditUrl;\n    private modifyUITableItem;\n    private openNew;\n    private executeNew;\n    /**\n     * Caso exista mais de um identificador, será concatenado com '|'.\n     *\n     * Ex: { id: 1, company: 'po' }\n     *\n     * Para o endpoint /resources/:id será executada a url /resources/1|po\n     */\n    private remove;\n    private deleteAction;\n    private removeFromUI;\n    private removeAll;\n    private getSelectedItemsKeys;\n    private returnResourcesKeys;\n    private deleteAllAction;\n    private removeLocalItems;\n    private resolveUrl;\n    private setPageActions;\n    private transformCustomActionsToPageListAction;\n    private transformTableCustomActionsToTableActions;\n    private isDisablePageCustomAction;\n    private callPageCustomAction;\n    private callTableCustomAction;\n    private setRemoveAllAction;\n    private disableRemoveAll;\n    private setTableActions;\n    private loadDataFromAPI;\n    private getInitialValuesFromFilter;\n    private loadOptionsOnInitialize;\n    private getPoDynamicPageOptions;\n    private showRemove;\n    private updateFilterValue;\n    private updatePageActions;\n    private updateTableActions;\n}\n"]}