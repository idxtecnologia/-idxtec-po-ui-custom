{"version":3,"file":"po-page-dynamic-search-base.component.d.ts","sources":["po-page-dynamic-search-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\nimport { PoBreadcrumb, PoLanguageService, PoPageAction } from '@po-ui/ng-components';\nimport { PoPageDynamicSearchLiterals } from './po-page-dynamic-search-literals.interface';\nimport { PoAdvancedFilterLiterals } from './po-advanced-filter/po-advanced-filter-literals.interface';\nimport { PoPageDynamicSearchOptions } from './po-page-dynamic-search-options.interface';\nimport { PoPageDynamicSearchFilters } from './po-page-dynamic-search-filters.interface';\nexport declare const poPageDynamicSearchLiteralsDefault: {\n    en: PoPageDynamicSearchLiterals;\n    es: PoPageDynamicSearchLiterals;\n    pt: PoPageDynamicSearchLiterals;\n    ru: PoPageDynamicSearchLiterals;\n};\n/**\n * @description\n *\n * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs\n * e exiba as informações.\n */\nexport declare abstract class PoPageDynamicSearchBaseComponent {\n    /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */\n    actions?: Array<PoPageAction>;\n    /** Objeto com propriedades do breadcrumb. */\n    breadcrumb?: PoBreadcrumb;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Mantém na busca avançada os valores preenchidos do último filtro realizado pelo usuário.\n     *\n     * @default `false`\n     */\n    keepFilters: boolean;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.\n     *\n     * Desta forma, ao ter uma pesquisa avançada estabelecida e ser\n     * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa\n     * rápida também na lista de `disclaimers`.\n     *\n     * > Os valores que são emitidos no `p-quick-search` e no `p-advanced-search`\n     * permanecem separados durante a emissão dos valores alterados. A concatenação\n     * é apenas nos `disclaimers`.\n     *\n     * @default `false`\n     */\n    concatFilters: boolean;\n    /**\n     * Função ou serviço que será executado na inicialização do componente.\n     *\n     * A propriedade aceita os seguintes tipos:\n     * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\n     * - `function`: Método que será executado.\n     *\n     * O retorno desta função deve ser do tipo `PoPageDynamicSearchOptions`,\n     * onde o usuário poderá customizar novos filtros, breadcrumb, title e actions\n     *\n     * Por exemplo:\n     *\n     * ```\n     * getPageOptions(): PoPageDynamicSearchOptions {\n     * return {\n     *   actions: [\n     *     { label: 'Find on Google' },\n     *   ],\n     *   filters: [\n     *     { property: 'idCard', gridColumns: 6 }\n     *   ]\n     * };\n     * }\n     *\n     * ```\n     * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n     * ```\n     *  [p-load]=\"onLoadOptions.bind(this)\"\n     * ```\n     */\n    onLoad: string | (() => PoPageDynamicSearchOptions);\n    /** Título da página. */\n    title: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.\n     *\n     * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.\n     */\n    advancedSearch: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento disparado ao remover um ou todos os disclaimers pelo usuário.\n     */\n    changeDisclaimers: EventEmitter<any>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado.\n     */\n    quickSearch: EventEmitter<string>;\n    advancedFilterLiterals: PoAdvancedFilterLiterals;\n    private _filters;\n    private _literals;\n    private _quickSearchWidth;\n    private previousFilters;\n    private language;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Objeto com as literais usadas no `po-page-dynamic-search`.\n     *\n     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\n     *\n     * ```\n     *  const customLiterals: PoPageDynamicSearchLiterals = {\n     *    disclaimerGroupTitle: 'Filtros aplicados:',\n     *    filterTitle: 'Filtro avançado',\n     *    filterCancelLabel: 'Fechar',\n     *    filterConfirmLabel: 'Aplicar',\n     *    quickSearchLabel: 'Valor pesquisado:',\n     *    searchPlaceholder: 'Pesquise aqui'\n     *  };\n     * ```\n     *\n     * Ou passando apenas as literais que deseja customizar:\n     *\n     * ```\n     *  const customLiterals: PoPageDynamicSearchLiterals = {\n     *    filterTitle: 'Filtro avançado'\n     *  };\n     * ```\n     *\n     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\n     *\n     * ```\n     * <po-page-dynamic-search\n     *   [p-literals]=\"customLiterals\">\n     * </po-page-dynamic-search>\n     * ```\n     *\n     * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\n     */\n    set literals(value: PoPageDynamicSearchLiterals);\n    get literals(): PoPageDynamicSearchLiterals;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.\n     */\n    set filters(filters: Array<PoPageDynamicSearchFilters>);\n    get filters(): Array<PoPageDynamicSearchFilters>;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Largura do campo de busca, utilizando o *Grid System*,\n     * e limitado ao máximo de 6 colunas. O tamanho mínimo é controlado\n     * conforme resolução de tela para manter a consistência do layout.\n     */\n    set quickSearchWidth(value: number);\n    get quickSearchWidth(): number;\n    constructor(languageService: PoLanguageService);\n    protected setAdvancedFilterLiterals(literals: PoPageDynamicSearchLiterals): void;\n    abstract onChangeFilters(filters: Array<PoPageDynamicSearchFilters>): any;\n}\n"]}