{"version":3,"file":"po-page-blocked-user-base.component.d.ts","sources":["po-page-blocked-user-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\n/**\n * @description\n *\n * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.\n * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.\n *\n * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.\n * Os textos das telas são pré-definidos e imutáveis, porém,\n * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.\n *\n * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.\n *\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\n * ```\n *   \"assets\": [\n *     \"src/assets\",\n *     \"src/favicon.ico\",\n *     {\n *       \"glob\": \"**\\/*\",\n *       \"input\": \"node_modules/@po-ui/style/images\",\n *       \"output\": \"assets/images\"\n *     }\n *   ]\n * ```\n *\n * _______________\n *\n * #### Praticidade\n * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,\n * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica\n * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\n *\n *\n * ```\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@po-ui/ng-templates';\n *\n *   ...\n *   const routes: Routes = [\n *     {\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\n *         contactEmail: 'dev.po@po-ui.com',\n *         contactPhone: '0800 1234 000',\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\n *         urlBack: '/home'\n *       }\n *     }\n *     ...\n *   ];\n *\n *   @NgModule({\n *     imports: [RouterModule.forRoot(routes)],\n *     exports: [RouterModule]\n *   })\n *   export class AppRoutingModule { }\n * ```\n *\n * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\n *\n */\nexport declare class PoPageBlockedUserBaseComponent {\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Valor para o email de contato que deve ser exibido. A ação está de acordo com o protocolo MAILTO e é possível definir\n     * tanto rotas internas quanto externas.\n     */\n    contactEmail: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Valor para o telefone de contato que deve ser exibido. A ação está de acordo com o protocolo TEL.\n     *\n     * > A propriedade não contem tratamento de máscara, fica a critério do desenvolvedor defini-la.\n     */\n    contactPhone: string;\n    /** Caminho para a logomarca localizada na parte superior, caso não seja definida ou seja inválida assume a logo padrão do PO UI. */\n    logo?: string;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Caminho para a logomarca localizada no rodapé.\n     */\n    secondaryLogo?: string;\n    private _params;\n    private _reason;\n    private _urlBack;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Designação de valores usados para a customização da mensagem de bloqueio.\n     * Confira abaixo os valores pré-definidos.\n     *\n     * ```\n     *  const customLiterals: PoPageBlockedUserReasonParams = {\n     *    attempts: 5,\n     *    days: 90,\n     *    hours: 24\n     *  };\n     * ```\n     *\n     * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.\n     *\n     * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.\n     *\n     */\n    set params(value: PoPageBlockedUserReasonParams);\n    get params(): PoPageBlockedUserReasonParams;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.\n     *\n     * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.\n     *\n     * @default `PoPageBlockedUserReason.None`\n     */\n    set reason(value: PoPageBlockedUserReason);\n    get reason(): PoPageBlockedUserReason;\n    /**\n     * @optional\n     *\n     * @description\n     *\n     * URL para a ação de retorno da página.\n     *\n     * @default `/`\n     */\n    set urlBack(url: string);\n    get urlBack(): string;\n}\n"]}